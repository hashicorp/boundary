### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 75baee3cd1f2dec3fe432e203855e606de12d628
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: b7f11ff0cceefd4fb00274c88c173be0f84d9a8c
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: be384c5b09fd0611dfca42ca12e8861ab871b61f
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: e7c5021a194b2bacde4efa4371a7536c8e675242
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 14bfac5d2c51918df5993842f69d992ae7bd71fb
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: fb6329db34a29d2fba5e46ca81720596031347fb
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: d1bec53618915df2a36d647f53f58bf9b247f369
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 505d2175eab7c1020099eff46b089903f2362cac
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 74cb09762e110daad64e017b9e89738b6971739d
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 26cc9da432b62a22288c67858d9dd020a3d84ff8
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 568d427808fbfe9a2085d9560b761f84c158cb85
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: e220ec23d9eec39cebb4998bf5a499a2b0d19f0f
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 2e2e8d6885b014b3be97416640628f8a7783514e
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 75baee3cd1f2dec3fe432e203855e606de12d628
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e220ec23d9eec39cebb4998bf5a499a2b0d19f0f
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1 make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-099928364fd2887ff530039cc75059de9f8b668f-image
        name: Build base layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e-image
        name: Build ui layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34-image
        name: Build go-modules layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-image
        name: Build copy-source layer
    - run:
        command: make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-save
        name: Export builder image
    - save_cache:
        key: cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        name: Save layer copy-source to cache.
        paths:
        - .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz
    - run:
        command: mv .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
        name: Prepare layer go-modules for caching
    - save_cache:
        key: cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        name: Save layer go-modules to cache.
        paths:
        - .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
    - run:
        command: mv .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
        name: Prepare layer ui for caching
    - save_cache:
        key: cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        name: Save layer ui to cache.
        paths:
        - .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
    - run:
        command: mv .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
        name: Prepare layer base for caching
    - save_cache:
        key: cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Save layer base to cache.
        paths:
        - .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: fb6329db34a29d2fba5e46ca81720596031347fb
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 14bfac5d2c51918df5993842f69d992ae7bd71fb
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: be384c5b09fd0611dfca42ca12e8861ab871b61f
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b7f11ff0cceefd4fb00274c88c173be0f84d9a8c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 74cb09762e110daad64e017b9e89738b6971739d
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: e7c5021a194b2bacde4efa4371a7536c8e675242
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 568d427808fbfe9a2085d9560b761f84c158cb85
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: |
          make test-ci
        name: Run Acceptance Tests
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS <<< "master"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "xmaster" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "webhook" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "" ]; then
                IFS="," read -ra SLACK_MEMBERS <<< ""
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ true = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded!\", \
                                  \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                  ], \
                                  \"actions\": [ \
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " webhook
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    \"attachments\": [ \
                      { \
                        \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed!\", \
                        \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                        ], \
                        \"actions\": [ \
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " webhook
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
    working_directory: ~/boundary
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 505d2175eab7c1020099eff46b089903f2362cac
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 26cc9da432b62a22288c67858d9dd020a3d84ff8
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: d1bec53618915df2a36d647f53f58bf9b247f369
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2e2e8d6885b014b3be97416640628f8a7783514e
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
        - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
        - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
        - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  default:
    jobs:
    - build
  version: 2
