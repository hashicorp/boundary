version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-a0554df6c19ccd03a9a1ee035cb15e69108b7442-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-990924b65cc3357d39a39ae66c56a32029be4523-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058.tar.gz
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-1028b19b33da809289c948d9b21345406526ac73-{{checksum ".buildcache/cache-keys/package-1028b19b33da809289c948d9b21345406526ac73"}}
          name: Restore package cache
      - restore_cache:
          key: package-0ad2557a720f46e905ce6460e57bb7add003de2f-{{checksum ".buildcache/cache-keys/package-0ad2557a720f46e905ce6460e57bb7add003de2f"}}
          name: Restore package cache
      - restore_cache:
          key: package-bcbb8b89ca28db271e9b1d846a3a80e58476362f-{{checksum ".buildcache/cache-keys/package-bcbb8b89ca28db271e9b1d846a3a80e58476362f"}}
          name: Restore package cache
      - restore_cache:
          key: package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e-{{checksum ".buildcache/cache-keys/package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e"}}
          name: Restore package cache
      - restore_cache:
          key: package-a5c8578a790025e97a9a22315ba6dc4ea44d42da-{{checksum ".buildcache/cache-keys/package-a5c8578a790025e97a9a22315ba6dc4ea44d42da"}}
          name: Restore package cache
      - restore_cache:
          key: package-cb1669879893f578aa0d627c20d7da2703642768-{{checksum ".buildcache/cache-keys/package-cb1669879893f578aa0d627c20d7da2703642768"}}
          name: Restore package cache
      - restore_cache:
          key: package-557807e6d2877230b7402bdb866455249eae33d2-{{checksum ".buildcache/cache-keys/package-557807e6d2877230b7402bdb866455249eae33d2"}}
          name: Restore package cache
      - restore_cache:
          key: package-50015dacb8f89368666c2ebb92383e5cfd34478b-{{checksum ".buildcache/cache-keys/package-50015dacb8f89368666c2ebb92383e5cfd34478b"}}
          name: Restore package cache
      - restore_cache:
          key: package-b4d52303c05de07cdf08e734bcaba86bced054aa-{{checksum ".buildcache/cache-keys/package-b4d52303c05de07cdf08e734bcaba86bced054aa"}}
          name: Restore package cache
      - restore_cache:
          key: package-dae795b702c0e5830e87b39754719c750b0c2bef-{{checksum ".buildcache/cache-keys/package-dae795b702c0e5830e87b39754719c750b0c2bef"}}
          name: Restore package cache
      - restore_cache:
          key: package-72ac4a3ece1702e414b0f518010b11875a29ba80-{{checksum ".buildcache/cache-keys/package-72ac4a3ece1702e414b0f518010b11875a29ba80"}}
          name: Restore package cache
      - restore_cache:
          key: package-f2e08c6e4e4442df29c751e28b36933b9624e4a9-{{checksum ".buildcache/cache-keys/package-f2e08c6e4e4442df29c751e28b36933b9624e4a9"}}
          name: Restore package cache
      - restore_cache:
          key: package-66f342128e3492ee784e2d4eb61f00035edfd542-{{checksum ".buildcache/cache-keys/package-66f342128e3492ee784e2d4eb61f00035edfd542"}}
          name: Restore package cache
      - restore_cache:
          key: package-313449f5091d6d3ac330d86a581de0539e2b2a8f-{{checksum ".buildcache/cache-keys/package-313449f5091d6d3ac330d86a581de0539e2b2a8f"}}
          name: Restore package cache
      - restore_cache:
          key: package-7b315c477dc71be5fefba9e8e2c70f73813ae948-{{checksum ".buildcache/cache-keys/package-7b315c477dc71be5fefba9e8e2c70f73813ae948"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-570501abb66bcfaa.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-570501abb66bcfaa.tar.gz .buildcache/packages lockfile-570501abb66bcfaa.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-570501abb66bcfaa.tar.gz .buildcache/packages/store/*.json lockfile-570501abb66bcfaa.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-570501abb66bcfaa.yml
      - store_artifacts:
          path: packages-570501abb66bcfaa.tar.gz
      - store_artifacts:
          path: meta-570501abb66bcfaa.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1028b19b33da809289c948d9b21345406526ac73-{{checksum ".buildcache/cache-keys/package-1028b19b33da809289c948d9b21345406526ac73"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1028b19b33da809289c948d9b21345406526ac73-{{checksum ".buildcache/cache-keys/package-1028b19b33da809289c948d9b21345406526ac73"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1028b19b33da809289c948d9b21345406526ac73
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0ad2557a720f46e905ce6460e57bb7add003de2f-{{checksum ".buildcache/cache-keys/package-0ad2557a720f46e905ce6460e57bb7add003de2f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0ad2557a720f46e905ce6460e57bb7add003de2f-{{checksum ".buildcache/cache-keys/package-0ad2557a720f46e905ce6460e57bb7add003de2f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0ad2557a720f46e905ce6460e57bb7add003de2f
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bcbb8b89ca28db271e9b1d846a3a80e58476362f-{{checksum ".buildcache/cache-keys/package-bcbb8b89ca28db271e9b1d846a3a80e58476362f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bcbb8b89ca28db271e9b1d846a3a80e58476362f-{{checksum ".buildcache/cache-keys/package-bcbb8b89ca28db271e9b1d846a3a80e58476362f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bcbb8b89ca28db271e9b1d846a3a80e58476362f
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e-{{checksum ".buildcache/cache-keys/package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e-{{checksum ".buildcache/cache-keys/package-b93bfd18bd6a5d7707b542a2aae8457fd9c3642e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b93bfd18bd6a5d7707b542a2aae8457fd9c3642e
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a5c8578a790025e97a9a22315ba6dc4ea44d42da-{{checksum ".buildcache/cache-keys/package-a5c8578a790025e97a9a22315ba6dc4ea44d42da"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a5c8578a790025e97a9a22315ba6dc4ea44d42da-{{checksum ".buildcache/cache-keys/package-a5c8578a790025e97a9a22315ba6dc4ea44d42da"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a5c8578a790025e97a9a22315ba6dc4ea44d42da
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cb1669879893f578aa0d627c20d7da2703642768-{{checksum ".buildcache/cache-keys/package-cb1669879893f578aa0d627c20d7da2703642768"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cb1669879893f578aa0d627c20d7da2703642768-{{checksum ".buildcache/cache-keys/package-cb1669879893f578aa0d627c20d7da2703642768"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cb1669879893f578aa0d627c20d7da2703642768
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-557807e6d2877230b7402bdb866455249eae33d2-{{checksum ".buildcache/cache-keys/package-557807e6d2877230b7402bdb866455249eae33d2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-557807e6d2877230b7402bdb866455249eae33d2-{{checksum ".buildcache/cache-keys/package-557807e6d2877230b7402bdb866455249eae33d2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 557807e6d2877230b7402bdb866455249eae33d2
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-50015dacb8f89368666c2ebb92383e5cfd34478b-{{checksum ".buildcache/cache-keys/package-50015dacb8f89368666c2ebb92383e5cfd34478b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-50015dacb8f89368666c2ebb92383e5cfd34478b-{{checksum ".buildcache/cache-keys/package-50015dacb8f89368666c2ebb92383e5cfd34478b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 50015dacb8f89368666c2ebb92383e5cfd34478b
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b4d52303c05de07cdf08e734bcaba86bced054aa-{{checksum ".buildcache/cache-keys/package-b4d52303c05de07cdf08e734bcaba86bced054aa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b4d52303c05de07cdf08e734bcaba86bced054aa-{{checksum ".buildcache/cache-keys/package-b4d52303c05de07cdf08e734bcaba86bced054aa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b4d52303c05de07cdf08e734bcaba86bced054aa
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dae795b702c0e5830e87b39754719c750b0c2bef-{{checksum ".buildcache/cache-keys/package-dae795b702c0e5830e87b39754719c750b0c2bef"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dae795b702c0e5830e87b39754719c750b0c2bef-{{checksum ".buildcache/cache-keys/package-dae795b702c0e5830e87b39754719c750b0c2bef"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dae795b702c0e5830e87b39754719c750b0c2bef
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-72ac4a3ece1702e414b0f518010b11875a29ba80-{{checksum ".buildcache/cache-keys/package-72ac4a3ece1702e414b0f518010b11875a29ba80"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-72ac4a3ece1702e414b0f518010b11875a29ba80-{{checksum ".buildcache/cache-keys/package-72ac4a3ece1702e414b0f518010b11875a29ba80"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 72ac4a3ece1702e414b0f518010b11875a29ba80
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f2e08c6e4e4442df29c751e28b36933b9624e4a9-{{checksum ".buildcache/cache-keys/package-f2e08c6e4e4442df29c751e28b36933b9624e4a9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f2e08c6e4e4442df29c751e28b36933b9624e4a9-{{checksum ".buildcache/cache-keys/package-f2e08c6e4e4442df29c751e28b36933b9624e4a9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f2e08c6e4e4442df29c751e28b36933b9624e4a9
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-66f342128e3492ee784e2d4eb61f00035edfd542-{{checksum ".buildcache/cache-keys/package-66f342128e3492ee784e2d4eb61f00035edfd542"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-66f342128e3492ee784e2d4eb61f00035edfd542-{{checksum ".buildcache/cache-keys/package-66f342128e3492ee784e2d4eb61f00035edfd542"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 66f342128e3492ee784e2d4eb61f00035edfd542
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-313449f5091d6d3ac330d86a581de0539e2b2a8f-{{checksum ".buildcache/cache-keys/package-313449f5091d6d3ac330d86a581de0539e2b2a8f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-313449f5091d6d3ac330d86a581de0539e2b2a8f-{{checksum ".buildcache/cache-keys/package-313449f5091d6d3ac330d86a581de0539e2b2a8f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 313449f5091d6d3ac330d86a581de0539e2b2a8f
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7b315c477dc71be5fefba9e8e2c70f73813ae948-{{checksum ".buildcache/cache-keys/package-7b315c477dc71be5fefba9e8e2c70f73813ae948"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7507_{{checksum ".buildcache/cache-keys/copy-source-7507a590ca02bfc817431099a5b2a0cb5149f058"}}
          keys:
            - go-modules_36b1_{{checksum ".buildcache/cache-keys/go-modules-36b19bff970f7e940de7cc0a5c11ac1b8281b128"}}
            - ui_9909_{{checksum ".buildcache/cache-keys/ui-990924b65cc3357d39a39ae66c56a32029be4523"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7b315c477dc71be5fefba9e8e2c70f73813ae948-{{checksum ".buildcache/cache-keys/package-7b315c477dc71be5fefba9e8e2c70f73813ae948"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7b315c477dc71be5fefba9e8e2c70f73813ae948
workflows:
  build-570501abb66bcfaa:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
