### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - restore_cache:
        key: cache006-package-5278f993d7a8e3d134a4752638e922ca9f812a70-{{checksum ".buildcache/cache-keys/package-5278f993d7a8e3d134a4752638e922ca9f812a70"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 5278f993d7a8e3d134a4752638e922ca9f812a70
        name: Write package metadata for darwin_amd64_package
    - restore_cache:
        key: cache006-package-864e77d9fa8de083612f41eacacced6f660dc0ad-{{checksum ".buildcache/cache-keys/package-864e77d9fa8de083612f41eacacced6f660dc0ad"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 864e77d9fa8de083612f41eacacced6f660dc0ad
        name: Write package metadata for freebsd_386_package
    - restore_cache:
        key: cache006-package-c06917541fcdde1c59c2f579d8bfcccef3fab56c-{{checksum ".buildcache/cache-keys/package-c06917541fcdde1c59c2f579d8bfcccef3fab56c"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: c06917541fcdde1c59c2f579d8bfcccef3fab56c
        name: Write package metadata for freebsd_amd64_package
    - restore_cache:
        key: cache006-package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111-{{checksum ".buildcache/cache-keys/package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: ae613755656dcd2a5a1f8dcf46cb2493bdbb7111
        name: Write package metadata for freebsd_arm_package
    - restore_cache:
        key: cache006-package-37176cc329f9025faf8097ca3f0bc68168b2a2f0-{{checksum ".buildcache/cache-keys/package-37176cc329f9025faf8097ca3f0bc68168b2a2f0"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 37176cc329f9025faf8097ca3f0bc68168b2a2f0
        name: Write package metadata for linux_386_package
    - restore_cache:
        key: cache006-package-23cd02058561a2feb32fe9e23129c0e8866aa2fb-{{checksum ".buildcache/cache-keys/package-23cd02058561a2feb32fe9e23129c0e8866aa2fb"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 23cd02058561a2feb32fe9e23129c0e8866aa2fb
        name: Write package metadata for linux_amd64_package
    - restore_cache:
        key: cache006-package-0fc74ff0164ce2aa11e484ea519421f1421533ab-{{checksum ".buildcache/cache-keys/package-0fc74ff0164ce2aa11e484ea519421f1421533ab"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 0fc74ff0164ce2aa11e484ea519421f1421533ab
        name: Write package metadata for linux_arm_package
    - restore_cache:
        key: cache006-package-10245da9f02ca3811e1b4a75843f8c127d826e8b-{{checksum ".buildcache/cache-keys/package-10245da9f02ca3811e1b4a75843f8c127d826e8b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 10245da9f02ca3811e1b4a75843f8c127d826e8b
        name: Write package metadata for linux_arm64_package
    - restore_cache:
        key: cache006-package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb-{{checksum ".buildcache/cache-keys/package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 07bbd0fdf73adf1f27b25d016fce729b095aa7cb
        name: Write package metadata for netbsd_386_package
    - restore_cache:
        key: cache006-package-2eb099318b0e73152fd31283ef8e886551a74555-{{checksum ".buildcache/cache-keys/package-2eb099318b0e73152fd31283ef8e886551a74555"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 2eb099318b0e73152fd31283ef8e886551a74555
        name: Write package metadata for netbsd_amd64_package
    - restore_cache:
        key: cache006-package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b-{{checksum ".buildcache/cache-keys/package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: efe7bc2c9fc03d2c3443f99c02c750781ebbe92b
        name: Write package metadata for openbsd_386_package
    - restore_cache:
        key: cache006-package-6013a0cd26d33f46e6424177d347a699f28e9f25-{{checksum ".buildcache/cache-keys/package-6013a0cd26d33f46e6424177d347a699f28e9f25"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 6013a0cd26d33f46e6424177d347a699f28e9f25
        name: Write package metadata for openbsd_amd64_package
    - restore_cache:
        key: cache006-package-931bb1a8b04a52a517804b7c281eb3677e277f7b-{{checksum ".buildcache/cache-keys/package-931bb1a8b04a52a517804b7c281eb3677e277f7b"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: 931bb1a8b04a52a517804b7c281eb3677e277f7b
        name: Write package metadata for solaris_amd64_package
    - restore_cache:
        key: cache006-package-a8ace6003db7005bff210819eeebb8fac838a760-{{checksum ".buildcache/cache-keys/package-a8ace6003db7005bff210819eeebb8fac838a760"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: a8ace6003db7005bff210819eeebb8fac838a760
        name: Write package metadata for windows_386_package
    - restore_cache:
        key: cache006-package-bd48aa0ab06403c8e113131defe3541a977e5191-{{checksum ".buildcache/cache-keys/package-bd48aa0ab06403c8e113131defe3541a977e5191"}}
    - run:
        command: |
          make package-meta
        environment:
          PACKAGE_SPEC_ID: bd48aa0ab06403c8e113131defe3541a977e5191
        name: Write package metadata for windows_amd64_package
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-standalone.yml
    - store_artifacts:
        destination: lockfile-standalone.yml
        path: lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone
        path: .buildcache/packages
    - run:
        command: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
    - store_artifacts:
        destination: packages-standalone.tar.gz
        path: packages-standalone.tar.gz
    - run:
        command: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
    - store_artifacts:
        destination: meta-standalone.tar.gz
        path: meta-standalone.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 5278f993d7a8e3d134a4752638e922ca9f812a70
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-5278f993d7a8e3d134a4752638e922ca9f812a70-{{checksum ".buildcache/cache-keys/package-5278f993d7a8e3d134a4752638e922ca9f812a70"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-5278f993d7a8e3d134a4752638e922ca9f812a70-{{checksum ".buildcache/cache-keys/package-5278f993d7a8e3d134a4752638e922ca9f812a70"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: a8ace6003db7005bff210819eeebb8fac838a760
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-a8ace6003db7005bff210819eeebb8fac838a760-{{checksum ".buildcache/cache-keys/package-a8ace6003db7005bff210819eeebb8fac838a760"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-a8ace6003db7005bff210819eeebb8fac838a760-{{checksum ".buildcache/cache-keys/package-a8ace6003db7005bff210819eeebb8fac838a760"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build image cache
    - run:
        command: |
          if [ -f .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz ]; then
            echo "Exact match found in cache, skipping build."
            circleci-agent step halt
          else
            echo "No exact match found, proceeding with build."
          fi
        name: Finish early if loaded exact match from cache.
    - run:
        command: |
          LAYER_SPEC_ID=03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-b035732a9181cb923e58b88eff262c379a1a1ad2-image
        name: Build base layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6-image
        name: Build ui layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf-image
        name: Build go-modules layer
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-image
        name: Build copy-source layer
    - run:
        command: make -f packages*.lock/layer.mk 03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c-save
        name: Export builder image
    - save_cache:
        key: cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        name: Save layer copy-source to cache.
        paths:
        - .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz
    - run:
        command: mv .buildcache/archives/03-copy-source-ca8ebf7592f88b86f492c947caab70914efd951c.tar.gz .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
        name: Prepare layer go-modules for caching
    - save_cache:
        key: cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        name: Save layer go-modules to cache.
        paths:
        - .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz
    - run:
        command: mv .buildcache/archives/02-go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf.tar.gz .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
        name: Prepare layer ui for caching
    - save_cache:
        key: cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        name: Save layer ui to cache.
        paths:
        - .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz
    - run:
        command: mv .buildcache/archives/01-ui-a46925cd79db8d8f17f005774b1f4faef82d83b6.tar.gz .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
        name: Prepare layer base for caching
    - save_cache:
        key: cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Save layer base to cache.
        paths:
        - .buildcache/archives/00-base-b035732a9181cb923e58b88eff262c379a1a1ad2.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 10245da9f02ca3811e1b4a75843f8c127d826e8b
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-10245da9f02ca3811e1b4a75843f8c127d826e8b-{{checksum ".buildcache/cache-keys/package-10245da9f02ca3811e1b4a75843f8c127d826e8b"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-10245da9f02ca3811e1b4a75843f8c127d826e8b-{{checksum ".buildcache/cache-keys/package-10245da9f02ca3811e1b4a75843f8c127d826e8b"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 0fc74ff0164ce2aa11e484ea519421f1421533ab
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-0fc74ff0164ce2aa11e484ea519421f1421533ab-{{checksum ".buildcache/cache-keys/package-0fc74ff0164ce2aa11e484ea519421f1421533ab"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-0fc74ff0164ce2aa11e484ea519421f1421533ab-{{checksum ".buildcache/cache-keys/package-0fc74ff0164ce2aa11e484ea519421f1421533ab"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 37176cc329f9025faf8097ca3f0bc68168b2a2f0
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-37176cc329f9025faf8097ca3f0bc68168b2a2f0-{{checksum ".buildcache/cache-keys/package-37176cc329f9025faf8097ca3f0bc68168b2a2f0"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-37176cc329f9025faf8097ca3f0bc68168b2a2f0-{{checksum ".buildcache/cache-keys/package-37176cc329f9025faf8097ca3f0bc68168b2a2f0"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 864e77d9fa8de083612f41eacacced6f660dc0ad
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-864e77d9fa8de083612f41eacacced6f660dc0ad-{{checksum ".buildcache/cache-keys/package-864e77d9fa8de083612f41eacacced6f660dc0ad"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-864e77d9fa8de083612f41eacacced6f660dc0ad-{{checksum ".buildcache/cache-keys/package-864e77d9fa8de083612f41eacacced6f660dc0ad"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: c06917541fcdde1c59c2f579d8bfcccef3fab56c
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-c06917541fcdde1c59c2f579d8bfcccef3fab56c-{{checksum ".buildcache/cache-keys/package-c06917541fcdde1c59c2f579d8bfcccef3fab56c"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-c06917541fcdde1c59c2f579d8bfcccef3fab56c-{{checksum ".buildcache/cache-keys/package-c06917541fcdde1c59c2f579d8bfcccef3fab56c"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: efe7bc2c9fc03d2c3443f99c02c750781ebbe92b
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b-{{checksum ".buildcache/cache-keys/package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b-{{checksum ".buildcache/cache-keys/package-efe7bc2c9fc03d2c3443f99c02c750781ebbe92b"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 23cd02058561a2feb32fe9e23129c0e8866aa2fb
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-23cd02058561a2feb32fe9e23129c0e8866aa2fb-{{checksum ".buildcache/cache-keys/package-23cd02058561a2feb32fe9e23129c0e8866aa2fb"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-23cd02058561a2feb32fe9e23129c0e8866aa2fb-{{checksum ".buildcache/cache-keys/package-23cd02058561a2feb32fe9e23129c0e8866aa2fb"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  solaris_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 931bb1a8b04a52a517804b7c281eb3677e277f7b
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-931bb1a8b04a52a517804b7c281eb3677e277f7b-{{checksum ".buildcache/cache-keys/package-931bb1a8b04a52a517804b7c281eb3677e277f7b"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-931bb1a8b04a52a517804b7c281eb3677e277f7b-{{checksum ".buildcache/cache-keys/package-931bb1a8b04a52a517804b7c281eb3677e277f7b"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: |
          make test-ci
        name: Run Acceptance Tests
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS <<< "master"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "xmaster" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "webhook" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "" ]; then
                IFS="," read -ra SLACK_MEMBERS <<< ""
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ true = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded!\", \
                                  \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                  ], \
                                  \"actions\": [ \
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " webhook
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    \"attachments\": [ \
                      { \
                        \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed!\", \
                        \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                        ], \
                        \"actions\": [ \
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " webhook
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
    working_directory: ~/boundary
  netbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2eb099318b0e73152fd31283ef8e886551a74555
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-2eb099318b0e73152fd31283ef8e886551a74555-{{checksum ".buildcache/cache-keys/package-2eb099318b0e73152fd31283ef8e886551a74555"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-2eb099318b0e73152fd31283ef8e886551a74555-{{checksum ".buildcache/cache-keys/package-2eb099318b0e73152fd31283ef8e886551a74555"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  openbsd_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 6013a0cd26d33f46e6424177d347a699f28e9f25
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-6013a0cd26d33f46e6424177d347a699f28e9f25-{{checksum ".buildcache/cache-keys/package-6013a0cd26d33f46e6424177d347a699f28e9f25"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-6013a0cd26d33f46e6424177d347a699f28e9f25-{{checksum ".buildcache/cache-keys/package-6013a0cd26d33f46e6424177d347a699f28e9f25"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  netbsd_386_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 07bbd0fdf73adf1f27b25d016fce729b095aa7cb
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb-{{checksum ".buildcache/cache-keys/package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb-{{checksum ".buildcache/cache-keys/package-07bbd0fdf73adf1f27b25d016fce729b095aa7cb"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  freebsd_arm_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: ae613755656dcd2a5a1f8dcf46cb2493bdbb7111
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111-{{checksum ".buildcache/cache-keys/package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111-{{checksum ".buildcache/cache-keys/package-ae613755656dcd2a5a1f8dcf46cb2493bdbb7111"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
  windows_amd64_package:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: bd48aa0ab06403c8e113131defe3541a977e5191
    steps:
    - setup_remote_docker:
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: cache006-package-bd48aa0ab06403c8e113131defe3541a977e5191-{{checksum ".buildcache/cache-keys/package-bd48aa0ab06403c8e113131defe3541a977e5191"}}
        name: Restore package cache
    - run:
        command: |
          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check the cache status.
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        keys:
        - cache006-copy-source_ca8e_{{checksum ".buildcache/cache-keys/copy-source-ca8ebf7592f88b86f492c947caab70914efd951c"}}
        - cache006-go-modules_c11d_{{checksum ".buildcache/cache-keys/go-modules-c11d3353178a39d328136d8a9669c4a16e6b6edf"}}
        - cache006-ui_a469_{{checksum ".buildcache/cache-keys/ui-a46925cd79db8d8f17f005774b1f4faef82d83b6"}}
        - cache006-base_b035_{{checksum ".buildcache/cache-keys/base-b035732a9181cb923e58b88eff262c379a1a1ad2"}}
        name: Restore build layer cache
    - run:
        command: |
          make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: cache006-package-bd48aa0ab06403c8e113131defe3541a977e5191-{{checksum ".buildcache/cache-keys/package-bd48aa0ab06403c8e113131defe3541a977e5191"}}
        name: Saving package cache
        paths:
        - .buildcache/packages/store
workflows:
  build-standalone:
    jobs:
    - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
  default:
    jobs:
    - build
  version: 2
