### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  bundle-releases:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-all-package-cache-keys
        name: Write all package cache keys
    - run:
        command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
        name: Ignore .buildcache
    - restore_cache:
        key: package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22-{{checksum ".buildcache/cache-keys/package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22"}}
        name: Restore package cache
    - restore_cache:
        key: package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2-{{checksum ".buildcache/cache-keys/package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2"}}
        name: Restore package cache
    - restore_cache:
        key: package-b33e8047149bb4f721112176c78e1f17858dd36f-{{checksum ".buildcache/cache-keys/package-b33e8047149bb4f721112176c78e1f17858dd36f"}}
        name: Restore package cache
    - restore_cache:
        key: package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2-{{checksum ".buildcache/cache-keys/package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2"}}
        name: Restore package cache
    - restore_cache:
        key: package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47-{{checksum ".buildcache/cache-keys/package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47"}}
        name: Restore package cache
    - restore_cache:
        key: package-f8f234ceb668f16e110e945a8f065012defd8e29-{{checksum ".buildcache/cache-keys/package-f8f234ceb668f16e110e945a8f065012defd8e29"}}
        name: Restore package cache
    - restore_cache:
        key: package-6ab10821057bf28c4be0027c9d73f32ac2e80a16-{{checksum ".buildcache/cache-keys/package-6ab10821057bf28c4be0027c9d73f32ac2e80a16"}}
        name: Restore package cache
    - restore_cache:
        key: package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e-{{checksum ".buildcache/cache-keys/package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e"}}
        name: Restore package cache
    - restore_cache:
        key: package-7901985400184e8738dae44cf33cf182537fb25c-{{checksum ".buildcache/cache-keys/package-7901985400184e8738dae44cf33cf182537fb25c"}}
        name: Restore package cache
    - restore_cache:
        key: package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3-{{checksum ".buildcache/cache-keys/package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3"}}
        name: Restore package cache
    - restore_cache:
        key: package-69a7fde2ba398a6b7054b522b6429a957b5f119c-{{checksum ".buildcache/cache-keys/package-69a7fde2ba398a6b7054b522b6429a957b5f119c"}}
        name: Restore package cache
    - restore_cache:
        key: package-8c1f251adb553e53586402643de601f366aefee4-{{checksum ".buildcache/cache-keys/package-8c1f251adb553e53586402643de601f366aefee4"}}
        name: Restore package cache
    - restore_cache:
        key: package-f13449ae3ad15c285a79672a0dc53e80acee4216-{{checksum ".buildcache/cache-keys/package-f13449ae3ad15c285a79672a0dc53e80acee4216"}}
        name: Restore package cache
    - restore_cache:
        key: package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a-{{checksum ".buildcache/cache-keys/package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a"}}
        name: Restore package cache
    - restore_cache:
        key: package-9acf418c9ece905393556ca5e812a59404e8ac91-{{checksum ".buildcache/cache-keys/package-9acf418c9ece905393556ca5e812a59404e8ac91"}}
        name: Restore package cache
    - run:
        command: make package-meta-all
        name: Write Package Metadata
    - run:
        command: make aliases
        name: Write package aliases
    - run:
        command: ls -lahR .buildcache
        name: List Build Cache
    - run:
        command: cp packages*.lock/pkgs.yml lockfile-9880c53303c9ec15.yml
        name: Update Lockfile Name
    - run:
        command: tar -czf packages-9880c53303c9ec15.tar.gz .buildcache/packages lockfile-9880c53303c9ec15.yml
        name: Create Raw Package Tarball
    - run:
        command: tar -czf meta-9880c53303c9ec15.tar.gz .buildcache/packages/store/*.json lockfile-9880c53303c9ec15.yml
        name: Create Metadata Tarball
    - store_artifacts:
        path: lockfile-9880c53303c9ec15.yml
    - store_artifacts:
        path: packages-9880c53303c9ec15.tar.gz
    - store_artifacts:
        path: meta-9880c53303c9ec15.tar.gz
    - store_artifacts:
        path: .buildcache/packages
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  darwin_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 2b3c7073bfb96ee98a75bc3e97df4facf2000c22
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22-{{checksum ".buildcache/cache-keys/package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22-{{checksum ".buildcache/cache-keys/package-2b3c7073bfb96ee98a75bc3e97df4facf2000c22"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  windows_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a-{{checksum ".buildcache/cache-keys/package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a-{{checksum ".buildcache/cache-keys/package-31e5965bc2f53cb46ab1b6861e317aba0b4f1d9a"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  build-common-layers:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Layer Cache: copy-source'
    - run:
        command: LAYER_SPEC_ID=03-copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 00-base-5e4bf760127b8b07b97f682460fa798367a385e0-image
        name: Build base layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 01-ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727-image
        name: Build ui layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 02-go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056-image
        name: Build go-modules layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e-image
        name: Build copy-source layer
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -f packages*.lock/layer.mk 03-copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e-save
        name: Build copy-source layer
    - save_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        name: 'Save Layer Cache: copy-source'
        paths:
        - .buildcache/archives/03-copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
  linux_arm64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e-{{checksum ".buildcache/cache-keys/package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e-{{checksum ".buildcache/cache-keys/package-905c37b2ccb51a7f4fc81c348ba9ee9ea3341a2e"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  linux_arm_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 6ab10821057bf28c4be0027c9d73f32ac2e80a16
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-6ab10821057bf28c4be0027c9d73f32ac2e80a16-{{checksum ".buildcache/cache-keys/package-6ab10821057bf28c4be0027c9d73f32ac2e80a16"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-6ab10821057bf28c4be0027c9d73f32ac2e80a16-{{checksum ".buildcache/cache-keys/package-6ab10821057bf28c4be0027c9d73f32ac2e80a16"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  linux_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 9f8c134d482e9fc0d0d30580e34db17ebecc3e47
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47-{{checksum ".buildcache/cache-keys/package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47-{{checksum ".buildcache/cache-keys/package-9f8c134d482e9fc0d0d30580e34db17ebecc3e47"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  freebsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 1752ab674cc29e93911ac0f6d3bbe7952f49bcc2
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2-{{checksum ".buildcache/cache-keys/package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2-{{checksum ".buildcache/cache-keys/package-1752ab674cc29e93911ac0f6d3bbe7952f49bcc2"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  freebsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b33e8047149bb4f721112176c78e1f17858dd36f
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-b33e8047149bb4f721112176c78e1f17858dd36f-{{checksum ".buildcache/cache-keys/package-b33e8047149bb4f721112176c78e1f17858dd36f"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-b33e8047149bb4f721112176c78e1f17858dd36f-{{checksum ".buildcache/cache-keys/package-b33e8047149bb4f721112176c78e1f17858dd36f"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  openbsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 69a7fde2ba398a6b7054b522b6429a957b5f119c
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-69a7fde2ba398a6b7054b522b6429a957b5f119c-{{checksum ".buildcache/cache-keys/package-69a7fde2ba398a6b7054b522b6429a957b5f119c"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-69a7fde2ba398a6b7054b522b6429a957b5f119c-{{checksum ".buildcache/cache-keys/package-69a7fde2ba398a6b7054b522b6429a957b5f119c"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  linux_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: f8f234ceb668f16e110e945a8f065012defd8e29
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-f8f234ceb668f16e110e945a8f065012defd8e29-{{checksum ".buildcache/cache-keys/package-f8f234ceb668f16e110e945a8f065012defd8e29"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-f8f234ceb668f16e110e945a8f065012defd8e29-{{checksum ".buildcache/cache-keys/package-f8f234ceb668f16e110e945a8f065012defd8e29"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  solaris_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: f13449ae3ad15c285a79672a0dc53e80acee4216
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-f13449ae3ad15c285a79672a0dc53e80acee4216-{{checksum ".buildcache/cache-keys/package-f13449ae3ad15c285a79672a0dc53e80acee4216"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-f13449ae3ad15c285a79672a0dc53e80acee4216-{{checksum ".buildcache/cache-keys/package-f13449ae3ad15c285a79672a0dc53e80acee4216"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - run:
        command: |
          make test-ci
        name: Run Acceptance Tests
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
        name: Slack - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
        name: Slack - Setting Success Condition
        when: on_success
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          current_branch_in_filter=false

          IFS="," read -ra BRANCH_FILTERS <<< "master"

          for i in "${BRANCH_FILTERS[@]}"; do
            if [ "${i}" == "${CIRCLE_BRANCH}" ]; then
              current_branch_in_filter=true
            fi
          done

          if [ "x" == "xmaster" ] || [ "$current_branch_in_filter" = true ]; then
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "webhook" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              #Create Members string
              if [ -n "" ]; then
                IFS="," read -ra SLACK_MEMBERS <<< ""
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              #If successful
              if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                #Skip if fail_only
                if [ true = true ]; then
                  echo "The job completed successfully"
                  echo '"fail_only" is set to "true". No Slack notification sent.'
                else
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                              \"attachments\": [ \
                                { \
                                  \"fallback\": \":tada: A $CIRCLE_JOB job has succeeded!\", \
                                  \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                  \"fields\": [ \
                                    { \
                                      \"title\": \"Project\", \
                                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                      \"short\": true \
                                    }, \
                                    { \
                                      \"title\": \"Job Number\", \
                                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                                      \"short\": true \
                                    } \
                                  ], \
                                  \"actions\": [ \
                                    { \
                                      \"type\": \"button\", \
                                      \"text\": \"Visit Job\", \
                                      \"url\": \"$CIRCLE_BUILD_URL\" \
                                    } \
                                  ], \
                                  \"color\": \"#1CBF43\" \
                                } \
                              ] \
                            } " webhook
                  echo "Job completed successfully. Alert sent."
                fi
              else
                #If Failed
                curl -X POST -H 'Content-type: application/json' \
                  --data "{ \
                    \"attachments\": [ \
                      { \
                        \"fallback\": \":red_circle: A $CIRCLE_JOB job has failed!\", \
                        \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                        \"fields\": [ \
                          { \
                            \"title\": \"Project\", \
                            \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                            \"short\": true \
                          }, \
                          { \
                            \"title\": \"Job Number\", \
                            \"value\": \"$CIRCLE_BUILD_NUM\", \
                            \"short\": true \
                          } \
                        ], \
                        \"actions\": [ \
                          { \
                            \"type\": \"button\", \
                            \"text\": \"Visit Job\", \
                            \"url\": \"$CIRCLE_BUILD_URL\" \
                          } \
                        ], \
                        \"color\": \"#ed5c5c\" \
                      } \
                    ] \
                  } " webhook
                echo "Job failed. Alert sent."
              fi
            fi
          else
            echo "Current branch is not included in only_for_branches filter; no status alert will be sent"
          fi
        name: Slack - Sending Status Alert
        shell: /bin/bash
        when: always
    working_directory: ~/boundary
  netbsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3-{{checksum ".buildcache/cache-keys/package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3-{{checksum ".buildcache/cache-keys/package-dee2bbb3e4978c1ec32ad9ecf518138979bdb9c3"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  openbsd_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 8c1f251adb553e53586402643de601f366aefee4
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-8c1f251adb553e53586402643de601f366aefee4-{{checksum ".buildcache/cache-keys/package-8c1f251adb553e53586402643de601f366aefee4"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-8c1f251adb553e53586402643de601f366aefee4-{{checksum ".buildcache/cache-keys/package-8c1f251adb553e53586402643de601f366aefee4"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  netbsd_386_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 7901985400184e8738dae44cf33cf182537fb25c
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-7901985400184e8738dae44cf33cf182537fb25c-{{checksum ".buildcache/cache-keys/package-7901985400184e8738dae44cf33cf182537fb25c"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-7901985400184e8738dae44cf33cf182537fb25c-{{checksum ".buildcache/cache-keys/package-7901985400184e8738dae44cf33cf182537fb25c"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  freebsd_arm_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2-{{checksum ".buildcache/cache-keys/package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2-{{checksum ".buildcache/cache-keys/package-b54a26f5f3a5a4719e8d0e0eff135bb0a64d09b2"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
  windows_amd64_package:
    docker:
    - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - BUILDKIT_PROGRESS: plain
    - PRODUCT_REVISION: ''
    - PACKAGE_SPEC_ID: 9acf418c9ece905393556ca5e812a59404e8ac91
    steps:
    - setup_remote_docker:
        docker_layer_caching: false
        version: 19.03.12
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout:
        path: .
    - run:
        command: make -C packages*.lock write-package-cache-key
        name: Write package cache key
    - restore_cache:
        key: package-9acf418c9ece905393556ca5e812a59404e8ac91-{{checksum ".buildcache/cache-keys/package-9acf418c9ece905393556ca5e812a59404e8ac91"}}
        name: Restore package cache
    - run:
        command: |2

          if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
            echo "No package found, continuing with build."
            exit 0
          fi
          echo "Package already cached, skipping build."
          circleci-agent step halt
        name: Check cache status
    - run:
        command: make -C packages*.lock write-builder-cache-keys
        name: Write builder layer cache keys
    - restore_cache:
        key: copy-source_a139_{{checksum ".buildcache/cache-keys/copy-source-a139d4abc3cb646ae53a1501b83e0fd657b2618e"}}
        keys:
        - go-modules_2303_{{checksum ".buildcache/cache-keys/go-modules-2303d8d41cbf130d5c1c04638d46fd32288e7056"}}
        - ui_5d14_{{checksum ".buildcache/cache-keys/ui-5d140bc867d2b7098c4797c5b5dd62ab91e92727"}}
        - base_5e4b_{{checksum ".buildcache/cache-keys/base-5e4bf760127b8b07b97f682460fa798367a385e0"}}
        name: 'Restore Builder Image Cache: copy-source'
    - run:
        command: make -C packages*.lock load-builder-cache
        name: Load whatever builder cache we have (if any) into the Docker daemon
        no_output_timeout: 30m
    - run:
        command: |2-

          KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
          eval "$(ssh-agent -s)"
          if [ -f "$KEYFILE" ]; then
            ssh-add "$KEYFILE"
          else
            echo "==> INFO: SSH key for github.com not found"
            echo "    Attempts to access private repositories from within"
            echo "    the build will fail, e.g. for private go modules, or"
            echo "    attempts to directly clone private repositories."
          fi

          make -C packages*.lock package
        name: Compile Package
    - run:
        command: ls -lahR .buildcache/packages
        name: List packages
    - save_cache:
        key: package-9acf418c9ece905393556ca5e812a59404e8ac91-{{checksum ".buildcache/cache-keys/package-9acf418c9ece905393556ca5e812a59404e8ac91"}}
        name: Save package cache
        paths:
        - .buildcache/packages/store
workflows:
  build-9880c53303c9ec15:
    jobs:
    - build-common-layers
    - darwin_amd64_package:
        requires:
        - build-common-layers
    - bundle-releases:
        requires:
        - darwin_amd64_package
        - freebsd_386_package
        - freebsd_amd64_package
        - freebsd_arm_package
        - linux_386_package
        - linux_amd64_package
        - linux_arm_package
        - linux_arm64_package
        - netbsd_386_package
        - netbsd_amd64_package
        - openbsd_386_package
        - openbsd_amd64_package
        - solaris_amd64_package
        - windows_386_package
        - windows_amd64_package
    - freebsd_386_package:
        requires:
        - build-common-layers
    - freebsd_amd64_package:
        requires:
        - build-common-layers
    - freebsd_arm_package:
        requires:
        - build-common-layers
    - linux_386_package:
        requires:
        - build-common-layers
    - linux_amd64_package:
        requires:
        - build-common-layers
    - linux_arm_package:
        requires:
        - build-common-layers
    - linux_arm64_package:
        requires:
        - build-common-layers
    - netbsd_386_package:
        requires:
        - build-common-layers
    - netbsd_amd64_package:
        requires:
        - build-common-layers
    - openbsd_386_package:
        requires:
        - build-common-layers
    - openbsd_amd64_package:
        requires:
        - build-common-layers
    - solaris_amd64_package:
        requires:
        - build-common-layers
    - windows_386_package:
        requires:
        - build-common-layers
    - windows_amd64_package:
        requires:
        - build-common-layers
  default:
    jobs:
    - build
  version: 2
