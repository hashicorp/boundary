version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-e304212c51acc8855fd41314bdf3edf417854c49 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-ee8404894ff76e881ab504662f5939942211534b-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-4fd955a556287609732f32e61ba9b2718113af93-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-e304212c51acc8855fd41314bdf3edf417854c49-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-e304212c51acc8855fd41314bdf3edf417854c49-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-e304212c51acc8855fd41314bdf3edf417854c49.tar.gz
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-01433dc5a2317cbdfccff5f5a70a802585c09d99-{{checksum ".buildcache/cache-keys/package-01433dc5a2317cbdfccff5f5a70a802585c09d99"}}
          name: Restore package cache
      - restore_cache:
          key: package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a-{{checksum ".buildcache/cache-keys/package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a"}}
          name: Restore package cache
      - restore_cache:
          key: package-0b738a815a88ac698cdac9320f60b8845476ccf1-{{checksum ".buildcache/cache-keys/package-0b738a815a88ac698cdac9320f60b8845476ccf1"}}
          name: Restore package cache
      - restore_cache:
          key: package-787e1b5aa3421c688a8af29743f73146cb58bb3b-{{checksum ".buildcache/cache-keys/package-787e1b5aa3421c688a8af29743f73146cb58bb3b"}}
          name: Restore package cache
      - restore_cache:
          key: package-a25dfd64da01479f42cb88cc13fec056c685cfce-{{checksum ".buildcache/cache-keys/package-a25dfd64da01479f42cb88cc13fec056c685cfce"}}
          name: Restore package cache
      - restore_cache:
          key: package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a-{{checksum ".buildcache/cache-keys/package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a"}}
          name: Restore package cache
      - restore_cache:
          key: package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8-{{checksum ".buildcache/cache-keys/package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a-{{checksum ".buildcache/cache-keys/package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a"}}
          name: Restore package cache
      - restore_cache:
          key: package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1-{{checksum ".buildcache/cache-keys/package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1"}}
          name: Restore package cache
      - restore_cache:
          key: package-0fdd9e880642ccba5cf231cc680b66b52a89cb01-{{checksum ".buildcache/cache-keys/package-0fdd9e880642ccba5cf231cc680b66b52a89cb01"}}
          name: Restore package cache
      - restore_cache:
          key: package-a2bfe5eec302a06a0e42f1664a43866fc9325495-{{checksum ".buildcache/cache-keys/package-a2bfe5eec302a06a0e42f1664a43866fc9325495"}}
          name: Restore package cache
      - restore_cache:
          key: package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5-{{checksum ".buildcache/cache-keys/package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5"}}
          name: Restore package cache
      - restore_cache:
          key: package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6-{{checksum ".buildcache/cache-keys/package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6"}}
          name: Restore package cache
      - restore_cache:
          key: package-184227cfb70db0b424c6ed94229d21546f94e59d-{{checksum ".buildcache/cache-keys/package-184227cfb70db0b424c6ed94229d21546f94e59d"}}
          name: Restore package cache
      - restore_cache:
          key: package-c092c3cb3b0586a50816d6629890cf4a2542cec9-{{checksum ".buildcache/cache-keys/package-c092c3cb3b0586a50816d6629890cf4a2542cec9"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-46c0c7714dcaa1d0.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-46c0c7714dcaa1d0.tar.gz .buildcache/packages lockfile-46c0c7714dcaa1d0.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-46c0c7714dcaa1d0.tar.gz .buildcache/packages/store/*.json lockfile-46c0c7714dcaa1d0.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-46c0c7714dcaa1d0.yml
      - store_artifacts:
          path: packages-46c0c7714dcaa1d0.tar.gz
      - store_artifacts:
          path: meta-46c0c7714dcaa1d0.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-01433dc5a2317cbdfccff5f5a70a802585c09d99-{{checksum ".buildcache/cache-keys/package-01433dc5a2317cbdfccff5f5a70a802585c09d99"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-01433dc5a2317cbdfccff5f5a70a802585c09d99-{{checksum ".buildcache/cache-keys/package-01433dc5a2317cbdfccff5f5a70a802585c09d99"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 01433dc5a2317cbdfccff5f5a70a802585c09d99
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a-{{checksum ".buildcache/cache-keys/package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a-{{checksum ".buildcache/cache-keys/package-55764fcd4564716267ccfec3f3bbe2d5e7c1394a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 55764fcd4564716267ccfec3f3bbe2d5e7c1394a
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0b738a815a88ac698cdac9320f60b8845476ccf1-{{checksum ".buildcache/cache-keys/package-0b738a815a88ac698cdac9320f60b8845476ccf1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0b738a815a88ac698cdac9320f60b8845476ccf1-{{checksum ".buildcache/cache-keys/package-0b738a815a88ac698cdac9320f60b8845476ccf1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0b738a815a88ac698cdac9320f60b8845476ccf1
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-787e1b5aa3421c688a8af29743f73146cb58bb3b-{{checksum ".buildcache/cache-keys/package-787e1b5aa3421c688a8af29743f73146cb58bb3b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-787e1b5aa3421c688a8af29743f73146cb58bb3b-{{checksum ".buildcache/cache-keys/package-787e1b5aa3421c688a8af29743f73146cb58bb3b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 787e1b5aa3421c688a8af29743f73146cb58bb3b
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a25dfd64da01479f42cb88cc13fec056c685cfce-{{checksum ".buildcache/cache-keys/package-a25dfd64da01479f42cb88cc13fec056c685cfce"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a25dfd64da01479f42cb88cc13fec056c685cfce-{{checksum ".buildcache/cache-keys/package-a25dfd64da01479f42cb88cc13fec056c685cfce"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a25dfd64da01479f42cb88cc13fec056c685cfce
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a-{{checksum ".buildcache/cache-keys/package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a-{{checksum ".buildcache/cache-keys/package-a87eb17f530931a4e0f823371d8378cd8c5f9e7a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a87eb17f530931a4e0f823371d8378cd8c5f9e7a
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8-{{checksum ".buildcache/cache-keys/package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8-{{checksum ".buildcache/cache-keys/package-7e9c0c8225db5f23ed0f4e34c30b1267a86956c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7e9c0c8225db5f23ed0f4e34c30b1267a86956c8
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a-{{checksum ".buildcache/cache-keys/package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a-{{checksum ".buildcache/cache-keys/package-7c4c77fabb7438b01bd4da25bc8712068ffe0e1a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7c4c77fabb7438b01bd4da25bc8712068ffe0e1a
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1-{{checksum ".buildcache/cache-keys/package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1-{{checksum ".buildcache/cache-keys/package-d2ccbfae1e7e530b048a21d5a8d175334405d5e1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d2ccbfae1e7e530b048a21d5a8d175334405d5e1
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0fdd9e880642ccba5cf231cc680b66b52a89cb01-{{checksum ".buildcache/cache-keys/package-0fdd9e880642ccba5cf231cc680b66b52a89cb01"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0fdd9e880642ccba5cf231cc680b66b52a89cb01-{{checksum ".buildcache/cache-keys/package-0fdd9e880642ccba5cf231cc680b66b52a89cb01"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0fdd9e880642ccba5cf231cc680b66b52a89cb01
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a2bfe5eec302a06a0e42f1664a43866fc9325495-{{checksum ".buildcache/cache-keys/package-a2bfe5eec302a06a0e42f1664a43866fc9325495"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a2bfe5eec302a06a0e42f1664a43866fc9325495-{{checksum ".buildcache/cache-keys/package-a2bfe5eec302a06a0e42f1664a43866fc9325495"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a2bfe5eec302a06a0e42f1664a43866fc9325495
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5-{{checksum ".buildcache/cache-keys/package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5-{{checksum ".buildcache/cache-keys/package-b5e41e598aedaa5f8ca29187ae0df28d92c076d5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b5e41e598aedaa5f8ca29187ae0df28d92c076d5
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6-{{checksum ".buildcache/cache-keys/package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6-{{checksum ".buildcache/cache-keys/package-a32051cd510b4cba9457ce1d3349f12ffd73b6c6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a32051cd510b4cba9457ce1d3349f12ffd73b6c6
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-184227cfb70db0b424c6ed94229d21546f94e59d-{{checksum ".buildcache/cache-keys/package-184227cfb70db0b424c6ed94229d21546f94e59d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-184227cfb70db0b424c6ed94229d21546f94e59d-{{checksum ".buildcache/cache-keys/package-184227cfb70db0b424c6ed94229d21546f94e59d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 184227cfb70db0b424c6ed94229d21546f94e59d
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c092c3cb3b0586a50816d6629890cf4a2542cec9-{{checksum ".buildcache/cache-keys/package-c092c3cb3b0586a50816d6629890cf4a2542cec9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_e304_{{checksum ".buildcache/cache-keys/copy-source-e304212c51acc8855fd41314bdf3edf417854c49"}}
          keys:
            - go-modules_04f9_{{checksum ".buildcache/cache-keys/go-modules-04f9156a8254ae7f9f04b5f6cee2e18b15cd83b3"}}
            - ui_4fd9_{{checksum ".buildcache/cache-keys/ui-4fd955a556287609732f32e61ba9b2718113af93"}}
            - base_ee84_{{checksum ".buildcache/cache-keys/base-ee8404894ff76e881ab504662f5939942211534b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c092c3cb3b0586a50816d6629890cf4a2542cec9-{{checksum ".buildcache/cache-keys/package-c092c3cb3b0586a50816d6629890cf4a2542cec9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c092c3cb3b0586a50816d6629890cf4a2542cec9
workflows:
  build-46c0c7714dcaa1d0:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
