version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-7106f0993f7f82cce77f88cac3d4aad74561ace1-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-377574d7d13eaa0b1b40076910be751039c977dd-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5.tar.gz
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-67e6682b7612dbd3266672bc13781616e5c53e8d-{{checksum ".buildcache/cache-keys/package-67e6682b7612dbd3266672bc13781616e5c53e8d"}}
          name: Restore package cache
      - restore_cache:
          key: package-f9d582d93e0c86645b08ccd7b093f85b908b119d-{{checksum ".buildcache/cache-keys/package-f9d582d93e0c86645b08ccd7b093f85b908b119d"}}
          name: Restore package cache
      - restore_cache:
          key: package-4b95df85343d56bb60b7ac677d24326fc974b1f6-{{checksum ".buildcache/cache-keys/package-4b95df85343d56bb60b7ac677d24326fc974b1f6"}}
          name: Restore package cache
      - restore_cache:
          key: package-3c022f7d2295ee7548977b281c16c472e5d090b6-{{checksum ".buildcache/cache-keys/package-3c022f7d2295ee7548977b281c16c472e5d090b6"}}
          name: Restore package cache
      - restore_cache:
          key: package-d9a0626e995f070deb831e0290133a167f1dce74-{{checksum ".buildcache/cache-keys/package-d9a0626e995f070deb831e0290133a167f1dce74"}}
          name: Restore package cache
      - restore_cache:
          key: package-0f8561c19de1ba08f5683e566171426f58e9f640-{{checksum ".buildcache/cache-keys/package-0f8561c19de1ba08f5683e566171426f58e9f640"}}
          name: Restore package cache
      - restore_cache:
          key: package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25-{{checksum ".buildcache/cache-keys/package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25"}}
          name: Restore package cache
      - restore_cache:
          key: package-822c10c5fe0f8976bb617e60a7c79e9dd737195d-{{checksum ".buildcache/cache-keys/package-822c10c5fe0f8976bb617e60a7c79e9dd737195d"}}
          name: Restore package cache
      - restore_cache:
          key: package-b36edc8defb7ec453e7d3814077252ce26594ca5-{{checksum ".buildcache/cache-keys/package-b36edc8defb7ec453e7d3814077252ce26594ca5"}}
          name: Restore package cache
      - restore_cache:
          key: package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a-{{checksum ".buildcache/cache-keys/package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a"}}
          name: Restore package cache
      - restore_cache:
          key: package-248591fa570bb64b64f85a8ab078fb8850667796-{{checksum ".buildcache/cache-keys/package-248591fa570bb64b64f85a8ab078fb8850667796"}}
          name: Restore package cache
      - restore_cache:
          key: package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a-{{checksum ".buildcache/cache-keys/package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a"}}
          name: Restore package cache
      - restore_cache:
          key: package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df-{{checksum ".buildcache/cache-keys/package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df"}}
          name: Restore package cache
      - restore_cache:
          key: package-6e1be5f5955352a5e7e91688a2bff00fab6250d8-{{checksum ".buildcache/cache-keys/package-6e1be5f5955352a5e7e91688a2bff00fab6250d8"}}
          name: Restore package cache
      - restore_cache:
          key: package-d34175e362754776d9eca04a933e9ede5299f7d4-{{checksum ".buildcache/cache-keys/package-d34175e362754776d9eca04a933e9ede5299f7d4"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-64f7cd323d80e6a.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-64f7cd323d80e6a.tar.gz .buildcache/packages lockfile-64f7cd323d80e6a.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-64f7cd323d80e6a.tar.gz .buildcache/packages/store/*.json lockfile-64f7cd323d80e6a.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-64f7cd323d80e6a.yml
      - store_artifacts:
          path: packages-64f7cd323d80e6a.tar.gz
      - store_artifacts:
          path: meta-64f7cd323d80e6a.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-67e6682b7612dbd3266672bc13781616e5c53e8d-{{checksum ".buildcache/cache-keys/package-67e6682b7612dbd3266672bc13781616e5c53e8d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-67e6682b7612dbd3266672bc13781616e5c53e8d-{{checksum ".buildcache/cache-keys/package-67e6682b7612dbd3266672bc13781616e5c53e8d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 67e6682b7612dbd3266672bc13781616e5c53e8d
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f9d582d93e0c86645b08ccd7b093f85b908b119d-{{checksum ".buildcache/cache-keys/package-f9d582d93e0c86645b08ccd7b093f85b908b119d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f9d582d93e0c86645b08ccd7b093f85b908b119d-{{checksum ".buildcache/cache-keys/package-f9d582d93e0c86645b08ccd7b093f85b908b119d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f9d582d93e0c86645b08ccd7b093f85b908b119d
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4b95df85343d56bb60b7ac677d24326fc974b1f6-{{checksum ".buildcache/cache-keys/package-4b95df85343d56bb60b7ac677d24326fc974b1f6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4b95df85343d56bb60b7ac677d24326fc974b1f6-{{checksum ".buildcache/cache-keys/package-4b95df85343d56bb60b7ac677d24326fc974b1f6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4b95df85343d56bb60b7ac677d24326fc974b1f6
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3c022f7d2295ee7548977b281c16c472e5d090b6-{{checksum ".buildcache/cache-keys/package-3c022f7d2295ee7548977b281c16c472e5d090b6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3c022f7d2295ee7548977b281c16c472e5d090b6-{{checksum ".buildcache/cache-keys/package-3c022f7d2295ee7548977b281c16c472e5d090b6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3c022f7d2295ee7548977b281c16c472e5d090b6
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d9a0626e995f070deb831e0290133a167f1dce74-{{checksum ".buildcache/cache-keys/package-d9a0626e995f070deb831e0290133a167f1dce74"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d9a0626e995f070deb831e0290133a167f1dce74-{{checksum ".buildcache/cache-keys/package-d9a0626e995f070deb831e0290133a167f1dce74"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d9a0626e995f070deb831e0290133a167f1dce74
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0f8561c19de1ba08f5683e566171426f58e9f640-{{checksum ".buildcache/cache-keys/package-0f8561c19de1ba08f5683e566171426f58e9f640"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0f8561c19de1ba08f5683e566171426f58e9f640-{{checksum ".buildcache/cache-keys/package-0f8561c19de1ba08f5683e566171426f58e9f640"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0f8561c19de1ba08f5683e566171426f58e9f640
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25-{{checksum ".buildcache/cache-keys/package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25-{{checksum ".buildcache/cache-keys/package-6df2fa8e9605598dd58a20ddc0cd72f9aa318f25"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6df2fa8e9605598dd58a20ddc0cd72f9aa318f25
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-822c10c5fe0f8976bb617e60a7c79e9dd737195d-{{checksum ".buildcache/cache-keys/package-822c10c5fe0f8976bb617e60a7c79e9dd737195d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-822c10c5fe0f8976bb617e60a7c79e9dd737195d-{{checksum ".buildcache/cache-keys/package-822c10c5fe0f8976bb617e60a7c79e9dd737195d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 822c10c5fe0f8976bb617e60a7c79e9dd737195d
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b36edc8defb7ec453e7d3814077252ce26594ca5-{{checksum ".buildcache/cache-keys/package-b36edc8defb7ec453e7d3814077252ce26594ca5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b36edc8defb7ec453e7d3814077252ce26594ca5-{{checksum ".buildcache/cache-keys/package-b36edc8defb7ec453e7d3814077252ce26594ca5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b36edc8defb7ec453e7d3814077252ce26594ca5
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a-{{checksum ".buildcache/cache-keys/package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a-{{checksum ".buildcache/cache-keys/package-9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9caf8b3bfdbb481ed1e091d65b759f5a7f0f2e9a
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-248591fa570bb64b64f85a8ab078fb8850667796-{{checksum ".buildcache/cache-keys/package-248591fa570bb64b64f85a8ab078fb8850667796"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-248591fa570bb64b64f85a8ab078fb8850667796-{{checksum ".buildcache/cache-keys/package-248591fa570bb64b64f85a8ab078fb8850667796"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 248591fa570bb64b64f85a8ab078fb8850667796
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a-{{checksum ".buildcache/cache-keys/package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a-{{checksum ".buildcache/cache-keys/package-bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bf5a8f7b7d552a77f6d9ba5aef8116bd8dac233a
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df-{{checksum ".buildcache/cache-keys/package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df-{{checksum ".buildcache/cache-keys/package-10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 10afa9bbee9e4d7765ce4ff1ffeaa3a2819065df
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6e1be5f5955352a5e7e91688a2bff00fab6250d8-{{checksum ".buildcache/cache-keys/package-6e1be5f5955352a5e7e91688a2bff00fab6250d8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6e1be5f5955352a5e7e91688a2bff00fab6250d8-{{checksum ".buildcache/cache-keys/package-6e1be5f5955352a5e7e91688a2bff00fab6250d8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6e1be5f5955352a5e7e91688a2bff00fab6250d8
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d34175e362754776d9eca04a933e9ede5299f7d4-{{checksum ".buildcache/cache-keys/package-d34175e362754776d9eca04a933e9ede5299f7d4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d34175e362754776d9eca04a933e9ede5299f7d4-{{checksum ".buildcache/cache-keys/package-d34175e362754776d9eca04a933e9ede5299f7d4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d34175e362754776d9eca04a933e9ede5299f7d4
workflows:
  build-64f7cd323d80e6a:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
