version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-eddb505020fec64e127253c8618061565d52d2a7 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-98f69f83d190f966153d11e8dd1e994f2563d3c8-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-e61ed430f24599db65f898efe41246153ab41005-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-d886f439beac33e5bafaaef19e9448be91000100-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-eddb505020fec64e127253c8618061565d52d2a7-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-eddb505020fec64e127253c8618061565d52d2a7-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-eddb505020fec64e127253c8618061565d52d2a7.tar.gz
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-e75b71421ad2a15e0306fd5d7732f33667b151d1-{{checksum ".buildcache/cache-keys/package-e75b71421ad2a15e0306fd5d7732f33667b151d1"}}
          name: Restore package cache
      - restore_cache:
          key: package-490f8bedce7284186db23e0a80ddfd55e139ce54-{{checksum ".buildcache/cache-keys/package-490f8bedce7284186db23e0a80ddfd55e139ce54"}}
          name: Restore package cache
      - restore_cache:
          key: package-935f21ac327d6c3a06a3ec08c986d370c0625338-{{checksum ".buildcache/cache-keys/package-935f21ac327d6c3a06a3ec08c986d370c0625338"}}
          name: Restore package cache
      - restore_cache:
          key: package-0fef39c4e612de72b1f3cac81d7b3eea996556fb-{{checksum ".buildcache/cache-keys/package-0fef39c4e612de72b1f3cac81d7b3eea996556fb"}}
          name: Restore package cache
      - restore_cache:
          key: package-be84682b20727ba209aa9c9d474ab65cdddeb7c4-{{checksum ".buildcache/cache-keys/package-be84682b20727ba209aa9c9d474ab65cdddeb7c4"}}
          name: Restore package cache
      - restore_cache:
          key: package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2-{{checksum ".buildcache/cache-keys/package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2"}}
          name: Restore package cache
      - restore_cache:
          key: package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8-{{checksum ".buildcache/cache-keys/package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8"}}
          name: Restore package cache
      - restore_cache:
          key: package-8bfa38284291f93715987a83f42f93a5792dc9df-{{checksum ".buildcache/cache-keys/package-8bfa38284291f93715987a83f42f93a5792dc9df"}}
          name: Restore package cache
      - restore_cache:
          key: package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6-{{checksum ".buildcache/cache-keys/package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6"}}
          name: Restore package cache
      - restore_cache:
          key: package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab-{{checksum ".buildcache/cache-keys/package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab"}}
          name: Restore package cache
      - restore_cache:
          key: package-658b8bfe5fd036c744b684ad849d899363e4a063-{{checksum ".buildcache/cache-keys/package-658b8bfe5fd036c744b684ad849d899363e4a063"}}
          name: Restore package cache
      - restore_cache:
          key: package-fc491961ae9c02fcbe561501a5089cb12a966117-{{checksum ".buildcache/cache-keys/package-fc491961ae9c02fcbe561501a5089cb12a966117"}}
          name: Restore package cache
      - restore_cache:
          key: package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103-{{checksum ".buildcache/cache-keys/package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103"}}
          name: Restore package cache
      - restore_cache:
          key: package-64a521373821c76870299c8b38fb98c1d0e9b2d0-{{checksum ".buildcache/cache-keys/package-64a521373821c76870299c8b38fb98c1d0e9b2d0"}}
          name: Restore package cache
      - restore_cache:
          key: package-86db73b6c313c55d60c1861470e8f2c1d81f1b11-{{checksum ".buildcache/cache-keys/package-86db73b6c313c55d60c1861470e8f2c1d81f1b11"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-eb13927b107165f4.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-eb13927b107165f4.tar.gz .buildcache/packages lockfile-eb13927b107165f4.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-eb13927b107165f4.tar.gz .buildcache/packages/store/*.json lockfile-eb13927b107165f4.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-eb13927b107165f4.yml
      - store_artifacts:
          path: packages-eb13927b107165f4.tar.gz
      - store_artifacts:
          path: meta-eb13927b107165f4.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e75b71421ad2a15e0306fd5d7732f33667b151d1-{{checksum ".buildcache/cache-keys/package-e75b71421ad2a15e0306fd5d7732f33667b151d1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e75b71421ad2a15e0306fd5d7732f33667b151d1-{{checksum ".buildcache/cache-keys/package-e75b71421ad2a15e0306fd5d7732f33667b151d1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e75b71421ad2a15e0306fd5d7732f33667b151d1
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-490f8bedce7284186db23e0a80ddfd55e139ce54-{{checksum ".buildcache/cache-keys/package-490f8bedce7284186db23e0a80ddfd55e139ce54"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-490f8bedce7284186db23e0a80ddfd55e139ce54-{{checksum ".buildcache/cache-keys/package-490f8bedce7284186db23e0a80ddfd55e139ce54"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 490f8bedce7284186db23e0a80ddfd55e139ce54
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-935f21ac327d6c3a06a3ec08c986d370c0625338-{{checksum ".buildcache/cache-keys/package-935f21ac327d6c3a06a3ec08c986d370c0625338"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-935f21ac327d6c3a06a3ec08c986d370c0625338-{{checksum ".buildcache/cache-keys/package-935f21ac327d6c3a06a3ec08c986d370c0625338"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 935f21ac327d6c3a06a3ec08c986d370c0625338
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0fef39c4e612de72b1f3cac81d7b3eea996556fb-{{checksum ".buildcache/cache-keys/package-0fef39c4e612de72b1f3cac81d7b3eea996556fb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0fef39c4e612de72b1f3cac81d7b3eea996556fb-{{checksum ".buildcache/cache-keys/package-0fef39c4e612de72b1f3cac81d7b3eea996556fb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0fef39c4e612de72b1f3cac81d7b3eea996556fb
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-be84682b20727ba209aa9c9d474ab65cdddeb7c4-{{checksum ".buildcache/cache-keys/package-be84682b20727ba209aa9c9d474ab65cdddeb7c4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-be84682b20727ba209aa9c9d474ab65cdddeb7c4-{{checksum ".buildcache/cache-keys/package-be84682b20727ba209aa9c9d474ab65cdddeb7c4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: be84682b20727ba209aa9c9d474ab65cdddeb7c4
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2-{{checksum ".buildcache/cache-keys/package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2-{{checksum ".buildcache/cache-keys/package-c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c68dfca5a04d60e9b92dd6b24c785d9bcd4cb4f2
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8-{{checksum ".buildcache/cache-keys/package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8-{{checksum ".buildcache/cache-keys/package-8df8c25c7c1d76509cd833c81ded1caa7d9707b8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8df8c25c7c1d76509cd833c81ded1caa7d9707b8
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8bfa38284291f93715987a83f42f93a5792dc9df-{{checksum ".buildcache/cache-keys/package-8bfa38284291f93715987a83f42f93a5792dc9df"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8bfa38284291f93715987a83f42f93a5792dc9df-{{checksum ".buildcache/cache-keys/package-8bfa38284291f93715987a83f42f93a5792dc9df"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8bfa38284291f93715987a83f42f93a5792dc9df
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6-{{checksum ".buildcache/cache-keys/package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6-{{checksum ".buildcache/cache-keys/package-b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b7f8fb8bfea4abda15d2533e1cb1fc7e7d5350b6
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab-{{checksum ".buildcache/cache-keys/package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab-{{checksum ".buildcache/cache-keys/package-f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f47c80c79ca5963bdc5c1ddd4eb95f1b77dd46ab
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-658b8bfe5fd036c744b684ad849d899363e4a063-{{checksum ".buildcache/cache-keys/package-658b8bfe5fd036c744b684ad849d899363e4a063"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-658b8bfe5fd036c744b684ad849d899363e4a063-{{checksum ".buildcache/cache-keys/package-658b8bfe5fd036c744b684ad849d899363e4a063"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 658b8bfe5fd036c744b684ad849d899363e4a063
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fc491961ae9c02fcbe561501a5089cb12a966117-{{checksum ".buildcache/cache-keys/package-fc491961ae9c02fcbe561501a5089cb12a966117"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fc491961ae9c02fcbe561501a5089cb12a966117-{{checksum ".buildcache/cache-keys/package-fc491961ae9c02fcbe561501a5089cb12a966117"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fc491961ae9c02fcbe561501a5089cb12a966117
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103-{{checksum ".buildcache/cache-keys/package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103-{{checksum ".buildcache/cache-keys/package-ac6bd1459df1ef7cb5f45a003b1866c53fa79103"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ac6bd1459df1ef7cb5f45a003b1866c53fa79103
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-64a521373821c76870299c8b38fb98c1d0e9b2d0-{{checksum ".buildcache/cache-keys/package-64a521373821c76870299c8b38fb98c1d0e9b2d0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-64a521373821c76870299c8b38fb98c1d0e9b2d0-{{checksum ".buildcache/cache-keys/package-64a521373821c76870299c8b38fb98c1d0e9b2d0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 64a521373821c76870299c8b38fb98c1d0e9b2d0
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-86db73b6c313c55d60c1861470e8f2c1d81f1b11-{{checksum ".buildcache/cache-keys/package-86db73b6c313c55d60c1861470e8f2c1d81f1b11"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_eddb_{{checksum ".buildcache/cache-keys/copy-source-eddb505020fec64e127253c8618061565d52d2a7"}}
          keys:
            - go-modules_d886_{{checksum ".buildcache/cache-keys/go-modules-d886f439beac33e5bafaaef19e9448be91000100"}}
            - ui_e61e_{{checksum ".buildcache/cache-keys/ui-e61ed430f24599db65f898efe41246153ab41005"}}
            - base_98f6_{{checksum ".buildcache/cache-keys/base-98f69f83d190f966153d11e8dd1e994f2563d3c8"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-86db73b6c313c55d60c1861470e8f2c1d81f1b11-{{checksum ".buildcache/cache-keys/package-86db73b6c313c55d60c1861470e8f2c1d81f1b11"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 86db73b6c313c55d60c1861470e8f2c1d81f1b11
workflows:
  build-eb13927b107165f4:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
