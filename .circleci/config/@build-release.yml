version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-db5ea48ff629572afc6847b856f42eb44dba173a make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-a0554df6c19ccd03a9a1ee035cb15e69108b7442-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-8cb30555af80540d4f7e7050d0292010b8214df2-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-db5ea48ff629572afc6847b856f42eb44dba173a-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-db5ea48ff629572afc6847b856f42eb44dba173a-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-db5ea48ff629572afc6847b856f42eb44dba173a.tar.gz
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-c2ea225e157950898b8243dee9150a2ba3edaeff-{{checksum ".buildcache/cache-keys/package-c2ea225e157950898b8243dee9150a2ba3edaeff"}}
          name: Restore package cache
      - restore_cache:
          key: package-71a8b8e7f67c91d724d81351c29ce076a4421519-{{checksum ".buildcache/cache-keys/package-71a8b8e7f67c91d724d81351c29ce076a4421519"}}
          name: Restore package cache
      - restore_cache:
          key: package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3-{{checksum ".buildcache/cache-keys/package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3"}}
          name: Restore package cache
      - restore_cache:
          key: package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8-{{checksum ".buildcache/cache-keys/package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-3561f486940ca55c8a0a96446f6fceeb8fb510a4-{{checksum ".buildcache/cache-keys/package-3561f486940ca55c8a0a96446f6fceeb8fb510a4"}}
          name: Restore package cache
      - restore_cache:
          key: package-79604c3181e176977213c5e7d4e90a98605473ba-{{checksum ".buildcache/cache-keys/package-79604c3181e176977213c5e7d4e90a98605473ba"}}
          name: Restore package cache
      - restore_cache:
          key: package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36-{{checksum ".buildcache/cache-keys/package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36"}}
          name: Restore package cache
      - restore_cache:
          key: package-96b0afe2991ec810affc99418391c5357ff0457e-{{checksum ".buildcache/cache-keys/package-96b0afe2991ec810affc99418391c5357ff0457e"}}
          name: Restore package cache
      - restore_cache:
          key: package-b6f293ec1f9ff884651fc83a047623c3f8a54004-{{checksum ".buildcache/cache-keys/package-b6f293ec1f9ff884651fc83a047623c3f8a54004"}}
          name: Restore package cache
      - restore_cache:
          key: package-66810b07e0a3e4065086105f0a97d8fad29e9737-{{checksum ".buildcache/cache-keys/package-66810b07e0a3e4065086105f0a97d8fad29e9737"}}
          name: Restore package cache
      - restore_cache:
          key: package-1531fc06e90e6ce220e6b3551867b394617f5e09-{{checksum ".buildcache/cache-keys/package-1531fc06e90e6ce220e6b3551867b394617f5e09"}}
          name: Restore package cache
      - restore_cache:
          key: package-cae02345aaaea07368d0b279bae2920684974bb5-{{checksum ".buildcache/cache-keys/package-cae02345aaaea07368d0b279bae2920684974bb5"}}
          name: Restore package cache
      - restore_cache:
          key: package-e3249dd2789997c9a190a9d8219068d44fafcb34-{{checksum ".buildcache/cache-keys/package-e3249dd2789997c9a190a9d8219068d44fafcb34"}}
          name: Restore package cache
      - restore_cache:
          key: package-e0229431a99253381e1c12d4ab64c35054cbfe7d-{{checksum ".buildcache/cache-keys/package-e0229431a99253381e1c12d4ab64c35054cbfe7d"}}
          name: Restore package cache
      - restore_cache:
          key: package-3494852b4b0aa620f9bca4ea6920e43669177021-{{checksum ".buildcache/cache-keys/package-3494852b4b0aa620f9bca4ea6920e43669177021"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-eafc79c2b7214c82.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-eafc79c2b7214c82.tar.gz .buildcache/packages lockfile-eafc79c2b7214c82.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-eafc79c2b7214c82.tar.gz .buildcache/packages/store/*.json lockfile-eafc79c2b7214c82.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-eafc79c2b7214c82.yml
      - store_artifacts:
          path: packages-eafc79c2b7214c82.tar.gz
      - store_artifacts:
          path: meta-eafc79c2b7214c82.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c2ea225e157950898b8243dee9150a2ba3edaeff-{{checksum ".buildcache/cache-keys/package-c2ea225e157950898b8243dee9150a2ba3edaeff"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c2ea225e157950898b8243dee9150a2ba3edaeff-{{checksum ".buildcache/cache-keys/package-c2ea225e157950898b8243dee9150a2ba3edaeff"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c2ea225e157950898b8243dee9150a2ba3edaeff
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-71a8b8e7f67c91d724d81351c29ce076a4421519-{{checksum ".buildcache/cache-keys/package-71a8b8e7f67c91d724d81351c29ce076a4421519"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-71a8b8e7f67c91d724d81351c29ce076a4421519-{{checksum ".buildcache/cache-keys/package-71a8b8e7f67c91d724d81351c29ce076a4421519"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 71a8b8e7f67c91d724d81351c29ce076a4421519
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3-{{checksum ".buildcache/cache-keys/package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3-{{checksum ".buildcache/cache-keys/package-e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e8578726ed2d0cbdf3d8e5ed80bf5c3f4a94d7e3
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8-{{checksum ".buildcache/cache-keys/package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8-{{checksum ".buildcache/cache-keys/package-8b05660c0ba9263594e7cbd335f355d9d2ef34c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8b05660c0ba9263594e7cbd335f355d9d2ef34c8
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3561f486940ca55c8a0a96446f6fceeb8fb510a4-{{checksum ".buildcache/cache-keys/package-3561f486940ca55c8a0a96446f6fceeb8fb510a4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3561f486940ca55c8a0a96446f6fceeb8fb510a4-{{checksum ".buildcache/cache-keys/package-3561f486940ca55c8a0a96446f6fceeb8fb510a4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3561f486940ca55c8a0a96446f6fceeb8fb510a4
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-79604c3181e176977213c5e7d4e90a98605473ba-{{checksum ".buildcache/cache-keys/package-79604c3181e176977213c5e7d4e90a98605473ba"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-79604c3181e176977213c5e7d4e90a98605473ba-{{checksum ".buildcache/cache-keys/package-79604c3181e176977213c5e7d4e90a98605473ba"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 79604c3181e176977213c5e7d4e90a98605473ba
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36-{{checksum ".buildcache/cache-keys/package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36-{{checksum ".buildcache/cache-keys/package-71dcf4957c9ef059b3f5222fdb0fe4360ca94b36"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 71dcf4957c9ef059b3f5222fdb0fe4360ca94b36
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96b0afe2991ec810affc99418391c5357ff0457e-{{checksum ".buildcache/cache-keys/package-96b0afe2991ec810affc99418391c5357ff0457e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96b0afe2991ec810affc99418391c5357ff0457e-{{checksum ".buildcache/cache-keys/package-96b0afe2991ec810affc99418391c5357ff0457e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96b0afe2991ec810affc99418391c5357ff0457e
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b6f293ec1f9ff884651fc83a047623c3f8a54004-{{checksum ".buildcache/cache-keys/package-b6f293ec1f9ff884651fc83a047623c3f8a54004"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b6f293ec1f9ff884651fc83a047623c3f8a54004-{{checksum ".buildcache/cache-keys/package-b6f293ec1f9ff884651fc83a047623c3f8a54004"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b6f293ec1f9ff884651fc83a047623c3f8a54004
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-66810b07e0a3e4065086105f0a97d8fad29e9737-{{checksum ".buildcache/cache-keys/package-66810b07e0a3e4065086105f0a97d8fad29e9737"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-66810b07e0a3e4065086105f0a97d8fad29e9737-{{checksum ".buildcache/cache-keys/package-66810b07e0a3e4065086105f0a97d8fad29e9737"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 66810b07e0a3e4065086105f0a97d8fad29e9737
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1531fc06e90e6ce220e6b3551867b394617f5e09-{{checksum ".buildcache/cache-keys/package-1531fc06e90e6ce220e6b3551867b394617f5e09"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1531fc06e90e6ce220e6b3551867b394617f5e09-{{checksum ".buildcache/cache-keys/package-1531fc06e90e6ce220e6b3551867b394617f5e09"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1531fc06e90e6ce220e6b3551867b394617f5e09
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cae02345aaaea07368d0b279bae2920684974bb5-{{checksum ".buildcache/cache-keys/package-cae02345aaaea07368d0b279bae2920684974bb5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cae02345aaaea07368d0b279bae2920684974bb5-{{checksum ".buildcache/cache-keys/package-cae02345aaaea07368d0b279bae2920684974bb5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cae02345aaaea07368d0b279bae2920684974bb5
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e3249dd2789997c9a190a9d8219068d44fafcb34-{{checksum ".buildcache/cache-keys/package-e3249dd2789997c9a190a9d8219068d44fafcb34"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e3249dd2789997c9a190a9d8219068d44fafcb34-{{checksum ".buildcache/cache-keys/package-e3249dd2789997c9a190a9d8219068d44fafcb34"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e3249dd2789997c9a190a9d8219068d44fafcb34
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e0229431a99253381e1c12d4ab64c35054cbfe7d-{{checksum ".buildcache/cache-keys/package-e0229431a99253381e1c12d4ab64c35054cbfe7d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e0229431a99253381e1c12d4ab64c35054cbfe7d-{{checksum ".buildcache/cache-keys/package-e0229431a99253381e1c12d4ab64c35054cbfe7d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e0229431a99253381e1c12d4ab64c35054cbfe7d
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3494852b4b0aa620f9bca4ea6920e43669177021-{{checksum ".buildcache/cache-keys/package-3494852b4b0aa620f9bca4ea6920e43669177021"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_db5e_{{checksum ".buildcache/cache-keys/copy-source-db5ea48ff629572afc6847b856f42eb44dba173a"}}
          keys:
            - go-modules_eb94_{{checksum ".buildcache/cache-keys/go-modules-eb94dfdeafb25eb57de867615bddad2a98d2584f"}}
            - ui_8cb3_{{checksum ".buildcache/cache-keys/ui-8cb30555af80540d4f7e7050d0292010b8214df2"}}
            - base_a055_{{checksum ".buildcache/cache-keys/base-a0554df6c19ccd03a9a1ee035cb15e69108b7442"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3494852b4b0aa620f9bca4ea6920e43669177021-{{checksum ".buildcache/cache-keys/package-3494852b4b0aa620f9bca4ea6920e43669177021"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3494852b4b0aa620f9bca4ea6920e43669177021
workflows:
  build-eafc79c2b7214c82:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
