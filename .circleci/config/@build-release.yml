version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-7e620c89b64e5ba6df2dc9baf224752a687063d0-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c.tar.gz
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-a37b930b5c9596de8cd95fdc341e4536da2696c6-{{checksum ".buildcache/cache-keys/package-a37b930b5c9596de8cd95fdc341e4536da2696c6"}}
          name: Restore package cache
      - restore_cache:
          key: package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc-{{checksum ".buildcache/cache-keys/package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc"}}
          name: Restore package cache
      - restore_cache:
          key: package-90507c0ed31182c944b810c0f4d5049446163ed3-{{checksum ".buildcache/cache-keys/package-90507c0ed31182c944b810c0f4d5049446163ed3"}}
          name: Restore package cache
      - restore_cache:
          key: package-68f542ca27e8095a085eb4276360c54ad38bc831-{{checksum ".buildcache/cache-keys/package-68f542ca27e8095a085eb4276360c54ad38bc831"}}
          name: Restore package cache
      - restore_cache:
          key: package-473e780d97673f8911e99a401e921adf96a053a0-{{checksum ".buildcache/cache-keys/package-473e780d97673f8911e99a401e921adf96a053a0"}}
          name: Restore package cache
      - restore_cache:
          key: package-9d38932cc379bdb297329df045cf63f05b4290e0-{{checksum ".buildcache/cache-keys/package-9d38932cc379bdb297329df045cf63f05b4290e0"}}
          name: Restore package cache
      - restore_cache:
          key: package-8707acb44f49385d7ede9c8430ee300338cb3039-{{checksum ".buildcache/cache-keys/package-8707acb44f49385d7ede9c8430ee300338cb3039"}}
          name: Restore package cache
      - restore_cache:
          key: package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f-{{checksum ".buildcache/cache-keys/package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f"}}
          name: Restore package cache
      - restore_cache:
          key: package-c4d36307d556ba9e59426a23a9d57453e4dfc43f-{{checksum ".buildcache/cache-keys/package-c4d36307d556ba9e59426a23a9d57453e4dfc43f"}}
          name: Restore package cache
      - restore_cache:
          key: package-66b4a59d2d9560dd678c2d5384e0cf36011a72af-{{checksum ".buildcache/cache-keys/package-66b4a59d2d9560dd678c2d5384e0cf36011a72af"}}
          name: Restore package cache
      - restore_cache:
          key: package-61c55d10e8cd1e28dde6be342f9f25586ae2c904-{{checksum ".buildcache/cache-keys/package-61c55d10e8cd1e28dde6be342f9f25586ae2c904"}}
          name: Restore package cache
      - restore_cache:
          key: package-4b273e790280172c1d859f4108fc2a41dab0a7b4-{{checksum ".buildcache/cache-keys/package-4b273e790280172c1d859f4108fc2a41dab0a7b4"}}
          name: Restore package cache
      - restore_cache:
          key: package-324a003a4752068ec63359609aa69eb4fb0b30d0-{{checksum ".buildcache/cache-keys/package-324a003a4752068ec63359609aa69eb4fb0b30d0"}}
          name: Restore package cache
      - restore_cache:
          key: package-5c8063df4f359e30384f4491f28fb983e5bb3c7e-{{checksum ".buildcache/cache-keys/package-5c8063df4f359e30384f4491f28fb983e5bb3c7e"}}
          name: Restore package cache
      - restore_cache:
          key: package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b-{{checksum ".buildcache/cache-keys/package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-6d175b571d7b25ad.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-6d175b571d7b25ad.tar.gz .buildcache/packages lockfile-6d175b571d7b25ad.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-6d175b571d7b25ad.tar.gz .buildcache/packages/store/*.json lockfile-6d175b571d7b25ad.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-6d175b571d7b25ad.yml
      - store_artifacts:
          path: packages-6d175b571d7b25ad.tar.gz
      - store_artifacts:
          path: meta-6d175b571d7b25ad.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a37b930b5c9596de8cd95fdc341e4536da2696c6-{{checksum ".buildcache/cache-keys/package-a37b930b5c9596de8cd95fdc341e4536da2696c6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a37b930b5c9596de8cd95fdc341e4536da2696c6-{{checksum ".buildcache/cache-keys/package-a37b930b5c9596de8cd95fdc341e4536da2696c6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a37b930b5c9596de8cd95fdc341e4536da2696c6
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc-{{checksum ".buildcache/cache-keys/package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc-{{checksum ".buildcache/cache-keys/package-5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5b65b433dabcfe9b8966b03c7dbd571b03c8fbfc
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-90507c0ed31182c944b810c0f4d5049446163ed3-{{checksum ".buildcache/cache-keys/package-90507c0ed31182c944b810c0f4d5049446163ed3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-90507c0ed31182c944b810c0f4d5049446163ed3-{{checksum ".buildcache/cache-keys/package-90507c0ed31182c944b810c0f4d5049446163ed3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 90507c0ed31182c944b810c0f4d5049446163ed3
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-68f542ca27e8095a085eb4276360c54ad38bc831-{{checksum ".buildcache/cache-keys/package-68f542ca27e8095a085eb4276360c54ad38bc831"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-68f542ca27e8095a085eb4276360c54ad38bc831-{{checksum ".buildcache/cache-keys/package-68f542ca27e8095a085eb4276360c54ad38bc831"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 68f542ca27e8095a085eb4276360c54ad38bc831
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-473e780d97673f8911e99a401e921adf96a053a0-{{checksum ".buildcache/cache-keys/package-473e780d97673f8911e99a401e921adf96a053a0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-473e780d97673f8911e99a401e921adf96a053a0-{{checksum ".buildcache/cache-keys/package-473e780d97673f8911e99a401e921adf96a053a0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 473e780d97673f8911e99a401e921adf96a053a0
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9d38932cc379bdb297329df045cf63f05b4290e0-{{checksum ".buildcache/cache-keys/package-9d38932cc379bdb297329df045cf63f05b4290e0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9d38932cc379bdb297329df045cf63f05b4290e0-{{checksum ".buildcache/cache-keys/package-9d38932cc379bdb297329df045cf63f05b4290e0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9d38932cc379bdb297329df045cf63f05b4290e0
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8707acb44f49385d7ede9c8430ee300338cb3039-{{checksum ".buildcache/cache-keys/package-8707acb44f49385d7ede9c8430ee300338cb3039"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8707acb44f49385d7ede9c8430ee300338cb3039-{{checksum ".buildcache/cache-keys/package-8707acb44f49385d7ede9c8430ee300338cb3039"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8707acb44f49385d7ede9c8430ee300338cb3039
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f-{{checksum ".buildcache/cache-keys/package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f-{{checksum ".buildcache/cache-keys/package-c46e7af430e9d0f965fe3c934b1fdd4e2458010f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c46e7af430e9d0f965fe3c934b1fdd4e2458010f
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c4d36307d556ba9e59426a23a9d57453e4dfc43f-{{checksum ".buildcache/cache-keys/package-c4d36307d556ba9e59426a23a9d57453e4dfc43f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c4d36307d556ba9e59426a23a9d57453e4dfc43f-{{checksum ".buildcache/cache-keys/package-c4d36307d556ba9e59426a23a9d57453e4dfc43f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c4d36307d556ba9e59426a23a9d57453e4dfc43f
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-66b4a59d2d9560dd678c2d5384e0cf36011a72af-{{checksum ".buildcache/cache-keys/package-66b4a59d2d9560dd678c2d5384e0cf36011a72af"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-66b4a59d2d9560dd678c2d5384e0cf36011a72af-{{checksum ".buildcache/cache-keys/package-66b4a59d2d9560dd678c2d5384e0cf36011a72af"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 66b4a59d2d9560dd678c2d5384e0cf36011a72af
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-61c55d10e8cd1e28dde6be342f9f25586ae2c904-{{checksum ".buildcache/cache-keys/package-61c55d10e8cd1e28dde6be342f9f25586ae2c904"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-61c55d10e8cd1e28dde6be342f9f25586ae2c904-{{checksum ".buildcache/cache-keys/package-61c55d10e8cd1e28dde6be342f9f25586ae2c904"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 61c55d10e8cd1e28dde6be342f9f25586ae2c904
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4b273e790280172c1d859f4108fc2a41dab0a7b4-{{checksum ".buildcache/cache-keys/package-4b273e790280172c1d859f4108fc2a41dab0a7b4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4b273e790280172c1d859f4108fc2a41dab0a7b4-{{checksum ".buildcache/cache-keys/package-4b273e790280172c1d859f4108fc2a41dab0a7b4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4b273e790280172c1d859f4108fc2a41dab0a7b4
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-324a003a4752068ec63359609aa69eb4fb0b30d0-{{checksum ".buildcache/cache-keys/package-324a003a4752068ec63359609aa69eb4fb0b30d0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-324a003a4752068ec63359609aa69eb4fb0b30d0-{{checksum ".buildcache/cache-keys/package-324a003a4752068ec63359609aa69eb4fb0b30d0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 324a003a4752068ec63359609aa69eb4fb0b30d0
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5c8063df4f359e30384f4491f28fb983e5bb3c7e-{{checksum ".buildcache/cache-keys/package-5c8063df4f359e30384f4491f28fb983e5bb3c7e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5c8063df4f359e30384f4491f28fb983e5bb3c7e-{{checksum ".buildcache/cache-keys/package-5c8063df4f359e30384f4491f28fb983e5bb3c7e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5c8063df4f359e30384f4491f28fb983e5bb3c7e
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b-{{checksum ".buildcache/cache-keys/package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b-{{checksum ".buildcache/cache-keys/package-07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 07f1c40ab3f32a8c80e50bfcdafc561fc5b5730b
workflows:
  build-6d175b571d7b25ad:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
