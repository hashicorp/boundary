version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-71060d200c6cc159d8ec6985e1d5da98928ae9bf-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-df59318f09ca89bf63058463f2944e1f14816b5c-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d.tar.gz
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69-{{checksum ".buildcache/cache-keys/package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69"}}
          name: Restore package cache
      - restore_cache:
          key: package-48c36211bab7feda64bf11319476a5c59faa749b-{{checksum ".buildcache/cache-keys/package-48c36211bab7feda64bf11319476a5c59faa749b"}}
          name: Restore package cache
      - restore_cache:
          key: package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d-{{checksum ".buildcache/cache-keys/package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d"}}
          name: Restore package cache
      - restore_cache:
          key: package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c-{{checksum ".buildcache/cache-keys/package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c"}}
          name: Restore package cache
      - restore_cache:
          key: package-12c3de17a54f3a0f824d98170c3666b6d37f34ae-{{checksum ".buildcache/cache-keys/package-12c3de17a54f3a0f824d98170c3666b6d37f34ae"}}
          name: Restore package cache
      - restore_cache:
          key: package-e0febdacd6f20ff48b11eacfb07f9da1a782238c-{{checksum ".buildcache/cache-keys/package-e0febdacd6f20ff48b11eacfb07f9da1a782238c"}}
          name: Restore package cache
      - restore_cache:
          key: package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3-{{checksum ".buildcache/cache-keys/package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3"}}
          name: Restore package cache
      - restore_cache:
          key: package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984-{{checksum ".buildcache/cache-keys/package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984"}}
          name: Restore package cache
      - restore_cache:
          key: package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe-{{checksum ".buildcache/cache-keys/package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe"}}
          name: Restore package cache
      - restore_cache:
          key: package-6098f9a4a203f9320d760401ec5c70099cfc787c-{{checksum ".buildcache/cache-keys/package-6098f9a4a203f9320d760401ec5c70099cfc787c"}}
          name: Restore package cache
      - restore_cache:
          key: package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc-{{checksum ".buildcache/cache-keys/package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc"}}
          name: Restore package cache
      - restore_cache:
          key: package-767aa06541dd92c8eea46ebc720db7264ab59d3a-{{checksum ".buildcache/cache-keys/package-767aa06541dd92c8eea46ebc720db7264ab59d3a"}}
          name: Restore package cache
      - restore_cache:
          key: package-7cea001ac497e905008dba7fc8dab4d665ad5359-{{checksum ".buildcache/cache-keys/package-7cea001ac497e905008dba7fc8dab4d665ad5359"}}
          name: Restore package cache
      - restore_cache:
          key: package-761f700ef9211d1c92183b222ecbf22ca4100f3d-{{checksum ".buildcache/cache-keys/package-761f700ef9211d1c92183b222ecbf22ca4100f3d"}}
          name: Restore package cache
      - restore_cache:
          key: package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38-{{checksum ".buildcache/cache-keys/package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-524afd4668247e31.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-524afd4668247e31.tar.gz .buildcache/packages lockfile-524afd4668247e31.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-524afd4668247e31.tar.gz .buildcache/packages/store/*.json lockfile-524afd4668247e31.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-524afd4668247e31.yml
      - store_artifacts:
          path: packages-524afd4668247e31.tar.gz
      - store_artifacts:
          path: meta-524afd4668247e31.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69-{{checksum ".buildcache/cache-keys/package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69-{{checksum ".buildcache/cache-keys/package-4c6ce42ce69a41a479d2950b35b8de7f513e5c69"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4c6ce42ce69a41a479d2950b35b8de7f513e5c69
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-48c36211bab7feda64bf11319476a5c59faa749b-{{checksum ".buildcache/cache-keys/package-48c36211bab7feda64bf11319476a5c59faa749b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-48c36211bab7feda64bf11319476a5c59faa749b-{{checksum ".buildcache/cache-keys/package-48c36211bab7feda64bf11319476a5c59faa749b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 48c36211bab7feda64bf11319476a5c59faa749b
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d-{{checksum ".buildcache/cache-keys/package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d-{{checksum ".buildcache/cache-keys/package-c4ae620ece2c7e7463a85ccaa7649c42b2cda51d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c4ae620ece2c7e7463a85ccaa7649c42b2cda51d
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c-{{checksum ".buildcache/cache-keys/package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c-{{checksum ".buildcache/cache-keys/package-48cdb69442d4f9ae279c7bf3b62a0793999fd72c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 48cdb69442d4f9ae279c7bf3b62a0793999fd72c
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-12c3de17a54f3a0f824d98170c3666b6d37f34ae-{{checksum ".buildcache/cache-keys/package-12c3de17a54f3a0f824d98170c3666b6d37f34ae"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-12c3de17a54f3a0f824d98170c3666b6d37f34ae-{{checksum ".buildcache/cache-keys/package-12c3de17a54f3a0f824d98170c3666b6d37f34ae"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 12c3de17a54f3a0f824d98170c3666b6d37f34ae
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e0febdacd6f20ff48b11eacfb07f9da1a782238c-{{checksum ".buildcache/cache-keys/package-e0febdacd6f20ff48b11eacfb07f9da1a782238c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e0febdacd6f20ff48b11eacfb07f9da1a782238c-{{checksum ".buildcache/cache-keys/package-e0febdacd6f20ff48b11eacfb07f9da1a782238c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e0febdacd6f20ff48b11eacfb07f9da1a782238c
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3-{{checksum ".buildcache/cache-keys/package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3-{{checksum ".buildcache/cache-keys/package-bb54821156e85ff1badb93d7eb6f409dfdc1baa3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bb54821156e85ff1badb93d7eb6f409dfdc1baa3
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984-{{checksum ".buildcache/cache-keys/package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984-{{checksum ".buildcache/cache-keys/package-b1ad682c90a25f4ee2d5072f9e578a0b133d5984"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b1ad682c90a25f4ee2d5072f9e578a0b133d5984
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe-{{checksum ".buildcache/cache-keys/package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe-{{checksum ".buildcache/cache-keys/package-d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d1548fba35085a3eb874ebcc8b1fe2d9d3349dfe
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6098f9a4a203f9320d760401ec5c70099cfc787c-{{checksum ".buildcache/cache-keys/package-6098f9a4a203f9320d760401ec5c70099cfc787c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6098f9a4a203f9320d760401ec5c70099cfc787c-{{checksum ".buildcache/cache-keys/package-6098f9a4a203f9320d760401ec5c70099cfc787c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6098f9a4a203f9320d760401ec5c70099cfc787c
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc-{{checksum ".buildcache/cache-keys/package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc-{{checksum ".buildcache/cache-keys/package-e8fefec8e40f20367ba3e4335e2adbd33dc11dfc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e8fefec8e40f20367ba3e4335e2adbd33dc11dfc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-767aa06541dd92c8eea46ebc720db7264ab59d3a-{{checksum ".buildcache/cache-keys/package-767aa06541dd92c8eea46ebc720db7264ab59d3a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-767aa06541dd92c8eea46ebc720db7264ab59d3a-{{checksum ".buildcache/cache-keys/package-767aa06541dd92c8eea46ebc720db7264ab59d3a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 767aa06541dd92c8eea46ebc720db7264ab59d3a
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7cea001ac497e905008dba7fc8dab4d665ad5359-{{checksum ".buildcache/cache-keys/package-7cea001ac497e905008dba7fc8dab4d665ad5359"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7cea001ac497e905008dba7fc8dab4d665ad5359-{{checksum ".buildcache/cache-keys/package-7cea001ac497e905008dba7fc8dab4d665ad5359"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7cea001ac497e905008dba7fc8dab4d665ad5359
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-761f700ef9211d1c92183b222ecbf22ca4100f3d-{{checksum ".buildcache/cache-keys/package-761f700ef9211d1c92183b222ecbf22ca4100f3d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-761f700ef9211d1c92183b222ecbf22ca4100f3d-{{checksum ".buildcache/cache-keys/package-761f700ef9211d1c92183b222ecbf22ca4100f3d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 761f700ef9211d1c92183b222ecbf22ca4100f3d
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38-{{checksum ".buildcache/cache-keys/package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b2d3_{{checksum ".buildcache/cache-keys/copy-source-b2d3e0412764fce09bb20ea38e8d570038cabd4d"}}
          keys:
            - go-modules_0d85_{{checksum ".buildcache/cache-keys/go-modules-0d85710c89f1525a0d0510e70f229c05cb7a158e"}}
            - ui_df59_{{checksum ".buildcache/cache-keys/ui-df59318f09ca89bf63058463f2944e1f14816b5c"}}
            - base_7106_{{checksum ".buildcache/cache-keys/base-71060d200c6cc159d8ec6985e1d5da98928ae9bf"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38-{{checksum ".buildcache/cache-keys/package-35cc8d6f07d0b2fec4c93bfedd809a44743dae38"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 35cc8d6f07d0b2fec4c93bfedd809a44743dae38
workflows:
  build-524afd4668247e31:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
