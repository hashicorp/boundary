version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-0d92b3d58e7d4901a5838aef4d924bcaacc13024-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae.tar.gz
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-edc20117391ec02d435a7d649d97931b46a5e711-{{checksum ".buildcache/cache-keys/package-edc20117391ec02d435a7d649d97931b46a5e711"}}
          name: Restore package cache
      - restore_cache:
          key: package-96aecd2d70b0e68c328f0b37140d8fee2848ad38-{{checksum ".buildcache/cache-keys/package-96aecd2d70b0e68c328f0b37140d8fee2848ad38"}}
          name: Restore package cache
      - restore_cache:
          key: package-d40189ad39278673f1639239b08d5a67a5d2323d-{{checksum ".buildcache/cache-keys/package-d40189ad39278673f1639239b08d5a67a5d2323d"}}
          name: Restore package cache
      - restore_cache:
          key: package-2903a8310d824a4039cab4420d7ba995354d5ed0-{{checksum ".buildcache/cache-keys/package-2903a8310d824a4039cab4420d7ba995354d5ed0"}}
          name: Restore package cache
      - restore_cache:
          key: package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac-{{checksum ".buildcache/cache-keys/package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac"}}
          name: Restore package cache
      - restore_cache:
          key: package-9da87e2b4a7eadee9865290245f73043a235659f-{{checksum ".buildcache/cache-keys/package-9da87e2b4a7eadee9865290245f73043a235659f"}}
          name: Restore package cache
      - restore_cache:
          key: package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf-{{checksum ".buildcache/cache-keys/package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf"}}
          name: Restore package cache
      - restore_cache:
          key: package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a-{{checksum ".buildcache/cache-keys/package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a"}}
          name: Restore package cache
      - restore_cache:
          key: package-63cecb8af2aee9381fecc5f617a318e94b7bec99-{{checksum ".buildcache/cache-keys/package-63cecb8af2aee9381fecc5f617a318e94b7bec99"}}
          name: Restore package cache
      - restore_cache:
          key: package-722232ace8919914b51f485c07001ea9e75066f8-{{checksum ".buildcache/cache-keys/package-722232ace8919914b51f485c07001ea9e75066f8"}}
          name: Restore package cache
      - restore_cache:
          key: package-011a411874233087f4464eeaf84897f47e2fa4d8-{{checksum ".buildcache/cache-keys/package-011a411874233087f4464eeaf84897f47e2fa4d8"}}
          name: Restore package cache
      - restore_cache:
          key: package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181-{{checksum ".buildcache/cache-keys/package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181"}}
          name: Restore package cache
      - restore_cache:
          key: package-ce38de3f2a7999711978b8030ce35975232b666d-{{checksum ".buildcache/cache-keys/package-ce38de3f2a7999711978b8030ce35975232b666d"}}
          name: Restore package cache
      - restore_cache:
          key: package-9d1368ee67cbd86df78575e2a09b31669e9fdd59-{{checksum ".buildcache/cache-keys/package-9d1368ee67cbd86df78575e2a09b31669e9fdd59"}}
          name: Restore package cache
      - restore_cache:
          key: package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71-{{checksum ".buildcache/cache-keys/package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-8654a708f84cf51f.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-8654a708f84cf51f.tar.gz .buildcache/packages lockfile-8654a708f84cf51f.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-8654a708f84cf51f.tar.gz .buildcache/packages/store/*.json lockfile-8654a708f84cf51f.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-8654a708f84cf51f.yml
      - store_artifacts:
          path: packages-8654a708f84cf51f.tar.gz
      - store_artifacts:
          path: meta-8654a708f84cf51f.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-edc20117391ec02d435a7d649d97931b46a5e711-{{checksum ".buildcache/cache-keys/package-edc20117391ec02d435a7d649d97931b46a5e711"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-edc20117391ec02d435a7d649d97931b46a5e711-{{checksum ".buildcache/cache-keys/package-edc20117391ec02d435a7d649d97931b46a5e711"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: edc20117391ec02d435a7d649d97931b46a5e711
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96aecd2d70b0e68c328f0b37140d8fee2848ad38-{{checksum ".buildcache/cache-keys/package-96aecd2d70b0e68c328f0b37140d8fee2848ad38"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96aecd2d70b0e68c328f0b37140d8fee2848ad38-{{checksum ".buildcache/cache-keys/package-96aecd2d70b0e68c328f0b37140d8fee2848ad38"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96aecd2d70b0e68c328f0b37140d8fee2848ad38
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d40189ad39278673f1639239b08d5a67a5d2323d-{{checksum ".buildcache/cache-keys/package-d40189ad39278673f1639239b08d5a67a5d2323d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d40189ad39278673f1639239b08d5a67a5d2323d-{{checksum ".buildcache/cache-keys/package-d40189ad39278673f1639239b08d5a67a5d2323d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d40189ad39278673f1639239b08d5a67a5d2323d
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2903a8310d824a4039cab4420d7ba995354d5ed0-{{checksum ".buildcache/cache-keys/package-2903a8310d824a4039cab4420d7ba995354d5ed0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2903a8310d824a4039cab4420d7ba995354d5ed0-{{checksum ".buildcache/cache-keys/package-2903a8310d824a4039cab4420d7ba995354d5ed0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2903a8310d824a4039cab4420d7ba995354d5ed0
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac-{{checksum ".buildcache/cache-keys/package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac-{{checksum ".buildcache/cache-keys/package-2a8a03801608d245c3fcd4fc2c088a5a7b1684ac"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2a8a03801608d245c3fcd4fc2c088a5a7b1684ac
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9da87e2b4a7eadee9865290245f73043a235659f-{{checksum ".buildcache/cache-keys/package-9da87e2b4a7eadee9865290245f73043a235659f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9da87e2b4a7eadee9865290245f73043a235659f-{{checksum ".buildcache/cache-keys/package-9da87e2b4a7eadee9865290245f73043a235659f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9da87e2b4a7eadee9865290245f73043a235659f
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf-{{checksum ".buildcache/cache-keys/package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf-{{checksum ".buildcache/cache-keys/package-3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3eec1c10dc3e0a3bed5a5747eeb6cad73c386bbf
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a-{{checksum ".buildcache/cache-keys/package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a-{{checksum ".buildcache/cache-keys/package-98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 98b8be8fbf4f5ed56a9f694fc57ce69b95756a6a
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-63cecb8af2aee9381fecc5f617a318e94b7bec99-{{checksum ".buildcache/cache-keys/package-63cecb8af2aee9381fecc5f617a318e94b7bec99"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-63cecb8af2aee9381fecc5f617a318e94b7bec99-{{checksum ".buildcache/cache-keys/package-63cecb8af2aee9381fecc5f617a318e94b7bec99"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 63cecb8af2aee9381fecc5f617a318e94b7bec99
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-722232ace8919914b51f485c07001ea9e75066f8-{{checksum ".buildcache/cache-keys/package-722232ace8919914b51f485c07001ea9e75066f8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-722232ace8919914b51f485c07001ea9e75066f8-{{checksum ".buildcache/cache-keys/package-722232ace8919914b51f485c07001ea9e75066f8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 722232ace8919914b51f485c07001ea9e75066f8
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-011a411874233087f4464eeaf84897f47e2fa4d8-{{checksum ".buildcache/cache-keys/package-011a411874233087f4464eeaf84897f47e2fa4d8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-011a411874233087f4464eeaf84897f47e2fa4d8-{{checksum ".buildcache/cache-keys/package-011a411874233087f4464eeaf84897f47e2fa4d8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 011a411874233087f4464eeaf84897f47e2fa4d8
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181-{{checksum ".buildcache/cache-keys/package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181-{{checksum ".buildcache/cache-keys/package-eff08dc3fab690cda40bcb9dbd8ed58491d2a181"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eff08dc3fab690cda40bcb9dbd8ed58491d2a181
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ce38de3f2a7999711978b8030ce35975232b666d-{{checksum ".buildcache/cache-keys/package-ce38de3f2a7999711978b8030ce35975232b666d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ce38de3f2a7999711978b8030ce35975232b666d-{{checksum ".buildcache/cache-keys/package-ce38de3f2a7999711978b8030ce35975232b666d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ce38de3f2a7999711978b8030ce35975232b666d
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9d1368ee67cbd86df78575e2a09b31669e9fdd59-{{checksum ".buildcache/cache-keys/package-9d1368ee67cbd86df78575e2a09b31669e9fdd59"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9d1368ee67cbd86df78575e2a09b31669e9fdd59-{{checksum ".buildcache/cache-keys/package-9d1368ee67cbd86df78575e2a09b31669e9fdd59"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9d1368ee67cbd86df78575e2a09b31669e9fdd59
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71-{{checksum ".buildcache/cache-keys/package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2012_{{checksum ".buildcache/cache-keys/copy-source-201238cda3f5f6c00aae5226ba86053a1c493bae"}}
          keys:
            - go-modules_f979_{{checksum ".buildcache/cache-keys/go-modules-f9793218a5480bb4a9d3c17421f225468e3aafe4"}}
            - ui_22bb_{{checksum ".buildcache/cache-keys/ui-22bb0f1fffc6022df75438a7f19619c28a2d8a5f"}}
            - base_0d92_{{checksum ".buildcache/cache-keys/base-0d92b3d58e7d4901a5838aef4d924bcaacc13024"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71-{{checksum ".buildcache/cache-keys/package-b35b9db7950c2e77dafdce6a57fd59ccc94f0b71"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b35b9db7950c2e77dafdce6a57fd59ccc94f0b71
workflows:
  build-8654a708f84cf51f:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
