version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-b846999949732b4909705805bc966271a781f9ad make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-b2f59b2d4223729e0cfca83f651ade1039b52e39-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-855160c42f310f22f923602dcdad2a99954567e3-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-b846999949732b4909705805bc966271a781f9ad-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-b846999949732b4909705805bc966271a781f9ad-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-b846999949732b4909705805bc966271a781f9ad.tar.gz
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-03b117345203910b20788c7a20bc885c4cffa5eb-{{checksum ".buildcache/cache-keys/package-03b117345203910b20788c7a20bc885c4cffa5eb"}}
          name: Restore package cache
      - restore_cache:
          key: package-7f11b017536888b406ae3fc07ab5acf788915d20-{{checksum ".buildcache/cache-keys/package-7f11b017536888b406ae3fc07ab5acf788915d20"}}
          name: Restore package cache
      - restore_cache:
          key: package-af5201e9857443b044126ae68f8ebe17c31539a5-{{checksum ".buildcache/cache-keys/package-af5201e9857443b044126ae68f8ebe17c31539a5"}}
          name: Restore package cache
      - restore_cache:
          key: package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379-{{checksum ".buildcache/cache-keys/package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379"}}
          name: Restore package cache
      - restore_cache:
          key: package-f21eca676332ce40e46e8b272674b4e00fe9b0e6-{{checksum ".buildcache/cache-keys/package-f21eca676332ce40e46e8b272674b4e00fe9b0e6"}}
          name: Restore package cache
      - restore_cache:
          key: package-91213875ea3637007597077dec26e3753e4d5f87-{{checksum ".buildcache/cache-keys/package-91213875ea3637007597077dec26e3753e4d5f87"}}
          name: Restore package cache
      - restore_cache:
          key: package-b645ba8850ce93e641646af78f4b9098f2a60676-{{checksum ".buildcache/cache-keys/package-b645ba8850ce93e641646af78f4b9098f2a60676"}}
          name: Restore package cache
      - restore_cache:
          key: package-47d578393828e30f38ba300b950c93fb091a824c-{{checksum ".buildcache/cache-keys/package-47d578393828e30f38ba300b950c93fb091a824c"}}
          name: Restore package cache
      - restore_cache:
          key: package-64dd5ee055b7a81ea33918fbaded444c23b29322-{{checksum ".buildcache/cache-keys/package-64dd5ee055b7a81ea33918fbaded444c23b29322"}}
          name: Restore package cache
      - restore_cache:
          key: package-63e8184eaec6dbebe12cc4479c03a04fd969e025-{{checksum ".buildcache/cache-keys/package-63e8184eaec6dbebe12cc4479c03a04fd969e025"}}
          name: Restore package cache
      - restore_cache:
          key: package-46f93c7c14a378381b73d41ef27212e736ea6e51-{{checksum ".buildcache/cache-keys/package-46f93c7c14a378381b73d41ef27212e736ea6e51"}}
          name: Restore package cache
      - restore_cache:
          key: package-573ced75c6d5a5803f939795e82a615ef8363d17-{{checksum ".buildcache/cache-keys/package-573ced75c6d5a5803f939795e82a615ef8363d17"}}
          name: Restore package cache
      - restore_cache:
          key: package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1-{{checksum ".buildcache/cache-keys/package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1"}}
          name: Restore package cache
      - restore_cache:
          key: package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca-{{checksum ".buildcache/cache-keys/package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca"}}
          name: Restore package cache
      - restore_cache:
          key: package-302f8119737a339a3fc0de82874b641ac338f6e9-{{checksum ".buildcache/cache-keys/package-302f8119737a339a3fc0de82874b641ac338f6e9"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-57956cd07f57e669.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-57956cd07f57e669.tar.gz .buildcache/packages lockfile-57956cd07f57e669.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-57956cd07f57e669.tar.gz .buildcache/packages/store/*.json lockfile-57956cd07f57e669.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-57956cd07f57e669.yml
      - store_artifacts:
          path: packages-57956cd07f57e669.tar.gz
      - store_artifacts:
          path: meta-57956cd07f57e669.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-03b117345203910b20788c7a20bc885c4cffa5eb-{{checksum ".buildcache/cache-keys/package-03b117345203910b20788c7a20bc885c4cffa5eb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-03b117345203910b20788c7a20bc885c4cffa5eb-{{checksum ".buildcache/cache-keys/package-03b117345203910b20788c7a20bc885c4cffa5eb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 03b117345203910b20788c7a20bc885c4cffa5eb
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7f11b017536888b406ae3fc07ab5acf788915d20-{{checksum ".buildcache/cache-keys/package-7f11b017536888b406ae3fc07ab5acf788915d20"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7f11b017536888b406ae3fc07ab5acf788915d20-{{checksum ".buildcache/cache-keys/package-7f11b017536888b406ae3fc07ab5acf788915d20"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7f11b017536888b406ae3fc07ab5acf788915d20
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-af5201e9857443b044126ae68f8ebe17c31539a5-{{checksum ".buildcache/cache-keys/package-af5201e9857443b044126ae68f8ebe17c31539a5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-af5201e9857443b044126ae68f8ebe17c31539a5-{{checksum ".buildcache/cache-keys/package-af5201e9857443b044126ae68f8ebe17c31539a5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: af5201e9857443b044126ae68f8ebe17c31539a5
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379-{{checksum ".buildcache/cache-keys/package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379-{{checksum ".buildcache/cache-keys/package-f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f434a8af3a0dc2ac86fb8f8d8bb2565ce3e4e379
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f21eca676332ce40e46e8b272674b4e00fe9b0e6-{{checksum ".buildcache/cache-keys/package-f21eca676332ce40e46e8b272674b4e00fe9b0e6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f21eca676332ce40e46e8b272674b4e00fe9b0e6-{{checksum ".buildcache/cache-keys/package-f21eca676332ce40e46e8b272674b4e00fe9b0e6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f21eca676332ce40e46e8b272674b4e00fe9b0e6
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-91213875ea3637007597077dec26e3753e4d5f87-{{checksum ".buildcache/cache-keys/package-91213875ea3637007597077dec26e3753e4d5f87"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-91213875ea3637007597077dec26e3753e4d5f87-{{checksum ".buildcache/cache-keys/package-91213875ea3637007597077dec26e3753e4d5f87"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 91213875ea3637007597077dec26e3753e4d5f87
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b645ba8850ce93e641646af78f4b9098f2a60676-{{checksum ".buildcache/cache-keys/package-b645ba8850ce93e641646af78f4b9098f2a60676"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b645ba8850ce93e641646af78f4b9098f2a60676-{{checksum ".buildcache/cache-keys/package-b645ba8850ce93e641646af78f4b9098f2a60676"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b645ba8850ce93e641646af78f4b9098f2a60676
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-47d578393828e30f38ba300b950c93fb091a824c-{{checksum ".buildcache/cache-keys/package-47d578393828e30f38ba300b950c93fb091a824c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-47d578393828e30f38ba300b950c93fb091a824c-{{checksum ".buildcache/cache-keys/package-47d578393828e30f38ba300b950c93fb091a824c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 47d578393828e30f38ba300b950c93fb091a824c
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-64dd5ee055b7a81ea33918fbaded444c23b29322-{{checksum ".buildcache/cache-keys/package-64dd5ee055b7a81ea33918fbaded444c23b29322"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-64dd5ee055b7a81ea33918fbaded444c23b29322-{{checksum ".buildcache/cache-keys/package-64dd5ee055b7a81ea33918fbaded444c23b29322"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 64dd5ee055b7a81ea33918fbaded444c23b29322
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-63e8184eaec6dbebe12cc4479c03a04fd969e025-{{checksum ".buildcache/cache-keys/package-63e8184eaec6dbebe12cc4479c03a04fd969e025"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-63e8184eaec6dbebe12cc4479c03a04fd969e025-{{checksum ".buildcache/cache-keys/package-63e8184eaec6dbebe12cc4479c03a04fd969e025"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 63e8184eaec6dbebe12cc4479c03a04fd969e025
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-46f93c7c14a378381b73d41ef27212e736ea6e51-{{checksum ".buildcache/cache-keys/package-46f93c7c14a378381b73d41ef27212e736ea6e51"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-46f93c7c14a378381b73d41ef27212e736ea6e51-{{checksum ".buildcache/cache-keys/package-46f93c7c14a378381b73d41ef27212e736ea6e51"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 46f93c7c14a378381b73d41ef27212e736ea6e51
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-573ced75c6d5a5803f939795e82a615ef8363d17-{{checksum ".buildcache/cache-keys/package-573ced75c6d5a5803f939795e82a615ef8363d17"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-573ced75c6d5a5803f939795e82a615ef8363d17-{{checksum ".buildcache/cache-keys/package-573ced75c6d5a5803f939795e82a615ef8363d17"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 573ced75c6d5a5803f939795e82a615ef8363d17
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1-{{checksum ".buildcache/cache-keys/package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1-{{checksum ".buildcache/cache-keys/package-cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cfb337fbe52b82eafd7e0b7039eabf63a5b3c9e1
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca-{{checksum ".buildcache/cache-keys/package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca-{{checksum ".buildcache/cache-keys/package-87f61adcd1ffd52200960d89c6bb9d1d6dc672ca"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 87f61adcd1ffd52200960d89c6bb9d1d6dc672ca
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-302f8119737a339a3fc0de82874b641ac338f6e9-{{checksum ".buildcache/cache-keys/package-302f8119737a339a3fc0de82874b641ac338f6e9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b846_{{checksum ".buildcache/cache-keys/copy-source-b846999949732b4909705805bc966271a781f9ad"}}
          keys:
            - go-modules_9bbd_{{checksum ".buildcache/cache-keys/go-modules-9bbdb533d1908af0a369ec790a3b318b7cd11e74"}}
            - ui_8551_{{checksum ".buildcache/cache-keys/ui-855160c42f310f22f923602dcdad2a99954567e3"}}
            - base_b2f5_{{checksum ".buildcache/cache-keys/base-b2f59b2d4223729e0cfca83f651ade1039b52e39"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-302f8119737a339a3fc0de82874b641ac338f6e9-{{checksum ".buildcache/cache-keys/package-302f8119737a339a3fc0de82874b641ac338f6e9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 302f8119737a339a3fc0de82874b641ac338f6e9
workflows:
  build-57956cd07f57e669:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
