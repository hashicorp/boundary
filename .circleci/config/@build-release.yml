---
# ***
# WARNING: Do not EDIT or MERGE this file, it is generated by packagespec.
# ***

version: 2.1

executors:
  builder:
    docker:
      - image: circleci/buildpack-deps
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c
  builder-machine:
    machine:
      image: ubuntu-1604:202007-01
    resource_class: xlarge
    environment:
      PRODUCT_REVISION: ""
      AUTO_INSTALL_TOOLS: 'YES'
      BUILDKIT_PROGRESS: plain
    shell: /usr/bin/env bash -euo pipefail -c

workflows:
  version: 2
  build-standalone:
    jobs:
      - build-common-layers
      - darwin_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_386_package: { requires: [ build-common-layers ] }
      - freebsd_amd64_package: { requires: [ build-common-layers ] }
      - freebsd_arm_package: { requires: [ build-common-layers ] }
      - linux_386_package: { requires: [ build-common-layers ] }
      - linux_amd64_package: { requires: [ build-common-layers ] }
      - linux_arm_package: { requires: [ build-common-layers ] }
      - linux_arm64_package: { requires: [ build-common-layers ] }
      - netbsd_386_package: { requires: [ build-common-layers ] }
      - netbsd_amd64_package: { requires: [ build-common-layers ] }
      - openbsd_386_package: { requires: [ build-common-layers ] }
      - openbsd_amd64_package: { requires: [ build-common-layers ] }
      - solaris_amd64_package: { requires: [ build-common-layers ] }
      - windows_386_package: { requires: [ build-common-layers ] }
      - windows_amd64_package: { requires: [ build-common-layers ] }
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"

      - checkout
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build image cache
          keys:
            - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
            - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
            - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
            - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Finish early if loaded exact match from cache.
          command: |
            if [ -f .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz ]; then
              echo "Exact match found in cache, skipping build."
              circleci-agent step halt
            else
              echo "No exact match found, proceeding with build."
            fi
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            LAYER_SPEC_ID=03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1 make -C packages*.lock load-builder-cache
      - run:
          name: Build base layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-099928364fd2887ff530039cc75059de9f8b668f-image
      - run:
          name: Build ui layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e-image
      - run:
          name: Build go-modules layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34-image
      - run:
          name: Build copy-source layer
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-image

      - run:
          name: Export builder image
          command: make -f packages*.lock/layer.mk 03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1-save
      - save_cache:
          name: Save layer copy-source to cache.
          key: cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          paths:
            - .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz
      - run:
          name: Prepare layer go-modules for caching
          command: mv .buildcache/archives/03-copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1.tar.gz .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
      - save_cache:
          name: Save layer go-modules to cache.
          key: cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          paths:
            - .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz
      - run:
          name: Prepare layer ui for caching
          command: mv .buildcache/archives/02-go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34.tar.gz .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
      - save_cache:
          name: Save layer ui to cache.
          key: cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          paths:
            - .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz
      - run:
          name: Prepare layer base for caching
          command: mv .buildcache/archives/01-ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e.tar.gz .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
      - save_cache:
          name: Save layer base to cache.
          key: cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
          paths:
            - .buildcache/archives/00-base-099928364fd2887ff530039cc75059de9f8b668f.tar.gz
  darwin_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 75baee3cd1f2dec3fe432e203855e606de12d628
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: b7f11ff0cceefd4fb00274c88c173be0f84d9a8c
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  freebsd_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: be384c5b09fd0611dfca42ca12e8861ab871b61f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: e7c5021a194b2bacde4efa4371a7536c8e675242
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 14bfac5d2c51918df5993842f69d992ae7bd71fb
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  linux_arm64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: fb6329db34a29d2fba5e46ca81720596031347fb
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: d1bec53618915df2a36d647f53f58bf9b247f369
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  netbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 505d2175eab7c1020099eff46b089903f2362cac
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 74cb09762e110daad64e017b9e89738b6971739d
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  openbsd_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 26cc9da432b62a22288c67858d9dd020a3d84ff8
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  solaris_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 568d427808fbfe9a2085d9560b761f84c158cb85
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_386_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: e220ec23d9eec39cebb4998bf5a499a2b0d19f0f
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.

  windows_amd64_package:
    executor: builder
    environment:
      - PACKAGE_SPEC_ID: 2e2e8d6885b014b3be97416640628f8a7783514e
    steps:
      
      - setup_remote_docker:
          version: 19.03.12
      
      - add_ssh_keys:
          fingerprints:
            # hashicorp-ci github user.
            - "c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98"


      - checkout

      # Restore the package cache first, we might not need to rebuild.
      - write-package-cache-key
      - restore_cache:
          name: Restore package cache
          key: 'cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}'
      - run:
          name: Check the cache status.
          command: |
            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt

      # We need to rebuild, so load the builder cache.
      - write-build-layer-cache-keys
      - restore_cache:
          name: Restore build layer cache
          keys:
          - cache006-copy-source_638c_{{checksum ".buildcache/cache-keys/copy-source-638c924c80d3f62ba3a8aee98b174469eacc34c1"}}
          - cache006-go-modules_7557_{{checksum ".buildcache/cache-keys/go-modules-7557fa9fe642ad83b115e6c62aa4e8899fe0cb34"}}
          - cache006-ui_9f91_{{checksum ".buildcache/cache-keys/ui-9f9170ccf6ed4245ce5becbb186c6f9ea18e6e2e"}}
          - cache006-base_0999_{{checksum ".buildcache/cache-keys/base-099928364fd2887ff530039cc75059de9f8b668f"}}
      - run:
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
          command: |
            make -C packages*.lock load-builder-cache

      - run:
          name: Compile Package
          command: |
            
            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package

      - run:
          name: List packages
          command: ls -lahR .buildcache/packages
      - save_cache:
          name: Saving package cache
          key: 'cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}'
          paths:
            - .buildcache/packages/store
      # Save builder image cache if necessary.
      # The range should only iterate over a single layer.


  bundle-releases:
    executor: builder
    steps:
      - checkout
      - write-all-package-cache-keys
      - load-darwin_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 75baee3cd1f2dec3fe432e203855e606de12d628
          name: Write package metadata for darwin_amd64_package
          command: |
            make package-meta
      - load-freebsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38
          name: Write package metadata for freebsd_386_package
          command: |
            make package-meta
      - load-freebsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: b7f11ff0cceefd4fb00274c88c173be0f84d9a8c
          name: Write package metadata for freebsd_amd64_package
          command: |
            make package-meta
      - load-freebsd_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc
          name: Write package metadata for freebsd_arm_package
          command: |
            make package-meta
      - load-linux_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: be384c5b09fd0611dfca42ca12e8861ab871b61f
          name: Write package metadata for linux_386_package
          command: |
            make package-meta
      - load-linux_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: e7c5021a194b2bacde4efa4371a7536c8e675242
          name: Write package metadata for linux_amd64_package
          command: |
            make package-meta
      - load-linux_arm_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 14bfac5d2c51918df5993842f69d992ae7bd71fb
          name: Write package metadata for linux_arm_package
          command: |
            make package-meta
      - load-linux_arm64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: fb6329db34a29d2fba5e46ca81720596031347fb
          name: Write package metadata for linux_arm64_package
          command: |
            make package-meta
      - load-netbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: d1bec53618915df2a36d647f53f58bf9b247f369
          name: Write package metadata for netbsd_386_package
          command: |
            make package-meta
      - load-netbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 505d2175eab7c1020099eff46b089903f2362cac
          name: Write package metadata for netbsd_amd64_package
          command: |
            make package-meta
      - load-openbsd_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 74cb09762e110daad64e017b9e89738b6971739d
          name: Write package metadata for openbsd_386_package
          command: |
            make package-meta
      - load-openbsd_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 26cc9da432b62a22288c67858d9dd020a3d84ff8
          name: Write package metadata for openbsd_amd64_package
          command: |
            make package-meta
      - load-solaris_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 568d427808fbfe9a2085d9560b761f84c158cb85
          name: Write package metadata for solaris_amd64_package
          command: |
            make package-meta
      - load-windows_386_package
      - run:
          environment:
            PACKAGE_SPEC_ID: e220ec23d9eec39cebb4998bf5a499a2b0d19f0f
          name: Write package metadata for windows_386_package
          command: |
            make package-meta
      - load-windows_amd64_package
      - run:
          environment:
            PACKAGE_SPEC_ID: 2e2e8d6885b014b3be97416640628f8a7783514e
          name: Write package metadata for windows_amd64_package
          command: |
            make package-meta
      - run:
          name: Write package aliases
          command:
            make aliases
      - run:
          name: List Build Cache
          command: ls -lahR .buildcache

      # Give the lockfile a name store_artifacts can work with.
      - run: cp packages*.lock/pkgs.yml lockfile-standalone.yml

      # Surface the lock file as an artifact.
      - store_artifacts:
          path: lockfile-standalone.yml
          destination: lockfile-standalone.yml

      # Surface the package store directory as an artifact.
      # This makes each zipped package separately downloadable.
      - store_artifacts:
          path: .buildcache/packages
          destination: packages-standalone

      # Surface a tarball of the whole package store plus lockfile as an artifact.
      - run: tar -czf packages-standalone.tar.gz .buildcache/packages lockfile-standalone.yml
      - store_artifacts:
          path: packages-standalone.tar.gz
          destination: packages-standalone.tar.gz

      # Surface a tarball of just the metadata files.
      - run: tar -czf meta-standalone.tar.gz .buildcache/packages/store/*.json lockfile-standalone.yml
      - store_artifacts:
          path: meta-standalone.tar.gz
          destination: meta-standalone.tar.gz

commands:
  load-darwin_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-75baee3cd1f2dec3fe432e203855e606de12d628-{{checksum ".buildcache/cache-keys/package-75baee3cd1f2dec3fe432e203855e606de12d628"}}'
  
  load-freebsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38-{{checksum ".buildcache/cache-keys/package-b2cdae1c59b3ca73aced71a1c61ec1018e8f3f38"}}'
  
  load-freebsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c-{{checksum ".buildcache/cache-keys/package-b7f11ff0cceefd4fb00274c88c173be0f84d9a8c"}}'
  
  load-freebsd_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc-{{checksum ".buildcache/cache-keys/package-5ee20d2e0230756a8b6e39163bf50fe8ec6f09cc"}}'
  
  load-linux_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-be384c5b09fd0611dfca42ca12e8861ab871b61f-{{checksum ".buildcache/cache-keys/package-be384c5b09fd0611dfca42ca12e8861ab871b61f"}}'
  
  load-linux_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-e7c5021a194b2bacde4efa4371a7536c8e675242-{{checksum ".buildcache/cache-keys/package-e7c5021a194b2bacde4efa4371a7536c8e675242"}}'
  
  load-linux_arm_package:
    steps:
      - restore_cache:
          key: 'cache006-package-14bfac5d2c51918df5993842f69d992ae7bd71fb-{{checksum ".buildcache/cache-keys/package-14bfac5d2c51918df5993842f69d992ae7bd71fb"}}'
  
  load-linux_arm64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-fb6329db34a29d2fba5e46ca81720596031347fb-{{checksum ".buildcache/cache-keys/package-fb6329db34a29d2fba5e46ca81720596031347fb"}}'
  
  load-netbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-d1bec53618915df2a36d647f53f58bf9b247f369-{{checksum ".buildcache/cache-keys/package-d1bec53618915df2a36d647f53f58bf9b247f369"}}'
  
  load-netbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-505d2175eab7c1020099eff46b089903f2362cac-{{checksum ".buildcache/cache-keys/package-505d2175eab7c1020099eff46b089903f2362cac"}}'
  
  load-openbsd_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-74cb09762e110daad64e017b9e89738b6971739d-{{checksum ".buildcache/cache-keys/package-74cb09762e110daad64e017b9e89738b6971739d"}}'
  
  load-openbsd_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-26cc9da432b62a22288c67858d9dd020a3d84ff8-{{checksum ".buildcache/cache-keys/package-26cc9da432b62a22288c67858d9dd020a3d84ff8"}}'
  
  load-solaris_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-568d427808fbfe9a2085d9560b761f84c158cb85-{{checksum ".buildcache/cache-keys/package-568d427808fbfe9a2085d9560b761f84c158cb85"}}'
  
  load-windows_386_package:
    steps:
      - restore_cache:
          key: 'cache006-package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f-{{checksum ".buildcache/cache-keys/package-e220ec23d9eec39cebb4998bf5a499a2b0d19f0f"}}'
  
  load-windows_amd64_package:
    steps:
      - restore_cache:
          key: 'cache006-package-2e2e8d6885b014b3be97416640628f8a7783514e-{{checksum ".buildcache/cache-keys/package-2e2e8d6885b014b3be97416640628f8a7783514e"}}'
  

  write-build-layer-cache-keys:
    steps:
      - run:
          name: Write builder layer cache keys
          command: make -C packages*.lock write-builder-cache-keys

  write-package-cache-key:
    steps:
      - run:
          name: Write package cache key
          command: make -C packages*.lock write-package-cache-key

  write-all-package-cache-keys:
    steps:
      - run:
          name: Write all package cache keys
          command: make -C packages*.lock write-all-package-cache-keys
