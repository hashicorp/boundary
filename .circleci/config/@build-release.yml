version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-7106f0993f7f82cce77f88cac3d4aad74561ace1-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-377574d7d13eaa0b1b40076910be751039c977dd-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5.tar.gz
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-1127264420b85df6f16884936c63c690dab1b04f-{{checksum ".buildcache/cache-keys/package-1127264420b85df6f16884936c63c690dab1b04f"}}
          name: Restore package cache
      - restore_cache:
          key: package-a7cd0c08b9d00690bde097b14c2db32550c81f08-{{checksum ".buildcache/cache-keys/package-a7cd0c08b9d00690bde097b14c2db32550c81f08"}}
          name: Restore package cache
      - restore_cache:
          key: package-731e972814428dd02898e0c2c71278c46bca4d16-{{checksum ".buildcache/cache-keys/package-731e972814428dd02898e0c2c71278c46bca4d16"}}
          name: Restore package cache
      - restore_cache:
          key: package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989-{{checksum ".buildcache/cache-keys/package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989"}}
          name: Restore package cache
      - restore_cache:
          key: package-334d05c2a7807e66fb7641f1b85f9d62c067aeac-{{checksum ".buildcache/cache-keys/package-334d05c2a7807e66fb7641f1b85f9d62c067aeac"}}
          name: Restore package cache
      - restore_cache:
          key: package-37b45145ed658373504e8a36657746ee6c270e4c-{{checksum ".buildcache/cache-keys/package-37b45145ed658373504e8a36657746ee6c270e4c"}}
          name: Restore package cache
      - restore_cache:
          key: package-aa7842419a55387e7110911ae8884642353a37d2-{{checksum ".buildcache/cache-keys/package-aa7842419a55387e7110911ae8884642353a37d2"}}
          name: Restore package cache
      - restore_cache:
          key: package-6213f76a9f648f6a101d4f12082814232f858397-{{checksum ".buildcache/cache-keys/package-6213f76a9f648f6a101d4f12082814232f858397"}}
          name: Restore package cache
      - restore_cache:
          key: package-7517fcb853dd38d00a4f595a859bda2362da3638-{{checksum ".buildcache/cache-keys/package-7517fcb853dd38d00a4f595a859bda2362da3638"}}
          name: Restore package cache
      - restore_cache:
          key: package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0-{{checksum ".buildcache/cache-keys/package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0"}}
          name: Restore package cache
      - restore_cache:
          key: package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d-{{checksum ".buildcache/cache-keys/package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d"}}
          name: Restore package cache
      - restore_cache:
          key: package-dd519728552ec4cdb7de60be0b921ec6e0b00488-{{checksum ".buildcache/cache-keys/package-dd519728552ec4cdb7de60be0b921ec6e0b00488"}}
          name: Restore package cache
      - restore_cache:
          key: package-81a9889cba175c3e37b803deee427a26de83ea45-{{checksum ".buildcache/cache-keys/package-81a9889cba175c3e37b803deee427a26de83ea45"}}
          name: Restore package cache
      - restore_cache:
          key: package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87-{{checksum ".buildcache/cache-keys/package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87"}}
          name: Restore package cache
      - restore_cache:
          key: package-28e191cc1f1094ca13f3617ca5d159b659ea8063-{{checksum ".buildcache/cache-keys/package-28e191cc1f1094ca13f3617ca5d159b659ea8063"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-4ab42d391be9d56c.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-4ab42d391be9d56c.tar.gz .buildcache/packages lockfile-4ab42d391be9d56c.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-4ab42d391be9d56c.tar.gz .buildcache/packages/store/*.json lockfile-4ab42d391be9d56c.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-4ab42d391be9d56c.yml
      - store_artifacts:
          path: packages-4ab42d391be9d56c.tar.gz
      - store_artifacts:
          path: meta-4ab42d391be9d56c.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1127264420b85df6f16884936c63c690dab1b04f-{{checksum ".buildcache/cache-keys/package-1127264420b85df6f16884936c63c690dab1b04f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1127264420b85df6f16884936c63c690dab1b04f-{{checksum ".buildcache/cache-keys/package-1127264420b85df6f16884936c63c690dab1b04f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1127264420b85df6f16884936c63c690dab1b04f
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a7cd0c08b9d00690bde097b14c2db32550c81f08-{{checksum ".buildcache/cache-keys/package-a7cd0c08b9d00690bde097b14c2db32550c81f08"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a7cd0c08b9d00690bde097b14c2db32550c81f08-{{checksum ".buildcache/cache-keys/package-a7cd0c08b9d00690bde097b14c2db32550c81f08"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a7cd0c08b9d00690bde097b14c2db32550c81f08
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-731e972814428dd02898e0c2c71278c46bca4d16-{{checksum ".buildcache/cache-keys/package-731e972814428dd02898e0c2c71278c46bca4d16"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-731e972814428dd02898e0c2c71278c46bca4d16-{{checksum ".buildcache/cache-keys/package-731e972814428dd02898e0c2c71278c46bca4d16"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 731e972814428dd02898e0c2c71278c46bca4d16
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989-{{checksum ".buildcache/cache-keys/package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989-{{checksum ".buildcache/cache-keys/package-0371c7a0cdf24497d4e731d8b23a0cae41f7d989"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0371c7a0cdf24497d4e731d8b23a0cae41f7d989
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-334d05c2a7807e66fb7641f1b85f9d62c067aeac-{{checksum ".buildcache/cache-keys/package-334d05c2a7807e66fb7641f1b85f9d62c067aeac"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-334d05c2a7807e66fb7641f1b85f9d62c067aeac-{{checksum ".buildcache/cache-keys/package-334d05c2a7807e66fb7641f1b85f9d62c067aeac"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 334d05c2a7807e66fb7641f1b85f9d62c067aeac
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-37b45145ed658373504e8a36657746ee6c270e4c-{{checksum ".buildcache/cache-keys/package-37b45145ed658373504e8a36657746ee6c270e4c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-37b45145ed658373504e8a36657746ee6c270e4c-{{checksum ".buildcache/cache-keys/package-37b45145ed658373504e8a36657746ee6c270e4c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 37b45145ed658373504e8a36657746ee6c270e4c
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-aa7842419a55387e7110911ae8884642353a37d2-{{checksum ".buildcache/cache-keys/package-aa7842419a55387e7110911ae8884642353a37d2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-aa7842419a55387e7110911ae8884642353a37d2-{{checksum ".buildcache/cache-keys/package-aa7842419a55387e7110911ae8884642353a37d2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: aa7842419a55387e7110911ae8884642353a37d2
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6213f76a9f648f6a101d4f12082814232f858397-{{checksum ".buildcache/cache-keys/package-6213f76a9f648f6a101d4f12082814232f858397"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6213f76a9f648f6a101d4f12082814232f858397-{{checksum ".buildcache/cache-keys/package-6213f76a9f648f6a101d4f12082814232f858397"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6213f76a9f648f6a101d4f12082814232f858397
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7517fcb853dd38d00a4f595a859bda2362da3638-{{checksum ".buildcache/cache-keys/package-7517fcb853dd38d00a4f595a859bda2362da3638"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7517fcb853dd38d00a4f595a859bda2362da3638-{{checksum ".buildcache/cache-keys/package-7517fcb853dd38d00a4f595a859bda2362da3638"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7517fcb853dd38d00a4f595a859bda2362da3638
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0-{{checksum ".buildcache/cache-keys/package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0-{{checksum ".buildcache/cache-keys/package-383ad9829835c0d2c2c0ce272e7f9e483dbc79b0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 383ad9829835c0d2c2c0ce272e7f9e483dbc79b0
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d-{{checksum ".buildcache/cache-keys/package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d-{{checksum ".buildcache/cache-keys/package-b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b17d3b7ce493b8e5f4053d2204c4d72c8ac27a3d
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dd519728552ec4cdb7de60be0b921ec6e0b00488-{{checksum ".buildcache/cache-keys/package-dd519728552ec4cdb7de60be0b921ec6e0b00488"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dd519728552ec4cdb7de60be0b921ec6e0b00488-{{checksum ".buildcache/cache-keys/package-dd519728552ec4cdb7de60be0b921ec6e0b00488"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dd519728552ec4cdb7de60be0b921ec6e0b00488
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-81a9889cba175c3e37b803deee427a26de83ea45-{{checksum ".buildcache/cache-keys/package-81a9889cba175c3e37b803deee427a26de83ea45"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-81a9889cba175c3e37b803deee427a26de83ea45-{{checksum ".buildcache/cache-keys/package-81a9889cba175c3e37b803deee427a26de83ea45"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 81a9889cba175c3e37b803deee427a26de83ea45
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87-{{checksum ".buildcache/cache-keys/package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87-{{checksum ".buildcache/cache-keys/package-8e76b88da0717d2512f1bd3afd5853f3e72c9f87"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8e76b88da0717d2512f1bd3afd5853f3e72c9f87
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-28e191cc1f1094ca13f3617ca5d159b659ea8063-{{checksum ".buildcache/cache-keys/package-28e191cc1f1094ca13f3617ca5d159b659ea8063"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_a60d_{{checksum ".buildcache/cache-keys/copy-source-a60d61d8d34dba4e2c360254348f1c0130c194c5"}}
          keys:
            - go-modules_3775_{{checksum ".buildcache/cache-keys/go-modules-377574d7d13eaa0b1b40076910be751039c977dd"}}
            - ui_7106_{{checksum ".buildcache/cache-keys/ui-7106f0993f7f82cce77f88cac3d4aad74561ace1"}}
            - base_7958_{{checksum ".buildcache/cache-keys/base-7958f46eaafb50c5d467b2bd9833f1dc9a2dd01b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-28e191cc1f1094ca13f3617ca5d159b659ea8063-{{checksum ".buildcache/cache-keys/package-28e191cc1f1094ca13f3617ca5d159b659ea8063"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 28e191cc1f1094ca13f3617ca5d159b659ea8063
workflows:
  build-4ab42d391be9d56c:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
