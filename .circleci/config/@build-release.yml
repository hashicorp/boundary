version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-7e620c89b64e5ba6df2dc9baf224752a687063d0-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c.tar.gz
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-61340dc55d2e2cce10fe33240851419606defc22-{{checksum ".buildcache/cache-keys/package-61340dc55d2e2cce10fe33240851419606defc22"}}
          name: Restore package cache
      - restore_cache:
          key: package-d38129921f2c0beef6d38742bcddd290370e84d0-{{checksum ".buildcache/cache-keys/package-d38129921f2c0beef6d38742bcddd290370e84d0"}}
          name: Restore package cache
      - restore_cache:
          key: package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9-{{checksum ".buildcache/cache-keys/package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9"}}
          name: Restore package cache
      - restore_cache:
          key: package-b45ddd36dfc3aa63bfa1d201136242d971c1c738-{{checksum ".buildcache/cache-keys/package-b45ddd36dfc3aa63bfa1d201136242d971c1c738"}}
          name: Restore package cache
      - restore_cache:
          key: package-8d2734a9857983f33ef6850fd0533c432f64a3bd-{{checksum ".buildcache/cache-keys/package-8d2734a9857983f33ef6850fd0533c432f64a3bd"}}
          name: Restore package cache
      - restore_cache:
          key: package-028651f9f1647c98a5ad56901faf231f9c26cfed-{{checksum ".buildcache/cache-keys/package-028651f9f1647c98a5ad56901faf231f9c26cfed"}}
          name: Restore package cache
      - restore_cache:
          key: package-4640c0c9ee32148b4c232e4e656b529bf36edb1a-{{checksum ".buildcache/cache-keys/package-4640c0c9ee32148b4c232e4e656b529bf36edb1a"}}
          name: Restore package cache
      - restore_cache:
          key: package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38-{{checksum ".buildcache/cache-keys/package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38"}}
          name: Restore package cache
      - restore_cache:
          key: package-74307ec29e73dd020ef02d0014873e79ea85651b-{{checksum ".buildcache/cache-keys/package-74307ec29e73dd020ef02d0014873e79ea85651b"}}
          name: Restore package cache
      - restore_cache:
          key: package-3e3e2f83da255c281fa23d74fd634cd9bb05671f-{{checksum ".buildcache/cache-keys/package-3e3e2f83da255c281fa23d74fd634cd9bb05671f"}}
          name: Restore package cache
      - restore_cache:
          key: package-20385a0305b4c44ad821076d0fbaba61200bb180-{{checksum ".buildcache/cache-keys/package-20385a0305b4c44ad821076d0fbaba61200bb180"}}
          name: Restore package cache
      - restore_cache:
          key: package-aa2653c814a299503af95c1ae16710d47d0bb4b8-{{checksum ".buildcache/cache-keys/package-aa2653c814a299503af95c1ae16710d47d0bb4b8"}}
          name: Restore package cache
      - restore_cache:
          key: package-14ff36388cb5c6db3449f5661c5c7863c8aa4063-{{checksum ".buildcache/cache-keys/package-14ff36388cb5c6db3449f5661c5c7863c8aa4063"}}
          name: Restore package cache
      - restore_cache:
          key: package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030-{{checksum ".buildcache/cache-keys/package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030"}}
          name: Restore package cache
      - restore_cache:
          key: package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d-{{checksum ".buildcache/cache-keys/package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-b6e66fa3fba726f.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-b6e66fa3fba726f.tar.gz .buildcache/packages lockfile-b6e66fa3fba726f.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-b6e66fa3fba726f.tar.gz .buildcache/packages/store/*.json lockfile-b6e66fa3fba726f.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-b6e66fa3fba726f.yml
      - store_artifacts:
          path: packages-b6e66fa3fba726f.tar.gz
      - store_artifacts:
          path: meta-b6e66fa3fba726f.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-61340dc55d2e2cce10fe33240851419606defc22-{{checksum ".buildcache/cache-keys/package-61340dc55d2e2cce10fe33240851419606defc22"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-61340dc55d2e2cce10fe33240851419606defc22-{{checksum ".buildcache/cache-keys/package-61340dc55d2e2cce10fe33240851419606defc22"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 61340dc55d2e2cce10fe33240851419606defc22
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d38129921f2c0beef6d38742bcddd290370e84d0-{{checksum ".buildcache/cache-keys/package-d38129921f2c0beef6d38742bcddd290370e84d0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d38129921f2c0beef6d38742bcddd290370e84d0-{{checksum ".buildcache/cache-keys/package-d38129921f2c0beef6d38742bcddd290370e84d0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d38129921f2c0beef6d38742bcddd290370e84d0
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9-{{checksum ".buildcache/cache-keys/package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9-{{checksum ".buildcache/cache-keys/package-c5a382b88fcbde679550ebe56aa7bf9e64602aa9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c5a382b88fcbde679550ebe56aa7bf9e64602aa9
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b45ddd36dfc3aa63bfa1d201136242d971c1c738-{{checksum ".buildcache/cache-keys/package-b45ddd36dfc3aa63bfa1d201136242d971c1c738"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b45ddd36dfc3aa63bfa1d201136242d971c1c738-{{checksum ".buildcache/cache-keys/package-b45ddd36dfc3aa63bfa1d201136242d971c1c738"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b45ddd36dfc3aa63bfa1d201136242d971c1c738
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8d2734a9857983f33ef6850fd0533c432f64a3bd-{{checksum ".buildcache/cache-keys/package-8d2734a9857983f33ef6850fd0533c432f64a3bd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8d2734a9857983f33ef6850fd0533c432f64a3bd-{{checksum ".buildcache/cache-keys/package-8d2734a9857983f33ef6850fd0533c432f64a3bd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8d2734a9857983f33ef6850fd0533c432f64a3bd
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-028651f9f1647c98a5ad56901faf231f9c26cfed-{{checksum ".buildcache/cache-keys/package-028651f9f1647c98a5ad56901faf231f9c26cfed"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-028651f9f1647c98a5ad56901faf231f9c26cfed-{{checksum ".buildcache/cache-keys/package-028651f9f1647c98a5ad56901faf231f9c26cfed"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 028651f9f1647c98a5ad56901faf231f9c26cfed
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4640c0c9ee32148b4c232e4e656b529bf36edb1a-{{checksum ".buildcache/cache-keys/package-4640c0c9ee32148b4c232e4e656b529bf36edb1a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4640c0c9ee32148b4c232e4e656b529bf36edb1a-{{checksum ".buildcache/cache-keys/package-4640c0c9ee32148b4c232e4e656b529bf36edb1a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4640c0c9ee32148b4c232e4e656b529bf36edb1a
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38-{{checksum ".buildcache/cache-keys/package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38-{{checksum ".buildcache/cache-keys/package-0eedaf0d31e8f06daa2e8b4daf403184bff88b38"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0eedaf0d31e8f06daa2e8b4daf403184bff88b38
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-74307ec29e73dd020ef02d0014873e79ea85651b-{{checksum ".buildcache/cache-keys/package-74307ec29e73dd020ef02d0014873e79ea85651b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-74307ec29e73dd020ef02d0014873e79ea85651b-{{checksum ".buildcache/cache-keys/package-74307ec29e73dd020ef02d0014873e79ea85651b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 74307ec29e73dd020ef02d0014873e79ea85651b
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3e3e2f83da255c281fa23d74fd634cd9bb05671f-{{checksum ".buildcache/cache-keys/package-3e3e2f83da255c281fa23d74fd634cd9bb05671f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3e3e2f83da255c281fa23d74fd634cd9bb05671f-{{checksum ".buildcache/cache-keys/package-3e3e2f83da255c281fa23d74fd634cd9bb05671f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3e3e2f83da255c281fa23d74fd634cd9bb05671f
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-20385a0305b4c44ad821076d0fbaba61200bb180-{{checksum ".buildcache/cache-keys/package-20385a0305b4c44ad821076d0fbaba61200bb180"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-20385a0305b4c44ad821076d0fbaba61200bb180-{{checksum ".buildcache/cache-keys/package-20385a0305b4c44ad821076d0fbaba61200bb180"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 20385a0305b4c44ad821076d0fbaba61200bb180
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-aa2653c814a299503af95c1ae16710d47d0bb4b8-{{checksum ".buildcache/cache-keys/package-aa2653c814a299503af95c1ae16710d47d0bb4b8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-aa2653c814a299503af95c1ae16710d47d0bb4b8-{{checksum ".buildcache/cache-keys/package-aa2653c814a299503af95c1ae16710d47d0bb4b8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: aa2653c814a299503af95c1ae16710d47d0bb4b8
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-14ff36388cb5c6db3449f5661c5c7863c8aa4063-{{checksum ".buildcache/cache-keys/package-14ff36388cb5c6db3449f5661c5c7863c8aa4063"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-14ff36388cb5c6db3449f5661c5c7863c8aa4063-{{checksum ".buildcache/cache-keys/package-14ff36388cb5c6db3449f5661c5c7863c8aa4063"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 14ff36388cb5c6db3449f5661c5c7863c8aa4063
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030-{{checksum ".buildcache/cache-keys/package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030-{{checksum ".buildcache/cache-keys/package-0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0d88f6e6c7dc5b4a6b269fff52a72bb1adf45030
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d-{{checksum ".buildcache/cache-keys/package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_9bc9_{{checksum ".buildcache/cache-keys/copy-source-9bc98d4bf22b620aaa1be4945a929d32f3ecde1c"}}
          keys:
            - go-modules_1b6e_{{checksum ".buildcache/cache-keys/go-modules-1b6e57e95e7fee15e7caca4e8be7253ea39b005d"}}
            - ui_a6cc_{{checksum ".buildcache/cache-keys/ui-a6cc5c12edeb20e6a9991f598a77e2fd4cc3d47f"}}
            - base_7e62_{{checksum ".buildcache/cache-keys/base-7e620c89b64e5ba6df2dc9baf224752a687063d0"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d-{{checksum ".buildcache/cache-keys/package-1920a2ef06c06a8598fcd0d7733eeec99bd65c9d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1920a2ef06c06a8598fcd0d7733eeec99bd65c9d
workflows:
  build-b6e66fa3fba726f:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
