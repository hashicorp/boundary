version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-721e2dfd4eb3c37d9458f1595c8137034deb4def-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-5601d332d26288bf638496d1a60cb263e4652476-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65.tar.gz
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-9e5f96fa211b319f548affa69c4da461abe96322-{{checksum ".buildcache/cache-keys/package-9e5f96fa211b319f548affa69c4da461abe96322"}}
          name: Restore package cache
      - restore_cache:
          key: package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151-{{checksum ".buildcache/cache-keys/package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151"}}
          name: Restore package cache
      - restore_cache:
          key: package-96f846c19c2fbac30965a40c89a9760dfb116222-{{checksum ".buildcache/cache-keys/package-96f846c19c2fbac30965a40c89a9760dfb116222"}}
          name: Restore package cache
      - restore_cache:
          key: package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b-{{checksum ".buildcache/cache-keys/package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b"}}
          name: Restore package cache
      - restore_cache:
          key: package-f7891b0816d7fb96ab551f6519bde9215e208b7c-{{checksum ".buildcache/cache-keys/package-f7891b0816d7fb96ab551f6519bde9215e208b7c"}}
          name: Restore package cache
      - restore_cache:
          key: package-0b7f25fcdba82f56804f1781971a22e8ef8166aa-{{checksum ".buildcache/cache-keys/package-0b7f25fcdba82f56804f1781971a22e8ef8166aa"}}
          name: Restore package cache
      - restore_cache:
          key: package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b-{{checksum ".buildcache/cache-keys/package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b"}}
          name: Restore package cache
      - restore_cache:
          key: package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8-{{checksum ".buildcache/cache-keys/package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-879e28bd866a9109f800e6a1c15eb1ab399bfd06-{{checksum ".buildcache/cache-keys/package-879e28bd866a9109f800e6a1c15eb1ab399bfd06"}}
          name: Restore package cache
      - restore_cache:
          key: package-d554f4c4da8b567e2140eb0433b7554f6a70f96c-{{checksum ".buildcache/cache-keys/package-d554f4c4da8b567e2140eb0433b7554f6a70f96c"}}
          name: Restore package cache
      - restore_cache:
          key: package-a8b70ca811f4bea3ece064193f010c38fe036081-{{checksum ".buildcache/cache-keys/package-a8b70ca811f4bea3ece064193f010c38fe036081"}}
          name: Restore package cache
      - restore_cache:
          key: package-3536556c1cccf5d75e92810e0b0037c6fe84e856-{{checksum ".buildcache/cache-keys/package-3536556c1cccf5d75e92810e0b0037c6fe84e856"}}
          name: Restore package cache
      - restore_cache:
          key: package-f90fd894ca71085545a431059d9456b9b4a5abb7-{{checksum ".buildcache/cache-keys/package-f90fd894ca71085545a431059d9456b9b4a5abb7"}}
          name: Restore package cache
      - restore_cache:
          key: package-33389330c082dec96be76096c11b8d74999186eb-{{checksum ".buildcache/cache-keys/package-33389330c082dec96be76096c11b8d74999186eb"}}
          name: Restore package cache
      - restore_cache:
          key: package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75-{{checksum ".buildcache/cache-keys/package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-c8faf963d86f990e.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-c8faf963d86f990e.tar.gz .buildcache/packages lockfile-c8faf963d86f990e.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-c8faf963d86f990e.tar.gz .buildcache/packages/store/*.json lockfile-c8faf963d86f990e.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-c8faf963d86f990e.yml
      - store_artifacts:
          path: packages-c8faf963d86f990e.tar.gz
      - store_artifacts:
          path: meta-c8faf963d86f990e.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9e5f96fa211b319f548affa69c4da461abe96322-{{checksum ".buildcache/cache-keys/package-9e5f96fa211b319f548affa69c4da461abe96322"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9e5f96fa211b319f548affa69c4da461abe96322-{{checksum ".buildcache/cache-keys/package-9e5f96fa211b319f548affa69c4da461abe96322"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9e5f96fa211b319f548affa69c4da461abe96322
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151-{{checksum ".buildcache/cache-keys/package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151-{{checksum ".buildcache/cache-keys/package-59a62bc4d2ea81841cb6616c2d2fdfa9a1471151"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 59a62bc4d2ea81841cb6616c2d2fdfa9a1471151
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-96f846c19c2fbac30965a40c89a9760dfb116222-{{checksum ".buildcache/cache-keys/package-96f846c19c2fbac30965a40c89a9760dfb116222"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-96f846c19c2fbac30965a40c89a9760dfb116222-{{checksum ".buildcache/cache-keys/package-96f846c19c2fbac30965a40c89a9760dfb116222"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 96f846c19c2fbac30965a40c89a9760dfb116222
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b-{{checksum ".buildcache/cache-keys/package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b-{{checksum ".buildcache/cache-keys/package-0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0ee39cf24a8a7b42d50f71b17c373dda0ea46d3b
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f7891b0816d7fb96ab551f6519bde9215e208b7c-{{checksum ".buildcache/cache-keys/package-f7891b0816d7fb96ab551f6519bde9215e208b7c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f7891b0816d7fb96ab551f6519bde9215e208b7c-{{checksum ".buildcache/cache-keys/package-f7891b0816d7fb96ab551f6519bde9215e208b7c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f7891b0816d7fb96ab551f6519bde9215e208b7c
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0b7f25fcdba82f56804f1781971a22e8ef8166aa-{{checksum ".buildcache/cache-keys/package-0b7f25fcdba82f56804f1781971a22e8ef8166aa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0b7f25fcdba82f56804f1781971a22e8ef8166aa-{{checksum ".buildcache/cache-keys/package-0b7f25fcdba82f56804f1781971a22e8ef8166aa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0b7f25fcdba82f56804f1781971a22e8ef8166aa
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b-{{checksum ".buildcache/cache-keys/package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b-{{checksum ".buildcache/cache-keys/package-dba74b64d80c3339461ca2a3fc8b9e3abc46338b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dba74b64d80c3339461ca2a3fc8b9e3abc46338b
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8-{{checksum ".buildcache/cache-keys/package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8-{{checksum ".buildcache/cache-keys/package-b1d483fd3ab83ee3d3f66dd88fee6b31129537c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b1d483fd3ab83ee3d3f66dd88fee6b31129537c8
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-879e28bd866a9109f800e6a1c15eb1ab399bfd06-{{checksum ".buildcache/cache-keys/package-879e28bd866a9109f800e6a1c15eb1ab399bfd06"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-879e28bd866a9109f800e6a1c15eb1ab399bfd06-{{checksum ".buildcache/cache-keys/package-879e28bd866a9109f800e6a1c15eb1ab399bfd06"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 879e28bd866a9109f800e6a1c15eb1ab399bfd06
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d554f4c4da8b567e2140eb0433b7554f6a70f96c-{{checksum ".buildcache/cache-keys/package-d554f4c4da8b567e2140eb0433b7554f6a70f96c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d554f4c4da8b567e2140eb0433b7554f6a70f96c-{{checksum ".buildcache/cache-keys/package-d554f4c4da8b567e2140eb0433b7554f6a70f96c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d554f4c4da8b567e2140eb0433b7554f6a70f96c
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a8b70ca811f4bea3ece064193f010c38fe036081-{{checksum ".buildcache/cache-keys/package-a8b70ca811f4bea3ece064193f010c38fe036081"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a8b70ca811f4bea3ece064193f010c38fe036081-{{checksum ".buildcache/cache-keys/package-a8b70ca811f4bea3ece064193f010c38fe036081"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a8b70ca811f4bea3ece064193f010c38fe036081
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3536556c1cccf5d75e92810e0b0037c6fe84e856-{{checksum ".buildcache/cache-keys/package-3536556c1cccf5d75e92810e0b0037c6fe84e856"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3536556c1cccf5d75e92810e0b0037c6fe84e856-{{checksum ".buildcache/cache-keys/package-3536556c1cccf5d75e92810e0b0037c6fe84e856"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3536556c1cccf5d75e92810e0b0037c6fe84e856
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f90fd894ca71085545a431059d9456b9b4a5abb7-{{checksum ".buildcache/cache-keys/package-f90fd894ca71085545a431059d9456b9b4a5abb7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f90fd894ca71085545a431059d9456b9b4a5abb7-{{checksum ".buildcache/cache-keys/package-f90fd894ca71085545a431059d9456b9b4a5abb7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f90fd894ca71085545a431059d9456b9b4a5abb7
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-33389330c082dec96be76096c11b8d74999186eb-{{checksum ".buildcache/cache-keys/package-33389330c082dec96be76096c11b8d74999186eb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-33389330c082dec96be76096c11b8d74999186eb-{{checksum ".buildcache/cache-keys/package-33389330c082dec96be76096c11b8d74999186eb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 33389330c082dec96be76096c11b8d74999186eb
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75-{{checksum ".buildcache/cache-keys/package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2c58_{{checksum ".buildcache/cache-keys/copy-source-2c58eb91ac1c3ca40c24ea5edf85e08f42487c65"}}
          keys:
            - go-modules_5601_{{checksum ".buildcache/cache-keys/go-modules-5601d332d26288bf638496d1a60cb263e4652476"}}
            - ui_721e_{{checksum ".buildcache/cache-keys/ui-721e2dfd4eb3c37d9458f1595c8137034deb4def"}}
            - base_cc54_{{checksum ".buildcache/cache-keys/base-cc54131f53bbcdef99ae9f2ccbe245ad7df27b88"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75-{{checksum ".buildcache/cache-keys/package-ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ecd4bd8a2282accacfcd5d9d2cefdc26025c7b75
workflows:
  build-c8faf963d86f990e:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
