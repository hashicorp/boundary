version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-cc87158f920a83b1c241d68474eed6734b32c511-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde.tar.gz
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-5e182eecadd802ce4fde19b40733c21f1920d680-{{checksum ".buildcache/cache-keys/package-5e182eecadd802ce4fde19b40733c21f1920d680"}}
          name: Restore package cache
      - restore_cache:
          key: package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d-{{checksum ".buildcache/cache-keys/package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d"}}
          name: Restore package cache
      - restore_cache:
          key: package-ccae35a6ffa3283396cbe5608aa626a65cf951f4-{{checksum ".buildcache/cache-keys/package-ccae35a6ffa3283396cbe5608aa626a65cf951f4"}}
          name: Restore package cache
      - restore_cache:
          key: package-0101b0c84138c8e37a5affd1171d04237dcd044f-{{checksum ".buildcache/cache-keys/package-0101b0c84138c8e37a5affd1171d04237dcd044f"}}
          name: Restore package cache
      - restore_cache:
          key: package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f-{{checksum ".buildcache/cache-keys/package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f"}}
          name: Restore package cache
      - restore_cache:
          key: package-81b9112a9e1bd1d33778c4673adbec942c595a7e-{{checksum ".buildcache/cache-keys/package-81b9112a9e1bd1d33778c4673adbec942c595a7e"}}
          name: Restore package cache
      - restore_cache:
          key: package-b04f52247addbb91ec89a35be1ddff9feadf7090-{{checksum ".buildcache/cache-keys/package-b04f52247addbb91ec89a35be1ddff9feadf7090"}}
          name: Restore package cache
      - restore_cache:
          key: package-25033317f5db33c76740dba3e792063240c317b1-{{checksum ".buildcache/cache-keys/package-25033317f5db33c76740dba3e792063240c317b1"}}
          name: Restore package cache
      - restore_cache:
          key: package-dc42bacf89f0d78468257a40c404e141fa9272c8-{{checksum ".buildcache/cache-keys/package-dc42bacf89f0d78468257a40c404e141fa9272c8"}}
          name: Restore package cache
      - restore_cache:
          key: package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0-{{checksum ".buildcache/cache-keys/package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0"}}
          name: Restore package cache
      - restore_cache:
          key: package-8dd295cf186df50e92ed66575b73e97003885428-{{checksum ".buildcache/cache-keys/package-8dd295cf186df50e92ed66575b73e97003885428"}}
          name: Restore package cache
      - restore_cache:
          key: package-997f9a9e448c02fe17505a5b75635b9dd1104d92-{{checksum ".buildcache/cache-keys/package-997f9a9e448c02fe17505a5b75635b9dd1104d92"}}
          name: Restore package cache
      - restore_cache:
          key: package-505ab0aca6b881919f05bb8e0125783a5799b4fc-{{checksum ".buildcache/cache-keys/package-505ab0aca6b881919f05bb8e0125783a5799b4fc"}}
          name: Restore package cache
      - restore_cache:
          key: package-b7d03bef8d16c702d595798df0cbda643915292c-{{checksum ".buildcache/cache-keys/package-b7d03bef8d16c702d595798df0cbda643915292c"}}
          name: Restore package cache
      - restore_cache:
          key: package-a68848e3db3953d016f73aabb3d732a0333b7bc9-{{checksum ".buildcache/cache-keys/package-a68848e3db3953d016f73aabb3d732a0333b7bc9"}}
          name: Restore package cache
      - restore_cache:
          key: package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240-{{checksum ".buildcache/cache-keys/package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-7f1510c592a3019a.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-7f1510c592a3019a.tar.gz .buildcache/packages lockfile-7f1510c592a3019a.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-7f1510c592a3019a.tar.gz .buildcache/packages/store/*.json lockfile-7f1510c592a3019a.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-7f1510c592a3019a.yml
      - store_artifacts:
          path: packages-7f1510c592a3019a.tar.gz
      - store_artifacts:
          path: meta-7f1510c592a3019a.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5e182eecadd802ce4fde19b40733c21f1920d680-{{checksum ".buildcache/cache-keys/package-5e182eecadd802ce4fde19b40733c21f1920d680"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5e182eecadd802ce4fde19b40733c21f1920d680-{{checksum ".buildcache/cache-keys/package-5e182eecadd802ce4fde19b40733c21f1920d680"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5e182eecadd802ce4fde19b40733c21f1920d680
  darwin_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d-{{checksum ".buildcache/cache-keys/package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d-{{checksum ".buildcache/cache-keys/package-72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 72ea9453ed75bfab19ee6a1fd34e7ac751e5e71d
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ccae35a6ffa3283396cbe5608aa626a65cf951f4-{{checksum ".buildcache/cache-keys/package-ccae35a6ffa3283396cbe5608aa626a65cf951f4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ccae35a6ffa3283396cbe5608aa626a65cf951f4-{{checksum ".buildcache/cache-keys/package-ccae35a6ffa3283396cbe5608aa626a65cf951f4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ccae35a6ffa3283396cbe5608aa626a65cf951f4
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0101b0c84138c8e37a5affd1171d04237dcd044f-{{checksum ".buildcache/cache-keys/package-0101b0c84138c8e37a5affd1171d04237dcd044f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0101b0c84138c8e37a5affd1171d04237dcd044f-{{checksum ".buildcache/cache-keys/package-0101b0c84138c8e37a5affd1171d04237dcd044f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0101b0c84138c8e37a5affd1171d04237dcd044f
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f-{{checksum ".buildcache/cache-keys/package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f-{{checksum ".buildcache/cache-keys/package-3735bcca8df7adfefa7d79ae87bb6731ed5e074f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3735bcca8df7adfefa7d79ae87bb6731ed5e074f
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-81b9112a9e1bd1d33778c4673adbec942c595a7e-{{checksum ".buildcache/cache-keys/package-81b9112a9e1bd1d33778c4673adbec942c595a7e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-81b9112a9e1bd1d33778c4673adbec942c595a7e-{{checksum ".buildcache/cache-keys/package-81b9112a9e1bd1d33778c4673adbec942c595a7e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 81b9112a9e1bd1d33778c4673adbec942c595a7e
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b04f52247addbb91ec89a35be1ddff9feadf7090-{{checksum ".buildcache/cache-keys/package-b04f52247addbb91ec89a35be1ddff9feadf7090"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b04f52247addbb91ec89a35be1ddff9feadf7090-{{checksum ".buildcache/cache-keys/package-b04f52247addbb91ec89a35be1ddff9feadf7090"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b04f52247addbb91ec89a35be1ddff9feadf7090
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-25033317f5db33c76740dba3e792063240c317b1-{{checksum ".buildcache/cache-keys/package-25033317f5db33c76740dba3e792063240c317b1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-25033317f5db33c76740dba3e792063240c317b1-{{checksum ".buildcache/cache-keys/package-25033317f5db33c76740dba3e792063240c317b1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 25033317f5db33c76740dba3e792063240c317b1
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dc42bacf89f0d78468257a40c404e141fa9272c8-{{checksum ".buildcache/cache-keys/package-dc42bacf89f0d78468257a40c404e141fa9272c8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dc42bacf89f0d78468257a40c404e141fa9272c8-{{checksum ".buildcache/cache-keys/package-dc42bacf89f0d78468257a40c404e141fa9272c8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dc42bacf89f0d78468257a40c404e141fa9272c8
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0-{{checksum ".buildcache/cache-keys/package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0-{{checksum ".buildcache/cache-keys/package-f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f56a0ca98b1bf7e4f647cedee7db20d8b940a1e0
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8dd295cf186df50e92ed66575b73e97003885428-{{checksum ".buildcache/cache-keys/package-8dd295cf186df50e92ed66575b73e97003885428"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8dd295cf186df50e92ed66575b73e97003885428-{{checksum ".buildcache/cache-keys/package-8dd295cf186df50e92ed66575b73e97003885428"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8dd295cf186df50e92ed66575b73e97003885428
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-997f9a9e448c02fe17505a5b75635b9dd1104d92-{{checksum ".buildcache/cache-keys/package-997f9a9e448c02fe17505a5b75635b9dd1104d92"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-997f9a9e448c02fe17505a5b75635b9dd1104d92-{{checksum ".buildcache/cache-keys/package-997f9a9e448c02fe17505a5b75635b9dd1104d92"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 997f9a9e448c02fe17505a5b75635b9dd1104d92
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-505ab0aca6b881919f05bb8e0125783a5799b4fc-{{checksum ".buildcache/cache-keys/package-505ab0aca6b881919f05bb8e0125783a5799b4fc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-505ab0aca6b881919f05bb8e0125783a5799b4fc-{{checksum ".buildcache/cache-keys/package-505ab0aca6b881919f05bb8e0125783a5799b4fc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 505ab0aca6b881919f05bb8e0125783a5799b4fc
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b7d03bef8d16c702d595798df0cbda643915292c-{{checksum ".buildcache/cache-keys/package-b7d03bef8d16c702d595798df0cbda643915292c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b7d03bef8d16c702d595798df0cbda643915292c-{{checksum ".buildcache/cache-keys/package-b7d03bef8d16c702d595798df0cbda643915292c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b7d03bef8d16c702d595798df0cbda643915292c
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a68848e3db3953d016f73aabb3d732a0333b7bc9-{{checksum ".buildcache/cache-keys/package-a68848e3db3953d016f73aabb3d732a0333b7bc9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a68848e3db3953d016f73aabb3d732a0333b7bc9-{{checksum ".buildcache/cache-keys/package-a68848e3db3953d016f73aabb3d732a0333b7bc9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a68848e3db3953d016f73aabb3d732a0333b7bc9
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240-{{checksum ".buildcache/cache-keys/package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_6be6_{{checksum ".buildcache/cache-keys/copy-source-6be6bbcf469c2d26620194eeee87f0c4ba470bde"}}
          keys:
            - go-modules_74c0_{{checksum ".buildcache/cache-keys/go-modules-74c0c94188690e22d738cb1784f8feba7c3dc00d"}}
            - ui_dfc9_{{checksum ".buildcache/cache-keys/ui-dfc937906b9b645655c44bc782ef13c64ebe8dbb"}}
            - base_cc87_{{checksum ".buildcache/cache-keys/base-cc87158f920a83b1c241d68474eed6734b32c511"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240-{{checksum ".buildcache/cache-keys/package-89694dc28c6ddc1d0648b69cefdcc9f67d59a240"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 89694dc28c6ddc1d0648b69cefdcc9f67d59a240
workflows:
  build-7f1510c592a3019a:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - darwin_arm64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - darwin_arm64_package:
          requires:
            - build-common-layers
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
