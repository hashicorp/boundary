version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-716c9091c361fa73d89136e603e033a227baa52e-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-148405440c9c54429fa4178f13160230d3112101-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a.tar.gz
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3-{{checksum ".buildcache/cache-keys/package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3"}}
          name: Restore package cache
      - restore_cache:
          key: package-f765c3cfe8d8d1c4947da8b5bee716b12121c529-{{checksum ".buildcache/cache-keys/package-f765c3cfe8d8d1c4947da8b5bee716b12121c529"}}
          name: Restore package cache
      - restore_cache:
          key: package-1cf8306add8abb1e7f20c0af402a31554fcddf98-{{checksum ".buildcache/cache-keys/package-1cf8306add8abb1e7f20c0af402a31554fcddf98"}}
          name: Restore package cache
      - restore_cache:
          key: package-7451b08de75aa304afff66fb624f65a9495dac15-{{checksum ".buildcache/cache-keys/package-7451b08de75aa304afff66fb624f65a9495dac15"}}
          name: Restore package cache
      - restore_cache:
          key: package-c45a227042b60c99dac0a935212598f800c9cb2c-{{checksum ".buildcache/cache-keys/package-c45a227042b60c99dac0a935212598f800c9cb2c"}}
          name: Restore package cache
      - restore_cache:
          key: package-31ff482e60138af164575b50c697f3f2a4e0ea38-{{checksum ".buildcache/cache-keys/package-31ff482e60138af164575b50c697f3f2a4e0ea38"}}
          name: Restore package cache
      - restore_cache:
          key: package-e8babf69e0a86aa6c77568eb6da21866b341a20d-{{checksum ".buildcache/cache-keys/package-e8babf69e0a86aa6c77568eb6da21866b341a20d"}}
          name: Restore package cache
      - restore_cache:
          key: package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe-{{checksum ".buildcache/cache-keys/package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe"}}
          name: Restore package cache
      - restore_cache:
          key: package-71daa4bae98cee451351b3f92ec1e2aae01f820d-{{checksum ".buildcache/cache-keys/package-71daa4bae98cee451351b3f92ec1e2aae01f820d"}}
          name: Restore package cache
      - restore_cache:
          key: package-425b639074975f86cd428fa0630fd81155ff26ef-{{checksum ".buildcache/cache-keys/package-425b639074975f86cd428fa0630fd81155ff26ef"}}
          name: Restore package cache
      - restore_cache:
          key: package-f4412a528e8b49f4bd73289ed18cf1c475652608-{{checksum ".buildcache/cache-keys/package-f4412a528e8b49f4bd73289ed18cf1c475652608"}}
          name: Restore package cache
      - restore_cache:
          key: package-7d9078cc831a5c01b39948f5fc8ab27660a5a141-{{checksum ".buildcache/cache-keys/package-7d9078cc831a5c01b39948f5fc8ab27660a5a141"}}
          name: Restore package cache
      - restore_cache:
          key: package-b93ebec24be2abd13c923f4ca6a547744c962b53-{{checksum ".buildcache/cache-keys/package-b93ebec24be2abd13c923f4ca6a547744c962b53"}}
          name: Restore package cache
      - restore_cache:
          key: package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7-{{checksum ".buildcache/cache-keys/package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7"}}
          name: Restore package cache
      - restore_cache:
          key: package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6-{{checksum ".buildcache/cache-keys/package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-cfdc11b23f96bfe0.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-cfdc11b23f96bfe0.tar.gz .buildcache/packages lockfile-cfdc11b23f96bfe0.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-cfdc11b23f96bfe0.tar.gz .buildcache/packages/store/*.json lockfile-cfdc11b23f96bfe0.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-cfdc11b23f96bfe0.yml
      - store_artifacts:
          path: packages-cfdc11b23f96bfe0.tar.gz
      - store_artifacts:
          path: meta-cfdc11b23f96bfe0.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3-{{checksum ".buildcache/cache-keys/package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3-{{checksum ".buildcache/cache-keys/package-27c6b61555e5570b3b205cd5823e7e962f8a9bf3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 27c6b61555e5570b3b205cd5823e7e962f8a9bf3
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f765c3cfe8d8d1c4947da8b5bee716b12121c529-{{checksum ".buildcache/cache-keys/package-f765c3cfe8d8d1c4947da8b5bee716b12121c529"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f765c3cfe8d8d1c4947da8b5bee716b12121c529-{{checksum ".buildcache/cache-keys/package-f765c3cfe8d8d1c4947da8b5bee716b12121c529"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f765c3cfe8d8d1c4947da8b5bee716b12121c529
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1cf8306add8abb1e7f20c0af402a31554fcddf98-{{checksum ".buildcache/cache-keys/package-1cf8306add8abb1e7f20c0af402a31554fcddf98"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1cf8306add8abb1e7f20c0af402a31554fcddf98-{{checksum ".buildcache/cache-keys/package-1cf8306add8abb1e7f20c0af402a31554fcddf98"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1cf8306add8abb1e7f20c0af402a31554fcddf98
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7451b08de75aa304afff66fb624f65a9495dac15-{{checksum ".buildcache/cache-keys/package-7451b08de75aa304afff66fb624f65a9495dac15"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7451b08de75aa304afff66fb624f65a9495dac15-{{checksum ".buildcache/cache-keys/package-7451b08de75aa304afff66fb624f65a9495dac15"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7451b08de75aa304afff66fb624f65a9495dac15
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c45a227042b60c99dac0a935212598f800c9cb2c-{{checksum ".buildcache/cache-keys/package-c45a227042b60c99dac0a935212598f800c9cb2c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c45a227042b60c99dac0a935212598f800c9cb2c-{{checksum ".buildcache/cache-keys/package-c45a227042b60c99dac0a935212598f800c9cb2c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c45a227042b60c99dac0a935212598f800c9cb2c
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-31ff482e60138af164575b50c697f3f2a4e0ea38-{{checksum ".buildcache/cache-keys/package-31ff482e60138af164575b50c697f3f2a4e0ea38"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-31ff482e60138af164575b50c697f3f2a4e0ea38-{{checksum ".buildcache/cache-keys/package-31ff482e60138af164575b50c697f3f2a4e0ea38"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 31ff482e60138af164575b50c697f3f2a4e0ea38
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e8babf69e0a86aa6c77568eb6da21866b341a20d-{{checksum ".buildcache/cache-keys/package-e8babf69e0a86aa6c77568eb6da21866b341a20d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e8babf69e0a86aa6c77568eb6da21866b341a20d-{{checksum ".buildcache/cache-keys/package-e8babf69e0a86aa6c77568eb6da21866b341a20d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e8babf69e0a86aa6c77568eb6da21866b341a20d
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe-{{checksum ".buildcache/cache-keys/package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe-{{checksum ".buildcache/cache-keys/package-c2ec3ca63542da8c712be1db492a855bfc4e7ebe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c2ec3ca63542da8c712be1db492a855bfc4e7ebe
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-71daa4bae98cee451351b3f92ec1e2aae01f820d-{{checksum ".buildcache/cache-keys/package-71daa4bae98cee451351b3f92ec1e2aae01f820d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-71daa4bae98cee451351b3f92ec1e2aae01f820d-{{checksum ".buildcache/cache-keys/package-71daa4bae98cee451351b3f92ec1e2aae01f820d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 71daa4bae98cee451351b3f92ec1e2aae01f820d
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-425b639074975f86cd428fa0630fd81155ff26ef-{{checksum ".buildcache/cache-keys/package-425b639074975f86cd428fa0630fd81155ff26ef"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-425b639074975f86cd428fa0630fd81155ff26ef-{{checksum ".buildcache/cache-keys/package-425b639074975f86cd428fa0630fd81155ff26ef"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 425b639074975f86cd428fa0630fd81155ff26ef
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f4412a528e8b49f4bd73289ed18cf1c475652608-{{checksum ".buildcache/cache-keys/package-f4412a528e8b49f4bd73289ed18cf1c475652608"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f4412a528e8b49f4bd73289ed18cf1c475652608-{{checksum ".buildcache/cache-keys/package-f4412a528e8b49f4bd73289ed18cf1c475652608"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f4412a528e8b49f4bd73289ed18cf1c475652608
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7d9078cc831a5c01b39948f5fc8ab27660a5a141-{{checksum ".buildcache/cache-keys/package-7d9078cc831a5c01b39948f5fc8ab27660a5a141"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7d9078cc831a5c01b39948f5fc8ab27660a5a141-{{checksum ".buildcache/cache-keys/package-7d9078cc831a5c01b39948f5fc8ab27660a5a141"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7d9078cc831a5c01b39948f5fc8ab27660a5a141
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b93ebec24be2abd13c923f4ca6a547744c962b53-{{checksum ".buildcache/cache-keys/package-b93ebec24be2abd13c923f4ca6a547744c962b53"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b93ebec24be2abd13c923f4ca6a547744c962b53-{{checksum ".buildcache/cache-keys/package-b93ebec24be2abd13c923f4ca6a547744c962b53"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b93ebec24be2abd13c923f4ca6a547744c962b53
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7-{{checksum ".buildcache/cache-keys/package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7-{{checksum ".buildcache/cache-keys/package-2b07dfa3b12d6e356577bf69eca3f5348b2101e7"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2b07dfa3b12d6e356577bf69eca3f5348b2101e7
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6-{{checksum ".buildcache/cache-keys/package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_dea6_{{checksum ".buildcache/cache-keys/copy-source-dea6d4c086c34e203a3e2c60aa59818a374c8a3a"}}
          keys:
            - go-modules_3c1d_{{checksum ".buildcache/cache-keys/go-modules-3c1d178e33a60c94a0853b89401b0a511bd57410"}}
            - ui_1484_{{checksum ".buildcache/cache-keys/ui-148405440c9c54429fa4178f13160230d3112101"}}
            - base_716c_{{checksum ".buildcache/cache-keys/base-716c9091c361fa73d89136e603e033a227baa52e"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6-{{checksum ".buildcache/cache-keys/package-b64991e8ebd5f6e51d6150e9b10d31db24cd92f6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b64991e8ebd5f6e51d6150e9b10d31db24cd92f6
workflows:
  build-cfdc11b23f96bfe0:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
