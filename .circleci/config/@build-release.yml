version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-176c86fc77a587390f15ea7a13560ae1bbf3e33c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7bbafbb8a6783b68820792fa595a15189390488e.tar.gz
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-4007224e764329ceccabe0a0c17d067f1b70b449-{{checksum ".buildcache/cache-keys/package-4007224e764329ceccabe0a0c17d067f1b70b449"}}
          name: Restore package cache
      - restore_cache:
          key: package-e98c082362367ab239b39c76438d81b834955db9-{{checksum ".buildcache/cache-keys/package-e98c082362367ab239b39c76438d81b834955db9"}}
          name: Restore package cache
      - restore_cache:
          key: package-3de54faa20047cd0bb903375633a54626ccc89d6-{{checksum ".buildcache/cache-keys/package-3de54faa20047cd0bb903375633a54626ccc89d6"}}
          name: Restore package cache
      - restore_cache:
          key: package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884-{{checksum ".buildcache/cache-keys/package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884"}}
          name: Restore package cache
      - restore_cache:
          key: package-aed64632974ae84a721ec82c04a1457025bcdc29-{{checksum ".buildcache/cache-keys/package-aed64632974ae84a721ec82c04a1457025bcdc29"}}
          name: Restore package cache
      - restore_cache:
          key: package-abc49fd0dede26b003a20b5af7472800bba0f4db-{{checksum ".buildcache/cache-keys/package-abc49fd0dede26b003a20b5af7472800bba0f4db"}}
          name: Restore package cache
      - restore_cache:
          key: package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910-{{checksum ".buildcache/cache-keys/package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910"}}
          name: Restore package cache
      - restore_cache:
          key: package-229cd135bf21348928247066159368280b9dfc0b-{{checksum ".buildcache/cache-keys/package-229cd135bf21348928247066159368280b9dfc0b"}}
          name: Restore package cache
      - restore_cache:
          key: package-646fd08d55f139468b6f455205c6307f6003b9a8-{{checksum ".buildcache/cache-keys/package-646fd08d55f139468b6f455205c6307f6003b9a8"}}
          name: Restore package cache
      - restore_cache:
          key: package-fae3008c75207d2afecf71fb7dfc48c281336b41-{{checksum ".buildcache/cache-keys/package-fae3008c75207d2afecf71fb7dfc48c281336b41"}}
          name: Restore package cache
      - restore_cache:
          key: package-677485ece6548efee3324859986f37695c1db124-{{checksum ".buildcache/cache-keys/package-677485ece6548efee3324859986f37695c1db124"}}
          name: Restore package cache
      - restore_cache:
          key: package-e4668553d6331e6d3bb5c241f695edc8b027c47e-{{checksum ".buildcache/cache-keys/package-e4668553d6331e6d3bb5c241f695edc8b027c47e"}}
          name: Restore package cache
      - restore_cache:
          key: package-60a1a93c9adca138334d2bc964d2e89a4c6fd317-{{checksum ".buildcache/cache-keys/package-60a1a93c9adca138334d2bc964d2e89a4c6fd317"}}
          name: Restore package cache
      - restore_cache:
          key: package-670e153e53ee3e318c6ef49207a8c146f9456fb5-{{checksum ".buildcache/cache-keys/package-670e153e53ee3e318c6ef49207a8c146f9456fb5"}}
          name: Restore package cache
      - restore_cache:
          key: package-d5a4b3849b87375902ccf9141315285cae614ce1-{{checksum ".buildcache/cache-keys/package-d5a4b3849b87375902ccf9141315285cae614ce1"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-5cc7f005eb17c170.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-5cc7f005eb17c170.tar.gz .buildcache/packages lockfile-5cc7f005eb17c170.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-5cc7f005eb17c170.tar.gz .buildcache/packages/store/*.json lockfile-5cc7f005eb17c170.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-5cc7f005eb17c170.yml
      - store_artifacts:
          path: packages-5cc7f005eb17c170.tar.gz
      - store_artifacts:
          path: meta-5cc7f005eb17c170.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4007224e764329ceccabe0a0c17d067f1b70b449-{{checksum ".buildcache/cache-keys/package-4007224e764329ceccabe0a0c17d067f1b70b449"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4007224e764329ceccabe0a0c17d067f1b70b449-{{checksum ".buildcache/cache-keys/package-4007224e764329ceccabe0a0c17d067f1b70b449"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4007224e764329ceccabe0a0c17d067f1b70b449
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e98c082362367ab239b39c76438d81b834955db9-{{checksum ".buildcache/cache-keys/package-e98c082362367ab239b39c76438d81b834955db9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e98c082362367ab239b39c76438d81b834955db9-{{checksum ".buildcache/cache-keys/package-e98c082362367ab239b39c76438d81b834955db9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e98c082362367ab239b39c76438d81b834955db9
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3de54faa20047cd0bb903375633a54626ccc89d6-{{checksum ".buildcache/cache-keys/package-3de54faa20047cd0bb903375633a54626ccc89d6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3de54faa20047cd0bb903375633a54626ccc89d6-{{checksum ".buildcache/cache-keys/package-3de54faa20047cd0bb903375633a54626ccc89d6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3de54faa20047cd0bb903375633a54626ccc89d6
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884-{{checksum ".buildcache/cache-keys/package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884-{{checksum ".buildcache/cache-keys/package-e2dc09a4c852d78e37b5ce9780dceee7e26fa884"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e2dc09a4c852d78e37b5ce9780dceee7e26fa884
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-aed64632974ae84a721ec82c04a1457025bcdc29-{{checksum ".buildcache/cache-keys/package-aed64632974ae84a721ec82c04a1457025bcdc29"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-aed64632974ae84a721ec82c04a1457025bcdc29-{{checksum ".buildcache/cache-keys/package-aed64632974ae84a721ec82c04a1457025bcdc29"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: aed64632974ae84a721ec82c04a1457025bcdc29
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-abc49fd0dede26b003a20b5af7472800bba0f4db-{{checksum ".buildcache/cache-keys/package-abc49fd0dede26b003a20b5af7472800bba0f4db"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-abc49fd0dede26b003a20b5af7472800bba0f4db-{{checksum ".buildcache/cache-keys/package-abc49fd0dede26b003a20b5af7472800bba0f4db"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: abc49fd0dede26b003a20b5af7472800bba0f4db
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910-{{checksum ".buildcache/cache-keys/package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910-{{checksum ".buildcache/cache-keys/package-a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a0cb73c5e37d01cd4bcc706ca8a42d42f30e3910
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-229cd135bf21348928247066159368280b9dfc0b-{{checksum ".buildcache/cache-keys/package-229cd135bf21348928247066159368280b9dfc0b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-229cd135bf21348928247066159368280b9dfc0b-{{checksum ".buildcache/cache-keys/package-229cd135bf21348928247066159368280b9dfc0b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 229cd135bf21348928247066159368280b9dfc0b
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-646fd08d55f139468b6f455205c6307f6003b9a8-{{checksum ".buildcache/cache-keys/package-646fd08d55f139468b6f455205c6307f6003b9a8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-646fd08d55f139468b6f455205c6307f6003b9a8-{{checksum ".buildcache/cache-keys/package-646fd08d55f139468b6f455205c6307f6003b9a8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 646fd08d55f139468b6f455205c6307f6003b9a8
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fae3008c75207d2afecf71fb7dfc48c281336b41-{{checksum ".buildcache/cache-keys/package-fae3008c75207d2afecf71fb7dfc48c281336b41"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fae3008c75207d2afecf71fb7dfc48c281336b41-{{checksum ".buildcache/cache-keys/package-fae3008c75207d2afecf71fb7dfc48c281336b41"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fae3008c75207d2afecf71fb7dfc48c281336b41
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-677485ece6548efee3324859986f37695c1db124-{{checksum ".buildcache/cache-keys/package-677485ece6548efee3324859986f37695c1db124"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-677485ece6548efee3324859986f37695c1db124-{{checksum ".buildcache/cache-keys/package-677485ece6548efee3324859986f37695c1db124"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 677485ece6548efee3324859986f37695c1db124
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e4668553d6331e6d3bb5c241f695edc8b027c47e-{{checksum ".buildcache/cache-keys/package-e4668553d6331e6d3bb5c241f695edc8b027c47e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e4668553d6331e6d3bb5c241f695edc8b027c47e-{{checksum ".buildcache/cache-keys/package-e4668553d6331e6d3bb5c241f695edc8b027c47e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e4668553d6331e6d3bb5c241f695edc8b027c47e
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-60a1a93c9adca138334d2bc964d2e89a4c6fd317-{{checksum ".buildcache/cache-keys/package-60a1a93c9adca138334d2bc964d2e89a4c6fd317"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-60a1a93c9adca138334d2bc964d2e89a4c6fd317-{{checksum ".buildcache/cache-keys/package-60a1a93c9adca138334d2bc964d2e89a4c6fd317"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 60a1a93c9adca138334d2bc964d2e89a4c6fd317
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-670e153e53ee3e318c6ef49207a8c146f9456fb5-{{checksum ".buildcache/cache-keys/package-670e153e53ee3e318c6ef49207a8c146f9456fb5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-670e153e53ee3e318c6ef49207a8c146f9456fb5-{{checksum ".buildcache/cache-keys/package-670e153e53ee3e318c6ef49207a8c146f9456fb5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 670e153e53ee3e318c6ef49207a8c146f9456fb5
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d5a4b3849b87375902ccf9141315285cae614ce1-{{checksum ".buildcache/cache-keys/package-d5a4b3849b87375902ccf9141315285cae614ce1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7bba_{{checksum ".buildcache/cache-keys/copy-source-7bbafbb8a6783b68820792fa595a15189390488e"}}
          keys:
            - go-modules_3b33_{{checksum ".buildcache/cache-keys/go-modules-3b338c9dda8d37081a2447ccd5d96297882ff2c0"}}
            - ui_1ec4_{{checksum ".buildcache/cache-keys/ui-1ec486cd4481d3a15632a8711cbfd6e18bff7a9a"}}
            - base_176c_{{checksum ".buildcache/cache-keys/base-176c86fc77a587390f15ea7a13560ae1bbf3e33c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d5a4b3849b87375902ccf9141315285cae614ce1-{{checksum ".buildcache/cache-keys/package-d5a4b3849b87375902ccf9141315285cae614ce1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d5a4b3849b87375902ccf9141315285cae614ce1
workflows:
  build-5cc7f005eb17c170:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
