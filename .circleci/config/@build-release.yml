version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-5d6560da565d7aaf001590c9ee19f099afda2fc9-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-ee02eda076af5c8427789646d2c258cfa8a6e013-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d.tar.gz
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-18d2bba7ebad97c688619e95e6432229e26cde39-{{checksum ".buildcache/cache-keys/package-18d2bba7ebad97c688619e95e6432229e26cde39"}}
          name: Restore package cache
      - restore_cache:
          key: package-2603774be7895b12d78817111cd452ab6518fad9-{{checksum ".buildcache/cache-keys/package-2603774be7895b12d78817111cd452ab6518fad9"}}
          name: Restore package cache
      - restore_cache:
          key: package-2482bc70c3fb73fe500ec6924d0015a540cabe40-{{checksum ".buildcache/cache-keys/package-2482bc70c3fb73fe500ec6924d0015a540cabe40"}}
          name: Restore package cache
      - restore_cache:
          key: package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26-{{checksum ".buildcache/cache-keys/package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26"}}
          name: Restore package cache
      - restore_cache:
          key: package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d-{{checksum ".buildcache/cache-keys/package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d"}}
          name: Restore package cache
      - restore_cache:
          key: package-ad2f50430f0b68220c14b1647c66be190edc35d0-{{checksum ".buildcache/cache-keys/package-ad2f50430f0b68220c14b1647c66be190edc35d0"}}
          name: Restore package cache
      - restore_cache:
          key: package-878086126c1b95d75d191d72b46d43b33062ba1e-{{checksum ".buildcache/cache-keys/package-878086126c1b95d75d191d72b46d43b33062ba1e"}}
          name: Restore package cache
      - restore_cache:
          key: package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1-{{checksum ".buildcache/cache-keys/package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1"}}
          name: Restore package cache
      - restore_cache:
          key: package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c-{{checksum ".buildcache/cache-keys/package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c"}}
          name: Restore package cache
      - restore_cache:
          key: package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f-{{checksum ".buildcache/cache-keys/package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f"}}
          name: Restore package cache
      - restore_cache:
          key: package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9-{{checksum ".buildcache/cache-keys/package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9"}}
          name: Restore package cache
      - restore_cache:
          key: package-57ef42408849bfe38e562cbc2c2712b3482997fe-{{checksum ".buildcache/cache-keys/package-57ef42408849bfe38e562cbc2c2712b3482997fe"}}
          name: Restore package cache
      - restore_cache:
          key: package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e-{{checksum ".buildcache/cache-keys/package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e"}}
          name: Restore package cache
      - restore_cache:
          key: package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa-{{checksum ".buildcache/cache-keys/package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa"}}
          name: Restore package cache
      - restore_cache:
          key: package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d-{{checksum ".buildcache/cache-keys/package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-2680d72a02ec6943.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-2680d72a02ec6943.tar.gz .buildcache/packages lockfile-2680d72a02ec6943.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-2680d72a02ec6943.tar.gz .buildcache/packages/store/*.json lockfile-2680d72a02ec6943.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-2680d72a02ec6943.yml
      - store_artifacts:
          path: packages-2680d72a02ec6943.tar.gz
      - store_artifacts:
          path: meta-2680d72a02ec6943.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-18d2bba7ebad97c688619e95e6432229e26cde39-{{checksum ".buildcache/cache-keys/package-18d2bba7ebad97c688619e95e6432229e26cde39"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-18d2bba7ebad97c688619e95e6432229e26cde39-{{checksum ".buildcache/cache-keys/package-18d2bba7ebad97c688619e95e6432229e26cde39"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 18d2bba7ebad97c688619e95e6432229e26cde39
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2603774be7895b12d78817111cd452ab6518fad9-{{checksum ".buildcache/cache-keys/package-2603774be7895b12d78817111cd452ab6518fad9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2603774be7895b12d78817111cd452ab6518fad9-{{checksum ".buildcache/cache-keys/package-2603774be7895b12d78817111cd452ab6518fad9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2603774be7895b12d78817111cd452ab6518fad9
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2482bc70c3fb73fe500ec6924d0015a540cabe40-{{checksum ".buildcache/cache-keys/package-2482bc70c3fb73fe500ec6924d0015a540cabe40"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2482bc70c3fb73fe500ec6924d0015a540cabe40-{{checksum ".buildcache/cache-keys/package-2482bc70c3fb73fe500ec6924d0015a540cabe40"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2482bc70c3fb73fe500ec6924d0015a540cabe40
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26-{{checksum ".buildcache/cache-keys/package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26-{{checksum ".buildcache/cache-keys/package-acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: acbdc3a40b0a7a8871f4dc11096b71bf0d8c0c26
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d-{{checksum ".buildcache/cache-keys/package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d-{{checksum ".buildcache/cache-keys/package-bd866b0e66bcf1c0d2361250b5fb028acd942c3d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bd866b0e66bcf1c0d2361250b5fb028acd942c3d
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ad2f50430f0b68220c14b1647c66be190edc35d0-{{checksum ".buildcache/cache-keys/package-ad2f50430f0b68220c14b1647c66be190edc35d0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ad2f50430f0b68220c14b1647c66be190edc35d0-{{checksum ".buildcache/cache-keys/package-ad2f50430f0b68220c14b1647c66be190edc35d0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ad2f50430f0b68220c14b1647c66be190edc35d0
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-878086126c1b95d75d191d72b46d43b33062ba1e-{{checksum ".buildcache/cache-keys/package-878086126c1b95d75d191d72b46d43b33062ba1e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-878086126c1b95d75d191d72b46d43b33062ba1e-{{checksum ".buildcache/cache-keys/package-878086126c1b95d75d191d72b46d43b33062ba1e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 878086126c1b95d75d191d72b46d43b33062ba1e
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1-{{checksum ".buildcache/cache-keys/package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1-{{checksum ".buildcache/cache-keys/package-5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5977d6e60dd00b52bbdfd0d913fc5593ae25cfa1
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c-{{checksum ".buildcache/cache-keys/package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c-{{checksum ".buildcache/cache-keys/package-bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: bd765d8ce57eb1e7cd6f111fe2594b24dfc0811c
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f-{{checksum ".buildcache/cache-keys/package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f-{{checksum ".buildcache/cache-keys/package-de286e7adcb07e19013f4e3fbc31a19a1faa7a5f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: de286e7adcb07e19013f4e3fbc31a19a1faa7a5f
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9-{{checksum ".buildcache/cache-keys/package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9-{{checksum ".buildcache/cache-keys/package-03ed76f524188ba5392c3a2aa42da2c44ede4aa9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 03ed76f524188ba5392c3a2aa42da2c44ede4aa9
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-57ef42408849bfe38e562cbc2c2712b3482997fe-{{checksum ".buildcache/cache-keys/package-57ef42408849bfe38e562cbc2c2712b3482997fe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-57ef42408849bfe38e562cbc2c2712b3482997fe-{{checksum ".buildcache/cache-keys/package-57ef42408849bfe38e562cbc2c2712b3482997fe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 57ef42408849bfe38e562cbc2c2712b3482997fe
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e-{{checksum ".buildcache/cache-keys/package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e-{{checksum ".buildcache/cache-keys/package-e186c0080d3c02e033ee9a052a9f3f435f4e1f9e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e186c0080d3c02e033ee9a052a9f3f435f4e1f9e
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa-{{checksum ".buildcache/cache-keys/package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa-{{checksum ".buildcache/cache-keys/package-1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1f54370537cedcdcaa1cac90c4b6f1e0c0a301aa
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d-{{checksum ".buildcache/cache-keys/package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d-{{checksum ".buildcache/cache-keys/package-b463accde8d1a7b5ae9c9449ff48bbf31eecef6d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b463accde8d1a7b5ae9c9449ff48bbf31eecef6d
workflows:
  build-2680d72a02ec6943:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
