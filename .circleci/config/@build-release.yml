version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-2d37b1b78a38d455b3b8fed59392003370248493-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-c7b5706788ac929af0e5200f50fce0111a648e88-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-16cf228afafa3971580e1b268a763f1e815c988f-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271.tar.gz
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-1a50f7713b03328b8c228ba4e93dd4451ec0235f-{{checksum ".buildcache/cache-keys/package-1a50f7713b03328b8c228ba4e93dd4451ec0235f"}}
          name: Restore package cache
      - restore_cache:
          key: package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd-{{checksum ".buildcache/cache-keys/package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd"}}
          name: Restore package cache
      - restore_cache:
          key: package-dac1f2c43dd7199535062170276dd06c4761dc4e-{{checksum ".buildcache/cache-keys/package-dac1f2c43dd7199535062170276dd06c4761dc4e"}}
          name: Restore package cache
      - restore_cache:
          key: package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d-{{checksum ".buildcache/cache-keys/package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d"}}
          name: Restore package cache
      - restore_cache:
          key: package-d4b1be66fb5e565279ab1751f8b333207c57b8b0-{{checksum ".buildcache/cache-keys/package-d4b1be66fb5e565279ab1751f8b333207c57b8b0"}}
          name: Restore package cache
      - restore_cache:
          key: package-e34729cb14f4b096f2751f73255f03b4f96b1176-{{checksum ".buildcache/cache-keys/package-e34729cb14f4b096f2751f73255f03b4f96b1176"}}
          name: Restore package cache
      - restore_cache:
          key: package-2172375540c36836f2d6800c16fa7481abb69423-{{checksum ".buildcache/cache-keys/package-2172375540c36836f2d6800c16fa7481abb69423"}}
          name: Restore package cache
      - restore_cache:
          key: package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07-{{checksum ".buildcache/cache-keys/package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07"}}
          name: Restore package cache
      - restore_cache:
          key: package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32-{{checksum ".buildcache/cache-keys/package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32"}}
          name: Restore package cache
      - restore_cache:
          key: package-17bfb4fea08bcae298d59090fa607f7eb7e2e891-{{checksum ".buildcache/cache-keys/package-17bfb4fea08bcae298d59090fa607f7eb7e2e891"}}
          name: Restore package cache
      - restore_cache:
          key: package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59-{{checksum ".buildcache/cache-keys/package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59"}}
          name: Restore package cache
      - restore_cache:
          key: package-20483ba96d2c64765fd66b8956f9fc20c96671e9-{{checksum ".buildcache/cache-keys/package-20483ba96d2c64765fd66b8956f9fc20c96671e9"}}
          name: Restore package cache
      - restore_cache:
          key: package-64db8e81821b98df7301a2f18eadbdae19b76130-{{checksum ".buildcache/cache-keys/package-64db8e81821b98df7301a2f18eadbdae19b76130"}}
          name: Restore package cache
      - restore_cache:
          key: package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae-{{checksum ".buildcache/cache-keys/package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae"}}
          name: Restore package cache
      - restore_cache:
          key: package-38fa1d9d5c762dec5875644b2c2f36cd637f3992-{{checksum ".buildcache/cache-keys/package-38fa1d9d5c762dec5875644b2c2f36cd637f3992"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-bcf91ec8b1fe9d23.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-bcf91ec8b1fe9d23.tar.gz .buildcache/packages lockfile-bcf91ec8b1fe9d23.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-bcf91ec8b1fe9d23.tar.gz .buildcache/packages/store/*.json lockfile-bcf91ec8b1fe9d23.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-bcf91ec8b1fe9d23.yml
      - store_artifacts:
          path: packages-bcf91ec8b1fe9d23.tar.gz
      - store_artifacts:
          path: meta-bcf91ec8b1fe9d23.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1a50f7713b03328b8c228ba4e93dd4451ec0235f-{{checksum ".buildcache/cache-keys/package-1a50f7713b03328b8c228ba4e93dd4451ec0235f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1a50f7713b03328b8c228ba4e93dd4451ec0235f-{{checksum ".buildcache/cache-keys/package-1a50f7713b03328b8c228ba4e93dd4451ec0235f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1a50f7713b03328b8c228ba4e93dd4451ec0235f
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd-{{checksum ".buildcache/cache-keys/package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd-{{checksum ".buildcache/cache-keys/package-28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 28a7e4307b46d55dcea99fd3ef1a5ef04d4006bd
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-dac1f2c43dd7199535062170276dd06c4761dc4e-{{checksum ".buildcache/cache-keys/package-dac1f2c43dd7199535062170276dd06c4761dc4e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-dac1f2c43dd7199535062170276dd06c4761dc4e-{{checksum ".buildcache/cache-keys/package-dac1f2c43dd7199535062170276dd06c4761dc4e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: dac1f2c43dd7199535062170276dd06c4761dc4e
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d-{{checksum ".buildcache/cache-keys/package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d-{{checksum ".buildcache/cache-keys/package-a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a7ca67cb109f1e8f187e68f06cf6c9bf6cbec94d
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d4b1be66fb5e565279ab1751f8b333207c57b8b0-{{checksum ".buildcache/cache-keys/package-d4b1be66fb5e565279ab1751f8b333207c57b8b0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d4b1be66fb5e565279ab1751f8b333207c57b8b0-{{checksum ".buildcache/cache-keys/package-d4b1be66fb5e565279ab1751f8b333207c57b8b0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d4b1be66fb5e565279ab1751f8b333207c57b8b0
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e34729cb14f4b096f2751f73255f03b4f96b1176-{{checksum ".buildcache/cache-keys/package-e34729cb14f4b096f2751f73255f03b4f96b1176"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e34729cb14f4b096f2751f73255f03b4f96b1176-{{checksum ".buildcache/cache-keys/package-e34729cb14f4b096f2751f73255f03b4f96b1176"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e34729cb14f4b096f2751f73255f03b4f96b1176
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2172375540c36836f2d6800c16fa7481abb69423-{{checksum ".buildcache/cache-keys/package-2172375540c36836f2d6800c16fa7481abb69423"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2172375540c36836f2d6800c16fa7481abb69423-{{checksum ".buildcache/cache-keys/package-2172375540c36836f2d6800c16fa7481abb69423"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2172375540c36836f2d6800c16fa7481abb69423
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07-{{checksum ".buildcache/cache-keys/package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07-{{checksum ".buildcache/cache-keys/package-2c9bc6ebdfba268096467c7e4ae09ff12f73fe07"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2c9bc6ebdfba268096467c7e4ae09ff12f73fe07
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32-{{checksum ".buildcache/cache-keys/package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32-{{checksum ".buildcache/cache-keys/package-6a69e5fe5d03c1c68dda427e0afd80b683bf0a32"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6a69e5fe5d03c1c68dda427e0afd80b683bf0a32
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-17bfb4fea08bcae298d59090fa607f7eb7e2e891-{{checksum ".buildcache/cache-keys/package-17bfb4fea08bcae298d59090fa607f7eb7e2e891"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-17bfb4fea08bcae298d59090fa607f7eb7e2e891-{{checksum ".buildcache/cache-keys/package-17bfb4fea08bcae298d59090fa607f7eb7e2e891"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 17bfb4fea08bcae298d59090fa607f7eb7e2e891
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59-{{checksum ".buildcache/cache-keys/package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59-{{checksum ".buildcache/cache-keys/package-e3ab9607fd726a5b38d3f9a3749fdd90318fcf59"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e3ab9607fd726a5b38d3f9a3749fdd90318fcf59
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-20483ba96d2c64765fd66b8956f9fc20c96671e9-{{checksum ".buildcache/cache-keys/package-20483ba96d2c64765fd66b8956f9fc20c96671e9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-20483ba96d2c64765fd66b8956f9fc20c96671e9-{{checksum ".buildcache/cache-keys/package-20483ba96d2c64765fd66b8956f9fc20c96671e9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 20483ba96d2c64765fd66b8956f9fc20c96671e9
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-64db8e81821b98df7301a2f18eadbdae19b76130-{{checksum ".buildcache/cache-keys/package-64db8e81821b98df7301a2f18eadbdae19b76130"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-64db8e81821b98df7301a2f18eadbdae19b76130-{{checksum ".buildcache/cache-keys/package-64db8e81821b98df7301a2f18eadbdae19b76130"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 64db8e81821b98df7301a2f18eadbdae19b76130
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae-{{checksum ".buildcache/cache-keys/package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae-{{checksum ".buildcache/cache-keys/package-39be24f4d1edf3dfc9900f20088bf11ddcf6ccae"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 39be24f4d1edf3dfc9900f20088bf11ddcf6ccae
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-38fa1d9d5c762dec5875644b2c2f36cd637f3992-{{checksum ".buildcache/cache-keys/package-38fa1d9d5c762dec5875644b2c2f36cd637f3992"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_636f_{{checksum ".buildcache/cache-keys/copy-source-636fc3f12cfc83ce2cca3266c29e4be108628271"}}
          keys:
            - go-modules_16cf_{{checksum ".buildcache/cache-keys/go-modules-16cf228afafa3971580e1b268a763f1e815c988f"}}
            - ui_c7b5_{{checksum ".buildcache/cache-keys/ui-c7b5706788ac929af0e5200f50fce0111a648e88"}}
            - base_2d37_{{checksum ".buildcache/cache-keys/base-2d37b1b78a38d455b3b8fed59392003370248493"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-38fa1d9d5c762dec5875644b2c2f36cd637f3992-{{checksum ".buildcache/cache-keys/package-38fa1d9d5c762dec5875644b2c2f36cd637f3992"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 38fa1d9d5c762dec5875644b2c2f36cd637f3992
workflows:
  build-bcf91ec8b1fe9d23:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
