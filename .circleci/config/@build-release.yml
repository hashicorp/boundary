version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-54c674f158df280fa31590881af83398756e3fa8 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c1b062529408b82c5c8741588ffb2724ba8bfb55-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-54c674f158df280fa31590881af83398756e3fa8-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-54c674f158df280fa31590881af83398756e3fa8-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-54c674f158df280fa31590881af83398756e3fa8.tar.gz
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb-{{checksum ".buildcache/cache-keys/package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb"}}
          name: Restore package cache
      - restore_cache:
          key: package-30758403b2b26f71c5fd5d61502b35150b6a2862-{{checksum ".buildcache/cache-keys/package-30758403b2b26f71c5fd5d61502b35150b6a2862"}}
          name: Restore package cache
      - restore_cache:
          key: package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06-{{checksum ".buildcache/cache-keys/package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06"}}
          name: Restore package cache
      - restore_cache:
          key: package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d-{{checksum ".buildcache/cache-keys/package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d"}}
          name: Restore package cache
      - restore_cache:
          key: package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e-{{checksum ".buildcache/cache-keys/package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e"}}
          name: Restore package cache
      - restore_cache:
          key: package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d-{{checksum ".buildcache/cache-keys/package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d"}}
          name: Restore package cache
      - restore_cache:
          key: package-2a05cf6e97317fb348f95552493426e48cf257cb-{{checksum ".buildcache/cache-keys/package-2a05cf6e97317fb348f95552493426e48cf257cb"}}
          name: Restore package cache
      - restore_cache:
          key: package-ec652379901312ed9f75674728ad2e86a2af9de4-{{checksum ".buildcache/cache-keys/package-ec652379901312ed9f75674728ad2e86a2af9de4"}}
          name: Restore package cache
      - restore_cache:
          key: package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91-{{checksum ".buildcache/cache-keys/package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91"}}
          name: Restore package cache
      - restore_cache:
          key: package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9-{{checksum ".buildcache/cache-keys/package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9"}}
          name: Restore package cache
      - restore_cache:
          key: package-41ec8577ca08c266bdf806a65c793c76954c6780-{{checksum ".buildcache/cache-keys/package-41ec8577ca08c266bdf806a65c793c76954c6780"}}
          name: Restore package cache
      - restore_cache:
          key: package-7acff4dea00f664aef30e7bb1d10417c3c30ad76-{{checksum ".buildcache/cache-keys/package-7acff4dea00f664aef30e7bb1d10417c3c30ad76"}}
          name: Restore package cache
      - restore_cache:
          key: package-9311ba5b45bec53fe233b7dbddff62a437f3d237-{{checksum ".buildcache/cache-keys/package-9311ba5b45bec53fe233b7dbddff62a437f3d237"}}
          name: Restore package cache
      - restore_cache:
          key: package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a-{{checksum ".buildcache/cache-keys/package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a"}}
          name: Restore package cache
      - restore_cache:
          key: package-2b46dad2499d2d080a34b4629af7a30146e27caa-{{checksum ".buildcache/cache-keys/package-2b46dad2499d2d080a34b4629af7a30146e27caa"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-d4421ff7fa20b35c.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-d4421ff7fa20b35c.tar.gz .buildcache/packages lockfile-d4421ff7fa20b35c.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-d4421ff7fa20b35c.tar.gz .buildcache/packages/store/*.json lockfile-d4421ff7fa20b35c.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-d4421ff7fa20b35c.yml
      - store_artifacts:
          path: packages-d4421ff7fa20b35c.tar.gz
      - store_artifacts:
          path: meta-d4421ff7fa20b35c.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb-{{checksum ".buildcache/cache-keys/package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb-{{checksum ".buildcache/cache-keys/package-e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e6dd2f2e0c5cc4f2bbec40ccc8dc76f96e6868cb
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-30758403b2b26f71c5fd5d61502b35150b6a2862-{{checksum ".buildcache/cache-keys/package-30758403b2b26f71c5fd5d61502b35150b6a2862"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-30758403b2b26f71c5fd5d61502b35150b6a2862-{{checksum ".buildcache/cache-keys/package-30758403b2b26f71c5fd5d61502b35150b6a2862"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 30758403b2b26f71c5fd5d61502b35150b6a2862
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06-{{checksum ".buildcache/cache-keys/package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06-{{checksum ".buildcache/cache-keys/package-a0d1afdb8873dc6291b5a89a83a48df5bba35a06"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a0d1afdb8873dc6291b5a89a83a48df5bba35a06
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d-{{checksum ".buildcache/cache-keys/package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d-{{checksum ".buildcache/cache-keys/package-da8b3c750ac5d23f06e561cf1a13837c0ecd612d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: da8b3c750ac5d23f06e561cf1a13837c0ecd612d
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e-{{checksum ".buildcache/cache-keys/package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e-{{checksum ".buildcache/cache-keys/package-759dea4e113a1e6c9d6c38e41fc74f06e21e625e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 759dea4e113a1e6c9d6c38e41fc74f06e21e625e
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d-{{checksum ".buildcache/cache-keys/package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d-{{checksum ".buildcache/cache-keys/package-45d69d3fd813dc1ca2ac9cf91921b8d99781471d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 45d69d3fd813dc1ca2ac9cf91921b8d99781471d
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2a05cf6e97317fb348f95552493426e48cf257cb-{{checksum ".buildcache/cache-keys/package-2a05cf6e97317fb348f95552493426e48cf257cb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2a05cf6e97317fb348f95552493426e48cf257cb-{{checksum ".buildcache/cache-keys/package-2a05cf6e97317fb348f95552493426e48cf257cb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2a05cf6e97317fb348f95552493426e48cf257cb
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ec652379901312ed9f75674728ad2e86a2af9de4-{{checksum ".buildcache/cache-keys/package-ec652379901312ed9f75674728ad2e86a2af9de4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ec652379901312ed9f75674728ad2e86a2af9de4-{{checksum ".buildcache/cache-keys/package-ec652379901312ed9f75674728ad2e86a2af9de4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ec652379901312ed9f75674728ad2e86a2af9de4
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91-{{checksum ".buildcache/cache-keys/package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91-{{checksum ".buildcache/cache-keys/package-eab48dd8ba2199bd2d3d57c4248eddbfc119fb91"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eab48dd8ba2199bd2d3d57c4248eddbfc119fb91
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9-{{checksum ".buildcache/cache-keys/package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9-{{checksum ".buildcache/cache-keys/package-1273bea9d1b46317d3e24b332aaa13e6c363d9f9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1273bea9d1b46317d3e24b332aaa13e6c363d9f9
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-41ec8577ca08c266bdf806a65c793c76954c6780-{{checksum ".buildcache/cache-keys/package-41ec8577ca08c266bdf806a65c793c76954c6780"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-41ec8577ca08c266bdf806a65c793c76954c6780-{{checksum ".buildcache/cache-keys/package-41ec8577ca08c266bdf806a65c793c76954c6780"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 41ec8577ca08c266bdf806a65c793c76954c6780
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7acff4dea00f664aef30e7bb1d10417c3c30ad76-{{checksum ".buildcache/cache-keys/package-7acff4dea00f664aef30e7bb1d10417c3c30ad76"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7acff4dea00f664aef30e7bb1d10417c3c30ad76-{{checksum ".buildcache/cache-keys/package-7acff4dea00f664aef30e7bb1d10417c3c30ad76"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7acff4dea00f664aef30e7bb1d10417c3c30ad76
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9311ba5b45bec53fe233b7dbddff62a437f3d237-{{checksum ".buildcache/cache-keys/package-9311ba5b45bec53fe233b7dbddff62a437f3d237"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9311ba5b45bec53fe233b7dbddff62a437f3d237-{{checksum ".buildcache/cache-keys/package-9311ba5b45bec53fe233b7dbddff62a437f3d237"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9311ba5b45bec53fe233b7dbddff62a437f3d237
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a-{{checksum ".buildcache/cache-keys/package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a-{{checksum ".buildcache/cache-keys/package-44880dc7b2f1ebfccb25a0af91d71b124fd7038a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 44880dc7b2f1ebfccb25a0af91d71b124fd7038a
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2b46dad2499d2d080a34b4629af7a30146e27caa-{{checksum ".buildcache/cache-keys/package-2b46dad2499d2d080a34b4629af7a30146e27caa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_54c6_{{checksum ".buildcache/cache-keys/copy-source-54c674f158df280fa31590881af83398756e3fa8"}}
          keys:
            - go-modules_6b3a_{{checksum ".buildcache/cache-keys/go-modules-6b3a9141c421a9bbd5a48a0803ceb5d3d85971db"}}
            - ui_e85f_{{checksum ".buildcache/cache-keys/ui-e85f40db610031b92c540dbfc90a725c0dc8b7ba"}}
            - base_c1b0_{{checksum ".buildcache/cache-keys/base-c1b062529408b82c5c8741588ffb2724ba8bfb55"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2b46dad2499d2d080a34b4629af7a30146e27caa-{{checksum ".buildcache/cache-keys/package-2b46dad2499d2d080a34b4629af7a30146e27caa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2b46dad2499d2d080a34b4629af7a30146e27caa
workflows:
  build-d4421ff7fa20b35c:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
