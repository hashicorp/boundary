version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-ecc4855907c70055bfa6db2f6c47b9702dd39714-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8.tar.gz
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f-{{checksum ".buildcache/cache-keys/package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f"}}
          name: Restore package cache
      - restore_cache:
          key: package-e01f8204dd3c59d5b118377520325dbc1e4283a6-{{checksum ".buildcache/cache-keys/package-e01f8204dd3c59d5b118377520325dbc1e4283a6"}}
          name: Restore package cache
      - restore_cache:
          key: package-9fe9784cf5c93e902ea84e95b2a242d4396c6843-{{checksum ".buildcache/cache-keys/package-9fe9784cf5c93e902ea84e95b2a242d4396c6843"}}
          name: Restore package cache
      - restore_cache:
          key: package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb-{{checksum ".buildcache/cache-keys/package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb"}}
          name: Restore package cache
      - restore_cache:
          key: package-a51c64d05016326e52974ab73f6e96d5056c2bf9-{{checksum ".buildcache/cache-keys/package-a51c64d05016326e52974ab73f6e96d5056c2bf9"}}
          name: Restore package cache
      - restore_cache:
          key: package-618572f2fc3ecc6912a889ae8667b73dca3d9851-{{checksum ".buildcache/cache-keys/package-618572f2fc3ecc6912a889ae8667b73dca3d9851"}}
          name: Restore package cache
      - restore_cache:
          key: package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981-{{checksum ".buildcache/cache-keys/package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981"}}
          name: Restore package cache
      - restore_cache:
          key: package-a81c3720f13968a321a5224dcf20b1dc5cb39c11-{{checksum ".buildcache/cache-keys/package-a81c3720f13968a321a5224dcf20b1dc5cb39c11"}}
          name: Restore package cache
      - restore_cache:
          key: package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03-{{checksum ".buildcache/cache-keys/package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03"}}
          name: Restore package cache
      - restore_cache:
          key: package-e76420819205933edeb37a9c52923170c6d0cf3e-{{checksum ".buildcache/cache-keys/package-e76420819205933edeb37a9c52923170c6d0cf3e"}}
          name: Restore package cache
      - restore_cache:
          key: package-69f127e650c9a7c1e17c29513795c0de4ffa7a94-{{checksum ".buildcache/cache-keys/package-69f127e650c9a7c1e17c29513795c0de4ffa7a94"}}
          name: Restore package cache
      - restore_cache:
          key: package-136641fde9da8703b8f87dc1fa55d77610fd4502-{{checksum ".buildcache/cache-keys/package-136641fde9da8703b8f87dc1fa55d77610fd4502"}}
          name: Restore package cache
      - restore_cache:
          key: package-9119e404809ba8bf1b0862e7624e606bc5ffd29f-{{checksum ".buildcache/cache-keys/package-9119e404809ba8bf1b0862e7624e606bc5ffd29f"}}
          name: Restore package cache
      - restore_cache:
          key: package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b-{{checksum ".buildcache/cache-keys/package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b"}}
          name: Restore package cache
      - restore_cache:
          key: package-9666c2182a0db2b0886b18714011d3d8990f575a-{{checksum ".buildcache/cache-keys/package-9666c2182a0db2b0886b18714011d3d8990f575a"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-2208c1613125baf.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-2208c1613125baf.tar.gz .buildcache/packages lockfile-2208c1613125baf.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-2208c1613125baf.tar.gz .buildcache/packages/store/*.json lockfile-2208c1613125baf.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-2208c1613125baf.yml
      - store_artifacts:
          path: packages-2208c1613125baf.tar.gz
      - store_artifacts:
          path: meta-2208c1613125baf.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f-{{checksum ".buildcache/cache-keys/package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f-{{checksum ".buildcache/cache-keys/package-e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e157f3dd4c28de8a3ea047ebe5fd7ff9873e418f
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e01f8204dd3c59d5b118377520325dbc1e4283a6-{{checksum ".buildcache/cache-keys/package-e01f8204dd3c59d5b118377520325dbc1e4283a6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e01f8204dd3c59d5b118377520325dbc1e4283a6-{{checksum ".buildcache/cache-keys/package-e01f8204dd3c59d5b118377520325dbc1e4283a6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e01f8204dd3c59d5b118377520325dbc1e4283a6
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9fe9784cf5c93e902ea84e95b2a242d4396c6843-{{checksum ".buildcache/cache-keys/package-9fe9784cf5c93e902ea84e95b2a242d4396c6843"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9fe9784cf5c93e902ea84e95b2a242d4396c6843-{{checksum ".buildcache/cache-keys/package-9fe9784cf5c93e902ea84e95b2a242d4396c6843"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9fe9784cf5c93e902ea84e95b2a242d4396c6843
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb-{{checksum ".buildcache/cache-keys/package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb-{{checksum ".buildcache/cache-keys/package-6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6ffc2b7f7146b34e8d3277c6675e9224b0e5eefb
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a51c64d05016326e52974ab73f6e96d5056c2bf9-{{checksum ".buildcache/cache-keys/package-a51c64d05016326e52974ab73f6e96d5056c2bf9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a51c64d05016326e52974ab73f6e96d5056c2bf9-{{checksum ".buildcache/cache-keys/package-a51c64d05016326e52974ab73f6e96d5056c2bf9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a51c64d05016326e52974ab73f6e96d5056c2bf9
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-618572f2fc3ecc6912a889ae8667b73dca3d9851-{{checksum ".buildcache/cache-keys/package-618572f2fc3ecc6912a889ae8667b73dca3d9851"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-618572f2fc3ecc6912a889ae8667b73dca3d9851-{{checksum ".buildcache/cache-keys/package-618572f2fc3ecc6912a889ae8667b73dca3d9851"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 618572f2fc3ecc6912a889ae8667b73dca3d9851
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981-{{checksum ".buildcache/cache-keys/package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981-{{checksum ".buildcache/cache-keys/package-a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a4fdeac9a2a2d4cf5ed3d8a85039dbbe1f9ad981
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a81c3720f13968a321a5224dcf20b1dc5cb39c11-{{checksum ".buildcache/cache-keys/package-a81c3720f13968a321a5224dcf20b1dc5cb39c11"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a81c3720f13968a321a5224dcf20b1dc5cb39c11-{{checksum ".buildcache/cache-keys/package-a81c3720f13968a321a5224dcf20b1dc5cb39c11"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a81c3720f13968a321a5224dcf20b1dc5cb39c11
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03-{{checksum ".buildcache/cache-keys/package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03-{{checksum ".buildcache/cache-keys/package-657ef72709e56b4e3b0211c42c3c30b69b4a1e03"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 657ef72709e56b4e3b0211c42c3c30b69b4a1e03
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e76420819205933edeb37a9c52923170c6d0cf3e-{{checksum ".buildcache/cache-keys/package-e76420819205933edeb37a9c52923170c6d0cf3e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e76420819205933edeb37a9c52923170c6d0cf3e-{{checksum ".buildcache/cache-keys/package-e76420819205933edeb37a9c52923170c6d0cf3e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e76420819205933edeb37a9c52923170c6d0cf3e
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-69f127e650c9a7c1e17c29513795c0de4ffa7a94-{{checksum ".buildcache/cache-keys/package-69f127e650c9a7c1e17c29513795c0de4ffa7a94"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-69f127e650c9a7c1e17c29513795c0de4ffa7a94-{{checksum ".buildcache/cache-keys/package-69f127e650c9a7c1e17c29513795c0de4ffa7a94"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 69f127e650c9a7c1e17c29513795c0de4ffa7a94
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-136641fde9da8703b8f87dc1fa55d77610fd4502-{{checksum ".buildcache/cache-keys/package-136641fde9da8703b8f87dc1fa55d77610fd4502"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-136641fde9da8703b8f87dc1fa55d77610fd4502-{{checksum ".buildcache/cache-keys/package-136641fde9da8703b8f87dc1fa55d77610fd4502"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 136641fde9da8703b8f87dc1fa55d77610fd4502
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9119e404809ba8bf1b0862e7624e606bc5ffd29f-{{checksum ".buildcache/cache-keys/package-9119e404809ba8bf1b0862e7624e606bc5ffd29f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9119e404809ba8bf1b0862e7624e606bc5ffd29f-{{checksum ".buildcache/cache-keys/package-9119e404809ba8bf1b0862e7624e606bc5ffd29f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9119e404809ba8bf1b0862e7624e606bc5ffd29f
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b-{{checksum ".buildcache/cache-keys/package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b-{{checksum ".buildcache/cache-keys/package-62114046f17b9e71c6fdd055fd42cd0e2ae73b4b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 62114046f17b9e71c6fdd055fd42cd0e2ae73b4b
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9666c2182a0db2b0886b18714011d3d8990f575a-{{checksum ".buildcache/cache-keys/package-9666c2182a0db2b0886b18714011d3d8990f575a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_32dc_{{checksum ".buildcache/cache-keys/copy-source-32dc6b3b392d832be3c4fae06f8d8096796eb9f8"}}
          keys:
            - go-modules_d9a6_{{checksum ".buildcache/cache-keys/go-modules-d9a667a5f98d65166aad18ef355d02c6a77c4add"}}
            - ui_58c5_{{checksum ".buildcache/cache-keys/ui-58c5bc2a874511c5f54b529956fe3d3b56ac4f44"}}
            - base_ecc4_{{checksum ".buildcache/cache-keys/base-ecc4855907c70055bfa6db2f6c47b9702dd39714"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9666c2182a0db2b0886b18714011d3d8990f575a-{{checksum ".buildcache/cache-keys/package-9666c2182a0db2b0886b18714011d3d8990f575a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9666c2182a0db2b0886b18714011d3d8990f575a
workflows:
  build-2208c1613125baf:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
