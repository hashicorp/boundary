version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-5d6560da565d7aaf001590c9ee19f099afda2fc9-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-ee02eda076af5c8427789646d2c258cfa8a6e013-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d.tar.gz
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa-{{checksum ".buildcache/cache-keys/package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa"}}
          name: Restore package cache
      - restore_cache:
          key: package-0cb4903c7e49462acdc61db0f536f133d1b938da-{{checksum ".buildcache/cache-keys/package-0cb4903c7e49462acdc61db0f536f133d1b938da"}}
          name: Restore package cache
      - restore_cache:
          key: package-551aee419530aac5b6b4cdcbb208d8a49ec53496-{{checksum ".buildcache/cache-keys/package-551aee419530aac5b6b4cdcbb208d8a49ec53496"}}
          name: Restore package cache
      - restore_cache:
          key: package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e-{{checksum ".buildcache/cache-keys/package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e"}}
          name: Restore package cache
      - restore_cache:
          key: package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce-{{checksum ".buildcache/cache-keys/package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce"}}
          name: Restore package cache
      - restore_cache:
          key: package-9cf3c7f3fa5c5537302c358c613dfd815cac690f-{{checksum ".buildcache/cache-keys/package-9cf3c7f3fa5c5537302c358c613dfd815cac690f"}}
          name: Restore package cache
      - restore_cache:
          key: package-7ca67f3812813dd47fe2c1b765756221b59385b5-{{checksum ".buildcache/cache-keys/package-7ca67f3812813dd47fe2c1b765756221b59385b5"}}
          name: Restore package cache
      - restore_cache:
          key: package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121-{{checksum ".buildcache/cache-keys/package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121"}}
          name: Restore package cache
      - restore_cache:
          key: package-888158bd8e1d6f653df79561aeda197551c9eab5-{{checksum ".buildcache/cache-keys/package-888158bd8e1d6f653df79561aeda197551c9eab5"}}
          name: Restore package cache
      - restore_cache:
          key: package-c16b3af7c91aa765edb1f215d26cef5589735a07-{{checksum ".buildcache/cache-keys/package-c16b3af7c91aa765edb1f215d26cef5589735a07"}}
          name: Restore package cache
      - restore_cache:
          key: package-ff6721b7bbef780db2d3a4469783c33ecf89b7de-{{checksum ".buildcache/cache-keys/package-ff6721b7bbef780db2d3a4469783c33ecf89b7de"}}
          name: Restore package cache
      - restore_cache:
          key: package-48861749d5cbaac22d0c940c47444a724a90acdf-{{checksum ".buildcache/cache-keys/package-48861749d5cbaac22d0c940c47444a724a90acdf"}}
          name: Restore package cache
      - restore_cache:
          key: package-cede574c93903a1fc99fefdfa0b517bd77732e82-{{checksum ".buildcache/cache-keys/package-cede574c93903a1fc99fefdfa0b517bd77732e82"}}
          name: Restore package cache
      - restore_cache:
          key: package-d479c25c12cc643fbaf0818afd727ee3f09741d4-{{checksum ".buildcache/cache-keys/package-d479c25c12cc643fbaf0818afd727ee3f09741d4"}}
          name: Restore package cache
      - restore_cache:
          key: package-6d3296df2a71b5e14c37043899fd0aadd8740e02-{{checksum ".buildcache/cache-keys/package-6d3296df2a71b5e14c37043899fd0aadd8740e02"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-6f2c5f02a174ad0f.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-6f2c5f02a174ad0f.tar.gz .buildcache/packages lockfile-6f2c5f02a174ad0f.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-6f2c5f02a174ad0f.tar.gz .buildcache/packages/store/*.json lockfile-6f2c5f02a174ad0f.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-6f2c5f02a174ad0f.yml
      - store_artifacts:
          path: packages-6f2c5f02a174ad0f.tar.gz
      - store_artifacts:
          path: meta-6f2c5f02a174ad0f.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa-{{checksum ".buildcache/cache-keys/package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa-{{checksum ".buildcache/cache-keys/package-d388953fd9afcb2e22ca07a7d1d1203400dc73fa"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d388953fd9afcb2e22ca07a7d1d1203400dc73fa
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0cb4903c7e49462acdc61db0f536f133d1b938da-{{checksum ".buildcache/cache-keys/package-0cb4903c7e49462acdc61db0f536f133d1b938da"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0cb4903c7e49462acdc61db0f536f133d1b938da-{{checksum ".buildcache/cache-keys/package-0cb4903c7e49462acdc61db0f536f133d1b938da"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0cb4903c7e49462acdc61db0f536f133d1b938da
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-551aee419530aac5b6b4cdcbb208d8a49ec53496-{{checksum ".buildcache/cache-keys/package-551aee419530aac5b6b4cdcbb208d8a49ec53496"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-551aee419530aac5b6b4cdcbb208d8a49ec53496-{{checksum ".buildcache/cache-keys/package-551aee419530aac5b6b4cdcbb208d8a49ec53496"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 551aee419530aac5b6b4cdcbb208d8a49ec53496
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e-{{checksum ".buildcache/cache-keys/package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e-{{checksum ".buildcache/cache-keys/package-489eb84a63a9d48fe4cec16af81b9fe186a1d47e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 489eb84a63a9d48fe4cec16af81b9fe186a1d47e
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce-{{checksum ".buildcache/cache-keys/package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce-{{checksum ".buildcache/cache-keys/package-a9cbf307cb72c01d2a3cffd4d9f0ab381091efce"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a9cbf307cb72c01d2a3cffd4d9f0ab381091efce
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9cf3c7f3fa5c5537302c358c613dfd815cac690f-{{checksum ".buildcache/cache-keys/package-9cf3c7f3fa5c5537302c358c613dfd815cac690f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9cf3c7f3fa5c5537302c358c613dfd815cac690f-{{checksum ".buildcache/cache-keys/package-9cf3c7f3fa5c5537302c358c613dfd815cac690f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9cf3c7f3fa5c5537302c358c613dfd815cac690f
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7ca67f3812813dd47fe2c1b765756221b59385b5-{{checksum ".buildcache/cache-keys/package-7ca67f3812813dd47fe2c1b765756221b59385b5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7ca67f3812813dd47fe2c1b765756221b59385b5-{{checksum ".buildcache/cache-keys/package-7ca67f3812813dd47fe2c1b765756221b59385b5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7ca67f3812813dd47fe2c1b765756221b59385b5
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121-{{checksum ".buildcache/cache-keys/package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121-{{checksum ".buildcache/cache-keys/package-9590067d3ecb132ccbcf734a3cab50a7d3eb1121"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 9590067d3ecb132ccbcf734a3cab50a7d3eb1121
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-888158bd8e1d6f653df79561aeda197551c9eab5-{{checksum ".buildcache/cache-keys/package-888158bd8e1d6f653df79561aeda197551c9eab5"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-888158bd8e1d6f653df79561aeda197551c9eab5-{{checksum ".buildcache/cache-keys/package-888158bd8e1d6f653df79561aeda197551c9eab5"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 888158bd8e1d6f653df79561aeda197551c9eab5
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c16b3af7c91aa765edb1f215d26cef5589735a07-{{checksum ".buildcache/cache-keys/package-c16b3af7c91aa765edb1f215d26cef5589735a07"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c16b3af7c91aa765edb1f215d26cef5589735a07-{{checksum ".buildcache/cache-keys/package-c16b3af7c91aa765edb1f215d26cef5589735a07"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c16b3af7c91aa765edb1f215d26cef5589735a07
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ff6721b7bbef780db2d3a4469783c33ecf89b7de-{{checksum ".buildcache/cache-keys/package-ff6721b7bbef780db2d3a4469783c33ecf89b7de"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ff6721b7bbef780db2d3a4469783c33ecf89b7de-{{checksum ".buildcache/cache-keys/package-ff6721b7bbef780db2d3a4469783c33ecf89b7de"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ff6721b7bbef780db2d3a4469783c33ecf89b7de
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-48861749d5cbaac22d0c940c47444a724a90acdf-{{checksum ".buildcache/cache-keys/package-48861749d5cbaac22d0c940c47444a724a90acdf"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-48861749d5cbaac22d0c940c47444a724a90acdf-{{checksum ".buildcache/cache-keys/package-48861749d5cbaac22d0c940c47444a724a90acdf"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 48861749d5cbaac22d0c940c47444a724a90acdf
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-cede574c93903a1fc99fefdfa0b517bd77732e82-{{checksum ".buildcache/cache-keys/package-cede574c93903a1fc99fefdfa0b517bd77732e82"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-cede574c93903a1fc99fefdfa0b517bd77732e82-{{checksum ".buildcache/cache-keys/package-cede574c93903a1fc99fefdfa0b517bd77732e82"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: cede574c93903a1fc99fefdfa0b517bd77732e82
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d479c25c12cc643fbaf0818afd727ee3f09741d4-{{checksum ".buildcache/cache-keys/package-d479c25c12cc643fbaf0818afd727ee3f09741d4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d479c25c12cc643fbaf0818afd727ee3f09741d4-{{checksum ".buildcache/cache-keys/package-d479c25c12cc643fbaf0818afd727ee3f09741d4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d479c25c12cc643fbaf0818afd727ee3f09741d4
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6d3296df2a71b5e14c37043899fd0aadd8740e02-{{checksum ".buildcache/cache-keys/package-6d3296df2a71b5e14c37043899fd0aadd8740e02"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_30c9_{{checksum ".buildcache/cache-keys/copy-source-30c9ff65608c26f2b30c4133dc36d5c976e94d2d"}}
          keys:
            - go-modules_2560_{{checksum ".buildcache/cache-keys/go-modules-2560d6fc1e63067e058686961997fd8ee0bfa8ad"}}
            - ui_ee02_{{checksum ".buildcache/cache-keys/ui-ee02eda076af5c8427789646d2c258cfa8a6e013"}}
            - base_5d65_{{checksum ".buildcache/cache-keys/base-5d6560da565d7aaf001590c9ee19f099afda2fc9"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6d3296df2a71b5e14c37043899fd0aadd8740e02-{{checksum ".buildcache/cache-keys/package-6d3296df2a71b5e14c37043899fd0aadd8740e02"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6d3296df2a71b5e14c37043899fd0aadd8740e02
workflows:
  build-6f2c5f02a174ad0f:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
