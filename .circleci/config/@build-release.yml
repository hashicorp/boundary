version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-acb5298039d979012605aa8af44f1cb03bc34809-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-7643076cb6e153b7cbbdb1ae124196b6e055831d-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-28439835ef58deab2d0b0cda96d72784d77871bd-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63.tar.gz
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-b44cab2d26b1c045151c8748f823036c2f2f064f-{{checksum ".buildcache/cache-keys/package-b44cab2d26b1c045151c8748f823036c2f2f064f"}}
          name: Restore package cache
      - restore_cache:
          key: package-524dbd03848c946e20de0aac8d5254908bca362d-{{checksum ".buildcache/cache-keys/package-524dbd03848c946e20de0aac8d5254908bca362d"}}
          name: Restore package cache
      - restore_cache:
          key: package-678afe01c4b1e5bc200431da47b55c4a077c2d56-{{checksum ".buildcache/cache-keys/package-678afe01c4b1e5bc200431da47b55c4a077c2d56"}}
          name: Restore package cache
      - restore_cache:
          key: package-2142f71e9cd5098224a7d0bfb22042569a0523db-{{checksum ".buildcache/cache-keys/package-2142f71e9cd5098224a7d0bfb22042569a0523db"}}
          name: Restore package cache
      - restore_cache:
          key: package-1dfbef246de63b29459505ccae17adbe07b5f430-{{checksum ".buildcache/cache-keys/package-1dfbef246de63b29459505ccae17adbe07b5f430"}}
          name: Restore package cache
      - restore_cache:
          key: package-8e95d6a584eb3d67acc1229d751e5d138221ec3e-{{checksum ".buildcache/cache-keys/package-8e95d6a584eb3d67acc1229d751e5d138221ec3e"}}
          name: Restore package cache
      - restore_cache:
          key: package-372a1da4d10d0a167beea7aa4a21009db23cb2f9-{{checksum ".buildcache/cache-keys/package-372a1da4d10d0a167beea7aa4a21009db23cb2f9"}}
          name: Restore package cache
      - restore_cache:
          key: package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481-{{checksum ".buildcache/cache-keys/package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481"}}
          name: Restore package cache
      - restore_cache:
          key: package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9-{{checksum ".buildcache/cache-keys/package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9"}}
          name: Restore package cache
      - restore_cache:
          key: package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32-{{checksum ".buildcache/cache-keys/package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32"}}
          name: Restore package cache
      - restore_cache:
          key: package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc-{{checksum ".buildcache/cache-keys/package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc"}}
          name: Restore package cache
      - restore_cache:
          key: package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee-{{checksum ".buildcache/cache-keys/package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee"}}
          name: Restore package cache
      - restore_cache:
          key: package-b0676047f322eb760146c868d9014f1baa969104-{{checksum ".buildcache/cache-keys/package-b0676047f322eb760146c868d9014f1baa969104"}}
          name: Restore package cache
      - restore_cache:
          key: package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554-{{checksum ".buildcache/cache-keys/package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554"}}
          name: Restore package cache
      - restore_cache:
          key: package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4-{{checksum ".buildcache/cache-keys/package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-6cd3353dfe5a6bf9.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-6cd3353dfe5a6bf9.tar.gz .buildcache/packages lockfile-6cd3353dfe5a6bf9.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-6cd3353dfe5a6bf9.tar.gz .buildcache/packages/store/*.json lockfile-6cd3353dfe5a6bf9.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-6cd3353dfe5a6bf9.yml
      - store_artifacts:
          path: packages-6cd3353dfe5a6bf9.tar.gz
      - store_artifacts:
          path: meta-6cd3353dfe5a6bf9.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b44cab2d26b1c045151c8748f823036c2f2f064f-{{checksum ".buildcache/cache-keys/package-b44cab2d26b1c045151c8748f823036c2f2f064f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b44cab2d26b1c045151c8748f823036c2f2f064f-{{checksum ".buildcache/cache-keys/package-b44cab2d26b1c045151c8748f823036c2f2f064f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b44cab2d26b1c045151c8748f823036c2f2f064f
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-524dbd03848c946e20de0aac8d5254908bca362d-{{checksum ".buildcache/cache-keys/package-524dbd03848c946e20de0aac8d5254908bca362d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-524dbd03848c946e20de0aac8d5254908bca362d-{{checksum ".buildcache/cache-keys/package-524dbd03848c946e20de0aac8d5254908bca362d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 524dbd03848c946e20de0aac8d5254908bca362d
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-678afe01c4b1e5bc200431da47b55c4a077c2d56-{{checksum ".buildcache/cache-keys/package-678afe01c4b1e5bc200431da47b55c4a077c2d56"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-678afe01c4b1e5bc200431da47b55c4a077c2d56-{{checksum ".buildcache/cache-keys/package-678afe01c4b1e5bc200431da47b55c4a077c2d56"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 678afe01c4b1e5bc200431da47b55c4a077c2d56
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2142f71e9cd5098224a7d0bfb22042569a0523db-{{checksum ".buildcache/cache-keys/package-2142f71e9cd5098224a7d0bfb22042569a0523db"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2142f71e9cd5098224a7d0bfb22042569a0523db-{{checksum ".buildcache/cache-keys/package-2142f71e9cd5098224a7d0bfb22042569a0523db"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2142f71e9cd5098224a7d0bfb22042569a0523db
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1dfbef246de63b29459505ccae17adbe07b5f430-{{checksum ".buildcache/cache-keys/package-1dfbef246de63b29459505ccae17adbe07b5f430"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1dfbef246de63b29459505ccae17adbe07b5f430-{{checksum ".buildcache/cache-keys/package-1dfbef246de63b29459505ccae17adbe07b5f430"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1dfbef246de63b29459505ccae17adbe07b5f430
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-8e95d6a584eb3d67acc1229d751e5d138221ec3e-{{checksum ".buildcache/cache-keys/package-8e95d6a584eb3d67acc1229d751e5d138221ec3e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-8e95d6a584eb3d67acc1229d751e5d138221ec3e-{{checksum ".buildcache/cache-keys/package-8e95d6a584eb3d67acc1229d751e5d138221ec3e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 8e95d6a584eb3d67acc1229d751e5d138221ec3e
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-372a1da4d10d0a167beea7aa4a21009db23cb2f9-{{checksum ".buildcache/cache-keys/package-372a1da4d10d0a167beea7aa4a21009db23cb2f9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-372a1da4d10d0a167beea7aa4a21009db23cb2f9-{{checksum ".buildcache/cache-keys/package-372a1da4d10d0a167beea7aa4a21009db23cb2f9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 372a1da4d10d0a167beea7aa4a21009db23cb2f9
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481-{{checksum ".buildcache/cache-keys/package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481-{{checksum ".buildcache/cache-keys/package-2cee420d0a27d5e69ddc4618521a5dc74c0b7481"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2cee420d0a27d5e69ddc4618521a5dc74c0b7481
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9-{{checksum ".buildcache/cache-keys/package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9-{{checksum ".buildcache/cache-keys/package-66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 66e8bc38a13739a3912a8b5e9ca76a9b6d5dd3e9
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32-{{checksum ".buildcache/cache-keys/package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32-{{checksum ".buildcache/cache-keys/package-766ea58fe7a1bade33b6fe51ca82195dee5e0a32"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 766ea58fe7a1bade33b6fe51ca82195dee5e0a32
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc-{{checksum ".buildcache/cache-keys/package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc-{{checksum ".buildcache/cache-keys/package-0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 0b79940d9b05e64db376b5ac2336ea4b1c9e5ecc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee-{{checksum ".buildcache/cache-keys/package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee-{{checksum ".buildcache/cache-keys/package-e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e7f0eaaa2c650e2a0ec807a404c5ee17a88aefee
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b0676047f322eb760146c868d9014f1baa969104-{{checksum ".buildcache/cache-keys/package-b0676047f322eb760146c868d9014f1baa969104"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b0676047f322eb760146c868d9014f1baa969104-{{checksum ".buildcache/cache-keys/package-b0676047f322eb760146c868d9014f1baa969104"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b0676047f322eb760146c868d9014f1baa969104
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554-{{checksum ".buildcache/cache-keys/package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554-{{checksum ".buildcache/cache-keys/package-89eb36dd3e2bdfb20509565f1f7bf7d206fd5554"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 89eb36dd3e2bdfb20509565f1f7bf7d206fd5554
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4-{{checksum ".buildcache/cache-keys/package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4-{{checksum ".buildcache/cache-keys/package-43b9906bfdd0aecb91a30b465e92f7502ee9e9c4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 43b9906bfdd0aecb91a30b465e92f7502ee9e9c4
workflows:
  build-6cd3353dfe5a6bf9:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
