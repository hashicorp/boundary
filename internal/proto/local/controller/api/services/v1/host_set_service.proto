syntax = "proto3";

package controller.api.services.v1;

option go_package = "github.com/hashicorp/boundary/internal/gen/controller/api/services;services";

import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "controller/api/resources/hostsets/v1/host_set.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Controller API"
    version: "0.0.1"
    description: "API for managing resources associated with Controllers."
  }
  schemes: HTTPS
  schemes: HTTP
};

service HostSetService {
  // GetHostSet returns a stored Host Set if present.  The provided request
  // must include the host catalog and host set ID for the resource being
  // retrieved. If any of those IDs are missing, malformed or reference a
   // non existing resource an error is returned.
  rpc GetHostSet(GetHostSetRequest) returns (GetHostSetResponse) {
    option (google.api.http) = {
      get: "/v1/host-sets/{id}"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a single HostSet"
    };
  }

  // ListHostSets returns a list of stored host sets which exist inside the scope
  // referenced inside the request. The request must include the scope ID and
  // the host catalog id for the host sets being retrieved. If the any of those
  // are missing, malformed, or reference a non existing scope, an error is
  // returned.
  rpc ListHostSets(ListHostSetsRequest) returns (ListHostSetsResponse) {
    option (google.api.http) = {
      get: "/v1/host-sets"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List all HostSets under the specific catalog"
    };
  }

  // CreateHostSet creates and stores a host set in boundary.  The provided
  // request must include the scope and host catalog ids in which the host set
  // will be created.  If the scope or catalog id are missing, malformed or
  // references a non existing resource, an error is returned.  If a name is
  // provided that is in use by another host set in the same host catalog, an
  // error is returned.
  rpc CreateHostSet(CreateHostSetRequest) returns (CreateHostSetResponse) {
    option (google.api.http) = {
      post: "/v1/host-sets"
      body: "item"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a HostSet"
    };
  }

  // UpdateHostSet updates an existing host set in boundary.  The provided
  // host set must not have any read only fields set.  The update mask must be
  // included in the request and contain at least 1 mutable field.  To unset
  // a field's value, include the field in the update mask and don't set it
  // in the provided host set. An error is returned if either the scope
  // or host catalog or host set ids are missing or reference a non existing
  // resource.  An error is also returned if the request attempts to update the
  // name to one that is already in use in this host catalog.
  rpc UpdateHostSet(UpdateHostSetRequest) returns (UpdateHostSetResponse) {
    option (google.api.http) = {
      patch: "/v1/host-sets/{id}"
      body: "item"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a HostSet"
    };
  }

  // DeleteHostSet removes a host set from Boundary. If the provided scope,
  // host catalog, or host set ids are malformed or not provided an error is
  // returned.  No error is returned if any of the ids reference resources that
  // do not exist since the response itself specifies if the resource existed
  // before the DeleteHostSet request was received.
  rpc DeleteHostSet(DeleteHostSetRequest) returns (DeleteHostSetResponse) {
    option (google.api.http) = {
      delete: "/v1/host-sets/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a HostSet"
    };
  }

  // AddHostSetHosts adds a host to a host set. The provided request must
  // include the scope ID and the host set ID to which the host will be added.
  // All hosts added to the provided host set must be a child of the same
  // catalog that this host set is a child of. If the scope or host set IDs are
  // missing, malformed, or reference non-existing resources, an error is
  // returned.
  rpc AddHostSetHosts(AddHostSetHostsRequest) returns (AddHostSetHostsResponse) {
    option (google.api.http) = {
      post: "/v1/host-sets/{id}:add-hosts"
      body: "*"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Adds existing Hosts to a Host Set."
    };
  }

  // SetHostSetHosts sets the host set's hosts. Any existing hosts on the
  // host set are deleted if they are not included in this request. The
  // provided request must include the scope, host catalog, and the host set
  // ID on which the hosts will be set.  All hosts in the request must be a
  // child of the same catalog that the provided host set is. If any of those
  // IDs are missing, malformed, or references a non-existing resource, an
  // error is returned.
  rpc SetHostSetHosts(SetHostSetHostsRequest) returns (SetHostSetHostsResponse) {
    option (google.api.http) = {
      post: "/v1/host-sets/{id}:set-hosts"
      body: "*"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Sets the Hosts on the Host Set."
    };
  }

  // RemoveHostSetHosts removes the hosts from the specified host set. The
  // provided request must include the scope, host catalog, and the host set
  // IDs for the host set from which the host will be removed. If any of the
  // IDs are missing, malformed, or references a non-existing scope or catalog,
  // an error is returned.
  rpc RemoveHostSetHosts(RemoveHostSetHostsRequest) returns (RemoveHostSetHostsResponse) {
    option (google.api.http) = {
      post: "/v1/host-sets/{id}:remove-hosts"
      body: "*"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Removes Hosts from the Host Set."
    };
  }
}

message GetHostSetRequest {
  string id = 1;
}

message GetHostSetResponse {
  api.resources.hostsets.v1.HostSet item = 1;
}

message ListHostSetsRequest {
  string host_catalog_id = 1 [json_name="host_catalog_id"];
}

message ListHostSetsResponse {
  repeated api.resources.hostsets.v1.HostSet items = 1;
}

message CreateHostSetRequest {
  api.resources.hostsets.v1.HostSet item = 1;
}

message CreateHostSetResponse {
  string uri = 1;
  api.resources.hostsets.v1.HostSet item = 2;
}

message UpdateHostSetRequest {
  string id = 1;
  api.resources.hostsets.v1.HostSet item = 2;
  google.protobuf.FieldMask update_mask = 3 [json_name="update_mask"];
}

message UpdateHostSetResponse {
  api.resources.hostsets.v1.HostSet item = 1;
}

message DeleteHostSetRequest {
  string id = 1;
}

message DeleteHostSetResponse {}

message AddHostSetHostsRequest {
  string id = 1;
  uint32 version = 2;

  // A list of Host IDs which will be added to this Host Set. Each Host referenced here must be a child of the same Host Catalog of which this Host Set is a child.
  repeated string host_ids = 3 [json_name="host_ids"];
}

message AddHostSetHostsResponse {
  api.resources.hostsets.v1.HostSet item = 1;
}

message SetHostSetHostsRequest {
  string id = 1;
  uint32 version = 2;

  // A list of Host IDs which will be set on this Host Set. Each Host referenced here must be a child of the same Host Catalog of which this Host Set is a child.
  repeated string host_ids = 3 [json_name="host_ids"];
}

message SetHostSetHostsResponse {
  api.resources.hostsets.v1.HostSet item = 1;
}

message RemoveHostSetHostsRequest {
  string id = 1;
  uint32 version = 2;

  // A list of Host IDs which will be removed from this Host Set.
  repeated string host_ids = 3 [json_name="host_ids"];
}

message RemoveHostSetHostsResponse {
  api.resources.hostsets.v1.HostSet item = 1;
}
