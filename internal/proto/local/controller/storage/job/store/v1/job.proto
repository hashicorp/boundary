syntax = "proto3";

// Package store provides protobufs for storing types in the job package.
package controller.storage.job.store.v1;
option go_package = "github.com/hashicorp/boundary/internal/scheduler/job/store;store";

import "controller/storage/timestamp/v1/timestamp.proto";
import "controller/custom_options/v1/options.proto";

message Job {
  // private_id is a surrogate key suitable for use in a public API.
  // @inject_tag: `gorm:"primary_key"`
  string private_id = 1;

  // The friendly name of the job.
  // @inject_tag: `gorm:"not_null"`
  string name = 2;

  // The friendly description of the job.
  // @inject_tag: `gorm:"not_null"`
  string description = 3;

  // code is optional and used to uniquely distinguish jobs with the same name.
  // @inject_tag: `gorm:"not_null"`
  string code = 4;

  // next_scheduled_run is the time that the next run should be created.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp next_scheduled_run = 5;
}

message JobRun {
  // private_id is used to access the job run but not intended to be available via the API
  // @inject_tag: `gorm:"primary_key"`
  string private_id = 1;

  // The job_id of the owning job and must be set.
  // @inject_tag: `gorm:"not_null"`
  string job_id = 2;

  // The server_id of the server running the job and must be set.
  // @inject_tag: `gorm:"not_null"`
  string server_id = 3;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 4;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 5;

  // The end_time is set when the job run completes.
  // @inject_tag: `gorm:"default:null"`
  timestamp.v1.Timestamp end_time = 6;

  // completed_count is set during an update to indicate the current progress.
  // @inject_tag: `gorm:"default:0"`
  uint32 completed_count = 7;

  // total_count is set during an update to indicate the progress goal.
  // @inject_tag: `gorm:"default:0"`
  uint32 total_count = 8;

  // status of the job run (running, completed, failed or interrupted).
  // @inject_tag: `gorm:"not_null"`
  string status = 9;
}
