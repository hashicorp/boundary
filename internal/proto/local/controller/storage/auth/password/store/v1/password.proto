syntax = "proto3";

// Package store provides protobufs for storing types in the password package.
package controller.storage.auth.password.store.v1;
option go_package = "github.com/hashicorp/watchtower/internal/auth/password/store;store";

import "controller/storage/timestamp/v1/timestamp.proto";
import "controller/custom_options/v1/masks.proto";

message AuthMethod {
  // @inject_tag: `gorm:"primary_key"`
  string public_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // name is optional. If set, it must be unique within scope_id.
  // @inject_tag: `gorm:"default:null"`
  string name = 4 [(custom_options.v1.mask_mapping) = {this:"name" that: "name"}];

  // description is optional.
  // @inject_tag: `gorm:"default:null"`
  string description = 5 [(custom_options.v1.mask_mapping) = {this:"description" that: "description"}];

  // The scope_id of the owning scope. Must be set.
  // @inject_tag: `gorm:"not_null"`
  string scope_id = 6;

  // @inject_tag: `gorm:"not_null"`
  string password_conf_id = 7;

  // @inject_tag: `gorm:"default:null"`
  uint32 min_user_name_length = 8;

  // @inject_tag: `gorm:"default:null"`
  uint32 min_password_length = 9;
}

message Account {
  // @inject_tag: `gorm:"primary_key"`
  string public_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // name is optional. If set, it must be unique within scope_id.
  // @inject_tag: `gorm:"default:null"`
  string name = 4 [(custom_options.v1.mask_mapping) = {this:"name" that: "name"}];

  // description is optional.
  // @inject_tag: `gorm:"default:null"`
  string description = 5 [(custom_options.v1.mask_mapping) = {this:"description" that: "description"}];

  // @inject_tag: `gorm:"not_null"`
  string auth_method_id = 6;

  // @inject_tag: `gorm:"not_null"`
  string user_name = 7;

  // the scope_id column is not included here as it is used only to ensure
  // data integrity in the database between iam users and auth methods.
}
