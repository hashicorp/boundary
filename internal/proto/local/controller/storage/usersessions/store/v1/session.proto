syntax = "proto3";

package controller.storage.usersessions.store.v1;
option go_package = "github.com/hashicorp/watchtower/internal/usersessions/store;store";

import "controller/storage/timestamp/v1/timestamp.proto";

message Session {
	// public_id is used to access the Session via an API
	// @inject_tag: gorm:"primary_key"
	string public_id = 1;

	// create_time from the RDBMS
	// @inject_tag: `gorm:"default:current_timestamp"`
	timestamp.v1.Timestamp create_time = 2;

	// update_time from the RDBMS
	// @inject_tag: `gorm:"default:current_timestamp"`
	timestamp.v1.Timestamp update_time = 3;

	// token is the field stored by the client and used
	// @inject_tag: `gorm:"default:not_null"`
	string token = 5;

	// The iam_scope_id of the owning scope and must be set.
	// @inject_tag: `gorm:"default:not_null"`
	string iam_scope_id = 6;

	// iam_user_id is the public id for the iam user this session is for.
	// @inject_tag: `gorm:"default:not_null"`
	string iam_user_id = 7;

	// user id is the public id for the iam user this session is for.
	// @inject_tag: `gorm:"default:not_null"`
	string auth_method_id = 8;
}