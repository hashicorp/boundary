syntax = "proto3";

// Package store provides protobufs for storing types in the plugin host
// package.
package controller.storage.host.plugin.store.v1;
option go_package = "github.com/hashicorp/boundary/internal/host/plugin/store;store";

import "google/protobuf/struct.proto";
import "controller/storage/timestamp/v1/timestamp.proto";
import "controller/custom_options/v1/options.proto";

message HostCatalog {
  // public_id is a surrogate key suitable for use in a public API.
  // @inject_tag: `gorm:"primary_key"`
  string public_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // name is optional. If set, it must be unique within scope_id.
  // @inject_tag: `gorm:"default:null"`
  string name = 4 [(custom_options.v1.mask_mapping) = {this:"name" that: "name"}];

  // description is optional.
  // @inject_tag: `gorm:"default:null"`
  string description = 5 [(custom_options.v1.mask_mapping) = {this:"description" that: "description"}];

  // The scope_id of the owning scope and must be set.
  // @inject_tag: `gorm:"not_null"`
  string scope_id = 6;

  // The public id of the plugin this catalog uses.
  // @inject_tag: `gorm:"not_null"`
  string plugin_id = 7;

  // version allows optimistic locking of the resource
  // @inject_tag: `gorm:"default:null"`
  uint32 version = 8;

  // attributes is a jsonb formatted field.
  // @inject_tag: `gorm:"not_null"`
  bytes attributes = 9;
}

message Host {
  // public_id is a surrogate key suitable for use in a public API.
  // @inject_tag: `gorm:"primary_key"`
  string public_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // name is optional. If set, it must be unique within
  // catalog_id.
  // @inject_tag: `gorm:"default:null"`
  string name = 4;

  // description is optional.
  // @inject_tag: `gorm:"default:null"`
  string description = 5;

  // catalog_id is the public_id of the owning
  // plugin_host_catalog and must be set.
  // @inject_tag: `gorm:"not_null"`
  string catalog_id = 6;

  // version allows optimistic locking of the resource
  // @inject_tag: `gorm:"default:null"`
  uint32 version = 7;

  // address is the IP Address or DNS name of the host.
  // @inject_tag: `gorm:"default:null"`
  string address = 8;
}

message HostSet {
  // public_id is a surrogate key suitable for use in a public API.
  // @inject_tag: `gorm:"primary_key"`
  string public_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // name is optional. If set, it must be unique within
  // catalog_id.
  // @inject_tag: `gorm:"default:null"`
  string name = 4 [(custom_options.v1.mask_mapping) = {this:"name" that: "name"}];

  // description is optional.
  // @inject_tag: `gorm:"default:null"`
  string description = 5 [(custom_options.v1.mask_mapping) = {this:"description" that: "description"}];

  // catalog_id is the public_id of the owning
  // plugin_host_catalog and must be set.
  // @inject_tag: `gorm:"not_null"`
  string catalog_id = 6;

  // version allows optimistic locking of the resource
  // @inject_tag: `gorm:"default:null"`
  uint32 version = 7;

  // attributes is a byte field containing marshaled JSON data
  // @inject_tag: `gorm:"not_null"`
  bytes attributes = 8;

  // preferred_endpoints stores string preference values
  // @inject_tag: `gorm:"-"`
  repeated string preferred_endpoints = 9;
}

message HostCatalogSecret {
  // catalog_id is the public id of the catalog containing this secret.
  // @inject_tag: `gorm:"primary_key"`
  string catalog_id = 1;

  // The create_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp create_time = 2;

  // The update_time is set by the database.
  // @inject_tag: `gorm:"default:current_timestamp"`
  timestamp.v1.Timestamp update_time = 3;

  // attributes is the plain-text of the attribute data.  We are not storing
  // this plain-text value in the database.
  // @inject_tag: `gorm:"-" wrapping:"pt,secret_data"`
  bytes secret = 4;

  // ct_attributes is the ciphertext of the attribute data stored in the db.
  // @inject_tag: `gorm:"column:secret;not_null" wrapping:"ct,secret_data"`
  bytes ct_secret = 5;

  // The key_id of the kms database key used for encrypting this entry.
  // It must be set.
  // @inject_tag: `gorm:"not_null"`
  string key_id = 6;
}