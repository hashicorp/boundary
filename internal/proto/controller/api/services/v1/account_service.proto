// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

syntax = "proto3";

package controller.api.services.v1;

import "controller/api/resources/accounts/v1/account.proto";
import "controller/custom_options/v1/options.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/hashicorp/boundary/internal/gen/controller/api/services;services";
option (custom_options.v1.domain) = "auth";
// Global definitions for our API, have to go in one of the protobuf files.
// Putting it in the file that's alphabetically sorted first means it maintains
// the alphabetic ordering of services.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "placeholder-version" // Replaced at generation time by version/VERSION contents
    title: "Boundary controller HTTP API"
    description:
      "Welcome to the Boundary controller HTTP API documentation. "
      "This page contains the complete specification for all the API endpoints exposed by the Boundary controller.\n\n"
      "To get started, look for the service you want to interact with in the sidebar to the left. "
      "Each resource in Boundary, such as accounts and credential stores, have their own service. "
      "Each service contains all the API endpoints supported for the resource."
    contact: {
      name: "HashiCorp Boundary"
      url: "https://www.boundaryproject.io/"
    };
    license: {
      name: "Business Source License 1.1"
      url: "https://github.com/hashicorp/boundary/blob/main/LICENSE"
    };
  }
  host: "your-boundary-hostname.com"
  external_docs: {
    url: "https://developer.hashicorp.com/boundary/docs"
    description: "Boundary Docs"
  }
  schemes: HTTPS
  schemes: HTTP
  consumes: "application/json"
  produces: "application/json"
  responses: {
    key: "401";
    value: {description: "Returned when the request contained invalid data."}
  }
  responses: {
    key: "403";
    value: {description: "Returned when the user does not have permission to access the resource."}
  }
  responses: {
    key: "404";
    value: {description: "Returned when the resource does not exist."}
  }
  responses: {
    key: "500";
    value: {description: "Server error"}
  }
  security_definitions: {
    security: {
      key: "ApiKeyAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
      }
    }
  }
  security: {
    security_requirement: {
      key: "ApiKeyAuth"
      value: {}
    }
  }
};

service AccountService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Account service"
    description:
      "The account service exposes endpoints for interacting with accounts in Boundary. "
      "Accounts belong to an auth method and are associated with users."
    external_docs: {
      url: "https://developer.hashicorp.com/boundary/docs/concepts/domain-model/accounts";
      description: "Read about accounts in the Boundary domain model";
    }
  };

  // GetAccount returns a stored Account if present. The provided request must
  // include the id for the Account be retrieved. If missing, malformed or
  // referencing a non existing Account an error is returned.
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/v1/accounts/{id}"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Gets a single Account based on the input id"};
  }

  // ListAccounts returns a list of stored Accounts which exist inside the
  // provided Auth Method. The request must include the Auth Method id which
  // contains the Accounts being listed. If missing or malformed an error
  // is returned.
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
    option (google.api.http) = {get: "/v1/accounts"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Lists all Accounts in a specific Auth Method."};
  }

  // CreateAccount creates and stores an Account in boundary. The provided
  // request must include the Auth Method ID in which the Account will be
  // created. If the Auth Method ID is missing, malformed, or references a non
  // existing resource an error is returned. If a name or login_name is
  // provided that is in use in another Account in the same Auth Method an
  // error is returned.
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http) = {
      post: "/v1/accounts"
      body: "item"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Creates a single Account in the provided Auth Method."};
  }

  // UpdateAccount updates an existing Account in boundary. The provided Account
  // must not have any read only fields set. The update mask must be included in
  // the request and contain at least 1 mutable field. To unset a field's value,
  // include the field in the update mask and don't set it in the provided
  // Account. An error is returned if the Account id is missing or references a
  // non-existing resource. An error is also returned if the request attempts
  // to update the name or login_name to one that is already in use in the
  // containing Auth Method.
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse) {
    option (google.api.http) = {
      patch: "/v1/accounts/{id}"
      body: "item"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Updates an Account."};
  }

  // DeleteAccount removes an Account from Boundary. If the provided Account Id
  // is malformed or not provided an error is returned.
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse) {
    option (google.api.http) = {delete: "/v1/accounts/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Deletes an Account."};
  }

  // SetPassword sets the Account's password to the one provided in the
  // request. This method is intended for administration purpose and as such
  // does not require the old password.
  rpc SetPassword(SetPasswordRequest) returns (SetPasswordResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/{id}:set-password"
      body: "*"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Sets the password for the provided Account."};
  }

  // ChangePassword changes the Account's password to the one provided in the
  // request. This method is intended for end users and requires the existing
  // password to be provided for authentication purposes.
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/{id}:change-password"
      body: "*"
      response_body: "item"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "Sets the password for the provided Account."};
  }
}

message GetAccountRequest {
  string id = 1; // @gotags: `class:"public" eventstream:"observation"`
}

message GetAccountResponse {
  resources.accounts.v1.Account item = 1;
}

message ListAccountsRequest {
  string auth_method_id = 1 [json_name = "auth_method_id"]; // @gotags: `class:"public" eventstream:"observation"`
  string filter = 30 [json_name = "filter"]; // @gotags: `class:"sensitive"`
  // An opaque token used to continue an existing iteration or
  // request updated items. If not specified, pagination
  // will start from the beginning.
  string list_token = 40 [json_name = "list_token"]; // @gotags: `class:"public"`
  // The maximum size of a page in this iteration.
  // If unset, the default page size configured will be used.
  // If the page_size is greater than the default page configured,
  // an error will be returned.
  uint32 page_size = 50 [json_name = "page_size"]; // @gotags: `class:"public"`
}

message ListAccountsResponse {
  repeated resources.accounts.v1.Account items = 1;
  // The type of response, either "delta" or "complete".
  // Delta signifies that this is part of a paginated result
  // or an update to a previously completed pagination.
  // Complete signifies that it is the last page.
  string response_type = 2 [json_name = "response_type"]; // @gotags: `class:"public"`
  // An opaque token used to continue an existing pagination or
  // request updated items. Use this token in the next list request
  // to request the next page.
  string list_token = 3 [json_name = "list_token"]; // @gotags: `class:"public"`
  // The name of the field which the items are sorted by.
  string sort_by = 4 [json_name = "sort_by"]; // @gotags: `class:"public"`
  // The direction of the sort, either "asc" or "desc".
  string sort_dir = 5 [json_name = "sort_dir"]; // @gotags: `class:"public"`
  // A list of item IDs that have been removed since they were returned
  // as part of a pagination. They should be dropped from any client cache.
  // This may contain items that are not known to the cache, if they were
  // created and deleted between listings.
  repeated string removed_ids = 6 [json_name = "removed_ids"]; // @gotags: `class:"public"`
  // An estimate at the total items available. This may change during pagination.
  uint32 est_item_count = 7 [json_name = "est_item_count"]; // @gotags: `class:"public"`
}

message CreateAccountRequest {
  resources.accounts.v1.Account item = 2;
}

message CreateAccountResponse {
  string uri = 1; // @gotags: `class:"public" eventstream:"observation"`
  resources.accounts.v1.Account item = 2;
}

message UpdateAccountRequest {
  string id = 1; // @gotags: `class:"public" eventstream:"observation"`
  resources.accounts.v1.Account item = 2;
  google.protobuf.FieldMask update_mask = 3 [json_name = "update_mask"];
}

message UpdateAccountResponse {
  resources.accounts.v1.Account item = 1;
}

message DeleteAccountRequest {
  string id = 1; // @gotags: `class:"public" eventstream:"observation"`
}

message DeleteAccountResponse {}

message SetPasswordRequest {
  string id = 1; // @gotags: `class:"public" eventstream:"observation"`
  // Version is used to ensure this resource has not changed.
  // The mutation will fail if the version does not match the latest known good version.
  uint32 version = 2; // @gotags: `class:"public"`
  string password = 3; // @gotags: `class:"secret"`
}

message SetPasswordResponse {
  resources.accounts.v1.Account item = 1;
}

message ChangePasswordRequest {
  string id = 1; // @gotags: `class:"public" eventstream:"observation"`
  // Version is used to ensure this resource has not changed.
  // The mutation will fail if the version does not match the latest known good version.
  uint32 version = 2; // @gotags: `class:"public"`
  string current_password = 3 [json_name = "current_password"]; // @gotags: `class:"secret"`
  string new_password = 4 [json_name = "new_password"]; // @gotags: `class:"secret"`
}

message ChangePasswordResponse {
  resources.accounts.v1.Account item = 1;
}
