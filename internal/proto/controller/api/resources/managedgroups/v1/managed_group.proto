// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

syntax = "proto3";

package controller.api.resources.managedgroups.v1;

import "controller/api/resources/scopes/v1/scope.proto";
import "controller/custom_options/v1/options.proto";
import "google/api/visibility.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/hashicorp/boundary/sdk/pbs/controller/api/resources/managedgroups;managedgroups";

// ManagedGroup contains all fields related to an ManagedGroup resource
message ManagedGroup {
  // Output only. The ID of the ManagedGroup.
  string id = 10; // @gotags: `class:"public"`

  // Output only. Scope information for the ManagedGroup.
  resources.scopes.v1.ScopeInfo scope = 20;

  // Optional name for identification purposes.
  google.protobuf.StringValue name = 30 [
    (custom_options.v1.generate_sdk_option) = true,
    (custom_options.v1.mask_mapping) = {
      this: "name"
      that: "Name"
    }
  ]; // @gotags: `class:"public"`

  // Optional user-set description for identification purposes.
  google.protobuf.StringValue description = 40 [
    (custom_options.v1.generate_sdk_option) = true,
    (custom_options.v1.mask_mapping) = {
      this: "description"
      that: "Description"
    }
  ]; // @gotags: `class:"public"`

  // Output only. The time this resource was created.
  google.protobuf.Timestamp created_time = 50 [json_name = "created_time"]; // @gotags: `class:"public"`

  // Output only. The time this resource was last updated.
  google.protobuf.Timestamp updated_time = 60 [json_name = "updated_time"]; // @gotags: `class:"public"`

  // Version is used in mutation requests, after the initial creation, to ensure this resource has not changed.
  // The mutation will fail if the version does not match the latest known good version.
  uint32 version = 70; // @gotags: `class:"public"`

  // The type of this ManagedGroup.
  string type = 80; // @gotags: `class:"public"`

  // The ID of the Auth Method that is associated with this ManagedGroup.
  string auth_method_id = 90 [
    json_name = "auth_method_id",
    (custom_options.v1.subtype_source_id) = true
  ]; // @gotags: `class:"public"`

  oneof attrs {
    // The attributes that are applicable for the specific ManagedGroup type.
    google.protobuf.Struct attributes = 100 [
      (custom_options.v1.generate_sdk_option) = true,
      (custom_options.v1.subtype) = "default"
    ];
    OidcManagedGroupAttributes oidc_managed_group_attributes = 101 [
      (google.api.field_visibility).restriction = "INTERNAL",
      (custom_options.v1.generate_sdk_option) = true,
      (custom_options.v1.subtype) = "oidc"
    ];
    LdapManagedGroupAttributes ldap_managed_group_attributes = 102 [
      (google.api.field_visibility).restriction = "INTERNAL",
      (custom_options.v1.generate_sdk_option) = true,
      (custom_options.v1.subtype) = "ldap"
    ];
  }

  // Output only. The IDs of the current set of members (accounts) that are associated with this ManagedGroup.
  repeated string member_ids = 110 [json_name = "member_ids"]; // @gotags: `class:"public"`

  // Output only. The available actions on this resource for this user.
  repeated string authorized_actions = 300 [json_name = "authorized_actions"]; // @gotags: `class:"public"`
}

// Attributes associated only with ManagedGroups with type "oidc".
message OidcManagedGroupAttributes {
  // The boolean expression filter to use to determine membership.
  string filter = 10 [
    json_name = "filter",
    (custom_options.v1.generate_sdk_option) = true,
    (custom_options.v1.mask_mapping) = {
      this: "attributes.filter"
      that: "Filter"
    }
  ]; // @gotags: `class:"public"`
}

// Attributes associated only with ManagedGroups with type "ldap".
message LdapManagedGroupAttributes {
  // The list of groups that make up the ManagedGroup
  repeated string group_names = 100 [
    json_name = "group_names",
    (custom_options.v1.generate_sdk_option) = true,
    (custom_options.v1.mask_mapping) = {
      this: "attributes.group_names"
      that: "GroupNames"
    }
  ]; // @gotags: `class:"public"`
}
