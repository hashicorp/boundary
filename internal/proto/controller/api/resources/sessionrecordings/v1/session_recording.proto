// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

syntax = "proto3";

package controller.api.resources.sessionrecordings.v1;

import "controller/api/resources/scopes/v1/scope.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/hashicorp/boundary/sdk/pbs/controller/api/resources/session_recordings;session_recordings";

// ChannelRecording contains recorded information about a single Channel within a Connection.
// Channels are only present in multiplexed protocols, such as SSH.
message ChannelRecording {
  // The ID of the Channel recording.
  string id = 1; // @gotags: class:"public"

  // The total number of bytes uploaded from the client in the Channel.
  uint64 bytes_up = 2 [json_name = "bytes_up"]; // @gotags: class:"public"

  // The total number of bytes downloaded to the client in the Channel.
  uint64 bytes_down = 3 [json_name = "bytes_down"]; // @gotags: class:"public"

  // The time the Channel was created in the controller.
  google.protobuf.Timestamp created_time = 4 [json_name = "created_time"]; // @gotags: class:"public"

  // The time of the most recent update to the Channel.
  google.protobuf.Timestamp updated_time = 5 [json_name = "updated_time"]; // @gotags: class:"public"

  // The time the Channel started.
  google.protobuf.Timestamp start_time = 6 [json_name = "start_time"]; // @gotags: class:"public"

  // The time the Channel ended.
  google.protobuf.Timestamp end_time = 7 [json_name = "end_time"]; // @gotags: class:"public"

  // The total duration of the Channel.
  google.protobuf.Duration duration = 8; // @gotags: class:"public"

  // MimeTypes define the mime types that can
  // be used to consume the recording of this Channel.
  // The only supported mime type is "application/x-asciicast".
  repeated string mime_types = 9 [json_name = "mime_types"]; // @gotags: class:"public"
}

// ConnectionRecording contains the recording of a single Connection within a Session.
message ConnectionRecording {
  // The ID of the Connection recording.
  string id = 1; // @gotags: class:"public"

  // The ID of the Connection this is a recording of.
  string connection_id = 2 [json_name = "connection_id"]; // @gotags: class:"public"

  // The total number of bytes uploaded from the client in the Connection.
  // This includes any protocol overhead.
  uint64 bytes_up = 3 [json_name = "bytes_up"]; // @gotags: class:"public"

  // The total number of bytes downloaded to the client in the Connection.
  // This includes any protocol overhead.
  uint64 bytes_down = 4 [json_name = "bytes_down"]; // @gotags: class:"public"

  // The time the Connection was created in the controller.
  google.protobuf.Timestamp created_time = 5 [json_name = "created_time"]; // @gotags: class:"public"

  // The time of the most recent update to the Connection.
  google.protobuf.Timestamp updated_time = 6 [json_name = "updated_time"]; // @gotags: class:"public"

  // The time the Connection started.
  google.protobuf.Timestamp start_time = 7 [json_name = "start_time"]; // @gotags: class:"public"

  // The time the Connection ended.
  google.protobuf.Timestamp end_time = 8 [json_name = "end_time"]; // @gotags: class:"public"

  // The total duration of the Connection.
  google.protobuf.Duration duration = 9; // @gotags: class:"public"

  // MimeTypes define the mime types that can
  // be used to consume the recording of this Connection.
  // No mime types are currently supported.
  repeated string mime_types = 10 [json_name = "mime_types"]; // @gotags: class:"public"

  // Optionally, the channels used in this Connection,
  // if it is using a multiplexed protocol, such as SSH.
  repeated ChannelRecording channel_recordings = 11 [json_name = "channel_recordings"];
}

// User describes an authenticated user in Boundary.
message User {
  // The ID of the User.
  string id = 1; // @gotags: class:"public"

  // The name of the User that created the Session.
  string name = 2; // @gotags: class:"sensitive"

  // The description of the User that created the Session.
  string description = 3; // @gotags: class:"sensitive"

  // The scope that the User is in.
  resources.scopes.v1.ScopeInfo scope = 7;
}

// HostCatalog describes the HostCatalog that contains the host chosen for the
// recorded session.
message HostCatalog {
  // The ID of the Host Catalog
  string id = 1; // @gotags: class:"public"

  // The scope that the Host Catalog is in
  resources.scopes.v1.ScopeInfo scope = 2; // @gotags: class:"public"

  // The plugin id used by this Host Catalog, if any.
  string plugin_id = 3 [json_name = "plugin_id"]; // @gotags: class:"public"

  // The name of the Host Catalog, if set
  string name = 4; // @gotags: class:"public"

  // The description of the Host Catalog.
  string description = 5; // @gotags: class:"public"

  // The type of the Host Catalog.  This will be either "static" or "plugin"
  string type = 6; // @gotags: class:"public"

  oneof attrs {
    // The attributes of the Host Catalog.
    google.protobuf.Struct attributes = 7; // @gotags: class:"public"
  }
}

// Host describes the Host that was chosen for the recorded session.
message Host {
  // The ID of the Host
  string id = 1; // @gotags: class:"public"

  // The Host Catalog this Host is in
  HostCatalog host_catalog = 2 [json_name = "host_catalog"]; // @gotags: class:"public"

  // The name of the Host, if set.
  string name = 3; // @gotags: class:"public"

  // The description of the Host, if set.
  string description = 4; // @gotags: class:"public"

  // The type of the host. This will be either "static" or "plugin"
  string type = 5; // @gotags: class:"public"

  oneof attrs {
    // Here we use the google.protobuf.Struct so the generated structs in
    // api/ are map[string]interface{}.  Future work will include having
    // well defined proto messages which contain exactly the fields expected
    // in the attributes depending on the type of this resource, similar to
    // how attributes are done when attributes is a top level field.

    // The attributes that are applicable for the specific Host.
    google.protobuf.Struct attributes = 6; // @gotags: class:"public"
  }

  // The external id of the Host, if any.
  string external_id = 7 [json_name = "external_id"]; // @gotags: class:"public"

  // The external name of the Host, if any.
  string external_name = 8 [json_name = "external_name"]; // @gotags: class:"public"
}

message StaticHostAttributes {
  // The address specified on a static host
  string address = 1; // @gotags: class:"public"
}

// Target describes a target in Boundary.
message Target {
  // The ID of the Target.
  string id = 1; // @gotags: class:"public"

  // The name of the Target, if set.
  string name = 2; // @gotags: class:"public"

  // The description of the Target, if set.
  string description = 3; // @gotags: class:"public"

  // The scope that the Target is in.
  resources.scopes.v1.ScopeInfo scope = 4;

  // Maximum total lifetime of a created Session, in seconds.
  uint32 session_max_seconds = 5 [json_name = "session_max_seconds"]; // @gotags: class:"public"

  // Maximum number of connections allowed in a Session.  Unlimited is indicated by the value -1.
  int32 session_connection_limit = 6 [json_name = "session_connection_limit"]; // @gotags: class:"public"

  // Optional boolean expression to filter the workers that are allowed to satisfy this request.
  string worker_filter = 7 [json_name = "worker_filter"]; // @gotags: class:"public"

  // Optional boolean expressions to filter the egress workers that are allowed to satisfy this request.
  string egress_worker_filter = 8 [json_name = "egress_worker_filter"]; // @gotags: class:"public"

  // Optional boolean expressions to filter the ingress workers that are allowed to satisfy this request.
  string ingress_worker_filter = 9 [json_name = "ingress_worker_filter"]; // @gotags: class:"public"

  // The type of the Target.
  string type = 10; // @gotags: `class:"public"`

  oneof attrs {
    // Here we use the google.protobuf.Struct so the generated structs in
    // api/ are map[string]interface{}.  Future work will include having
    // well defined proto messages which contain exactly the fields expected
    // in the attributes depending on the type of this resource, similar to
    // how attributes are done when attributes is a top level field.

    // The attributes that are applicable for the specific Target.
    google.protobuf.Struct attributes = 11; // @gotags: class:"public"
  }
}

// SshTargetAttributes contains attributes relevant to Targets of type "ssh"
message SshTargetAttributes {
  // The default SSH port that is used when connecting to the endpoint.
  uint32 default_port = 1 [json_name = "default_port"]; // @gotags: class:"public"

  // The default TCP port that will be listened on by the client's local proxy.
  uint32 default_client_port = 2 [json_name = "default_client_port"]; // @gotags: class:"public"
}

// ValuesAtTime contain information about other Boundary resources as they
// were at a certain time through the lifetime of the Session Recording.
message ValuesAtTime {
  // Information about the User that created the Session.
  User user = 1; // @gotags: class:"public"

  // Information about the Target the Session connected to.
  Target target = 2; // @gotags: class:"public"

  // Information about the Host chosen for the session.
  Host host = 3; // @gotags: class:"public"
}

// SessionRecording contains information about the recording of a Session.
message SessionRecording {
  // The ID of the Session recording.
  string id = 1; // @gotags: class:"public"

  // The scope that the Session Recording is in.
  // This is inferred from the storage bucket associated
  // with the target.
  resources.scopes.v1.ScopeInfo scope = 2; // @gotags: class:"public"

  // The ID of the Session which this Session Recording recorded.
  string session_id = 3 [json_name = "session_id"]; // @gotags: class:"public"

  // The ID of the Storage Bucket for the Target of this Session Recording.
  string storage_bucket_id = 4 [json_name = "storage_bucket_id"];

  // The total number of bytes uploaded from the client in the Session.
  // This includes all bytes uploaded over all Connections, including
  // any protocol overhead.
  uint64 bytes_up = 5 [json_name = "bytes_up"]; // @gotags: class:"public"

  // The total number of bytes downloaded to the client in the Session.
  // This includes all bytes downloaded over all Connections, including
  // any protocol overhead.
  uint64 bytes_down = 6 [json_name = "bytes_down"]; // @gotags: class:"public"

  // The time the Session Recording was created in the controller.
  google.protobuf.Timestamp created_time = 7 [json_name = "created_time"]; // @gotags: class:"public"

  // The time of the most recent update to the Session Recording.
  google.protobuf.Timestamp updated_time = 8 [json_name = "updated_time"]; // @gotags: class:"public"

  // The time the Session started.
  google.protobuf.Timestamp start_time = 9 [json_name = "start_time"]; // @gotags: class:"public"

  // The time the Session ended.
  google.protobuf.Timestamp end_time = 10 [json_name = "end_time"]; // @gotags: class:"public"

  // The total duration of the Session.
  google.protobuf.Duration duration = 11; // @gotags: class:"public"

  // Type of the Session that was recorded (e.g. ssh).
  string type = 12; // @gotags: class:"public"

  // The current state of the session recording. One of
  // "started", "available" and "unknown".
  string state = 13; // @gotags: class:"public"

  // Any error seen during the closing of the session recording.
  // Currently only set if state is "unknown".
  string error_details = 14; // @gotags: class:"public"

  // MimeTypes define the mime types that can
  // be used to consume the recording of this Session.
  // No mime types are currently supported.
  repeated string mime_types = 15 [json_name = "mime_types"]; // @gotags: class:"public"

  // The endpoint of the Session; that is, the address to which the egress worker connected.
  string endpoint = 16; // @gotags: class:"public"

  // The recordings of the connections that were created in the Session.
  // This field may be unset when listing Session recordings.
  repeated ConnectionRecording connection_recordings = 17 [json_name = "connection_recordings"];

  // create_time_values contains the values of related fields at the time
  // this Session Recording was created. This may be unset when listing.
  ValuesAtTime create_time_values = 18 [json_name = "create_time_values"]; // @gotags: class:"public"

  // The available actions on this resource for this user.
  repeated string authorized_actions = 19 [json_name = "authorized_actions"]; // @gotags: class:"public"
}
