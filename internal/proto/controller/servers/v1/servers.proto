// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

syntax = "proto3";

package controller.servers.v1;

import "plugin/v1/storage_plugin_service.proto";

option go_package = "github.com/hashicorp/boundary/internal/gen/controller/servers;servers";

// TagPair matches a key to a value.
message TagPair {
  string key = 1; // @gotags: `class:"public"`
  string value = 2; // @gotags: `class:"public"`
}

// SessionStatistics contains statistics about a session and its connections.
message SessionStatistics {
  // Session ID holds the ID of the session which the statistics belong to.
  string session_id = 1; // @gotags: `class:"public" eventstream:"observation"`

  // Connections contains statistics about all the existing connections for the given session.
  repeated ConnectionStatistics connections = 2;
}

// ConnectionStatistics contains statistics about a connection.
message ConnectionStatistics {
  // Connection ID holds the ID of the connection which the statistics belong to.
  string connection_id = 1; // @gotags: `class:"public" eventstream:"observation"`

  // The total number of bytes sent from the user client to the target
  int64 bytes_up = 2; // @gotags: `class:"public"`

  // The total number of bytes sent from the target to the user client
  int64 bytes_down = 3; // @gotags: `class:"public"`
}

// ServerWorkerStatus is the new message used in place of Server to relay status request info.
message ServerWorkerStatus {
  // Id of the worker.
  string public_id = 10; // @gotags: `class:"public" eventstream:"observation"`

  // Name of the resource (optional)
  string name = 20; // @gotags: `class:"public"`

  // Description of the resource (optional)
  string description = 25; // @gotags: `class:"public"`

  // Address for the worker. This must be set.
  string address = 30; // @gotags: `class:"public"`

  // Tags for workers
  repeated TagPair tags = 40;

  // The key id for this worker, if applicable (optional)
  string key_id = 50; // @gotags: `class:"public"`

  // The version of Boundary the worker binary is running
  string release_version = 60 [json_name = "release_version"]; // @gotags: `class:"public" eventstream:"observation"`

  // The state of the worker, to indicate if the worker is active or in shutdown.
  string operational_state = 70 [json_name = "operational_state"]; // @gotags: `class:"public" eventstream:"observation"`

  // The local_storage_state indicates the state of the local disk space of the worker.
  // Possible values are:
  // - available: The worker local storage state is at an acceptable state
  // - low storage: The worker is below the minimum threshold for local storage
  // - critically low storage: The worker local storage state is below the critical minimum threshold for local storage
  // - out of storage: The worker is out of local disk space
  // - not configured: The worker does not have a local storage path configured
  // - unknown: The default local storage state of a worker. Used when the local storage state of a worker is not yet known
  string local_storage_state = 80 [json_name = "local_storage_state"]; // @gotags: `class:"public" eventstream:"observation"

  // StorageBucketCredentialStates is a map where the key is a storage bucket id
  // and the value contains the current state of the storage bucket.
  map<string, plugin.v1.StorageBucketCredentialState> storage_bucket_credential_states = 90; // @gotags: `class:"public" eventstream:"observation"`
}
