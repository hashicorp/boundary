// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: controller/api/services/v1/authaccount_service.proto

package services

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	auth "github.com/hashicorp/watchtower/internal/gen/controller/api/resources/auth"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetAuthAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethodId string `protobuf:"bytes,1,opt,name=auth_method_id,json=authMethodId,proto3" json:"auth_method_id,omitempty"`
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	View         string `protobuf:"bytes,3,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *GetAuthAccountRequest) Reset() {
	*x = GetAuthAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthAccountRequest) ProtoMessage() {}

func (x *GetAuthAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAuthAccountRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAuthAccountRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

func (x *GetAuthAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAuthAccountRequest) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type GetAuthAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *auth.Account `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetAuthAccountResponse) Reset() {
	*x = GetAuthAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthAccountResponse) ProtoMessage() {}

func (x *GetAuthAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAuthAccountResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAuthAccountResponse) GetItem() *auth.Account {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListAuthAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethodId string `protobuf:"bytes,1,opt,name=auth_method_id,json=authMethodId,proto3" json:"auth_method_id,omitempty"`
	View         string `protobuf:"bytes,2,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *ListAuthAccountsRequest) Reset() {
	*x = ListAuthAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthAccountsRequest) ProtoMessage() {}

func (x *ListAuthAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAuthAccountsRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListAuthAccountsRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

func (x *ListAuthAccountsRequest) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type ListAuthAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*auth.Account `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAuthAccountsResponse) Reset() {
	*x = ListAuthAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthAccountsResponse) ProtoMessage() {}

func (x *ListAuthAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAuthAccountsResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListAuthAccountsResponse) GetItems() []*auth.Account {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateAuthAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethodId string        `protobuf:"bytes,1,opt,name=auth_method_id,json=authMethodId,proto3" json:"auth_method_id,omitempty"`
	Item         *auth.Account `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateAuthAccountRequest) Reset() {
	*x = CreateAuthAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthAccountRequest) ProtoMessage() {}

func (x *CreateAuthAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthAccountRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAuthAccountRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

func (x *CreateAuthAccountRequest) GetItem() *auth.Account {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateAuthAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri  string        `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Item *auth.Account `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateAuthAccountResponse) Reset() {
	*x = CreateAuthAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthAccountResponse) ProtoMessage() {}

func (x *CreateAuthAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAuthAccountResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAuthAccountResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateAuthAccountResponse) GetItem() *auth.Account {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateAuthAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethodId string                `protobuf:"bytes,1,opt,name=auth_method_id,json=authMethodId,proto3" json:"auth_method_id,omitempty"`
	Id           string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Item         *auth.Account         `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	UpdateMask   *field_mask.FieldMask `protobuf:"bytes,4,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAuthAccountRequest) Reset() {
	*x = UpdateAuthAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthAccountRequest) ProtoMessage() {}

func (x *UpdateAuthAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthAccountRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAuthAccountRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

func (x *UpdateAuthAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAuthAccountRequest) GetItem() *auth.Account {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdateAuthAccountRequest) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateAuthAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *auth.Account `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *UpdateAuthAccountResponse) Reset() {
	*x = UpdateAuthAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthAccountResponse) ProtoMessage() {}

func (x *UpdateAuthAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuthAccountResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAuthAccountResponse) GetItem() *auth.Account {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteAuthAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthMethodId string `protobuf:"bytes,1,opt,name=auth_method_id,json=authMethodId,proto3" json:"auth_method_id,omitempty"`
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAuthAccountRequest) Reset() {
	*x = DeleteAuthAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthAccountRequest) ProtoMessage() {}

func (x *DeleteAuthAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthAccountRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAuthAccountRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

func (x *DeleteAuthAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAuthAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Existed bool `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
}

func (x *DeleteAuthAccountResponse) Reset() {
	*x = DeleteAuthAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthAccountResponse) ProtoMessage() {}

func (x *DeleteAuthAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_authaccount_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAuthAccountResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAuthAccountResponse) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

var File_controller_api_services_v1_authaccount_service_proto protoreflect.FileDescriptor

var file_controller_api_services_v1_authaccount_service_proto_rawDesc = []byte{
	0x0a, 0x34, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x53,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x5b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x7f, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x6c, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x12, 0x3d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0xcc, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5a,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x50, 0x0a, 0x18, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x32, 0x83, 0x09, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xdd, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x38, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2d,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x62, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x92, 0x41, 0x1b, 0x12,
	0x19, 0x47, 0x65, 0x74, 0x73, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x41,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xd5, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x33, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x35, 0x12, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x2a,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x92, 0x41, 0x18, 0x12, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0xea, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x22, 0x33, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x62, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x92, 0x41,
	0x1e, 0x12, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x20, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0xe8, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x66, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x46, 0x32, 0x38, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x62, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x92, 0x41, 0x17, 0x12, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x41,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xdc, 0x01, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x2a, 0x38, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x2f, 0x2a, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x2f, 0x7b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92,
	0x41, 0x17, 0x12, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x41, 0x75,
	0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_controller_api_services_v1_authaccount_service_proto_rawDescOnce sync.Once
	file_controller_api_services_v1_authaccount_service_proto_rawDescData = file_controller_api_services_v1_authaccount_service_proto_rawDesc
)

func file_controller_api_services_v1_authaccount_service_proto_rawDescGZIP() []byte {
	file_controller_api_services_v1_authaccount_service_proto_rawDescOnce.Do(func() {
		file_controller_api_services_v1_authaccount_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_controller_api_services_v1_authaccount_service_proto_rawDescData)
	})
	return file_controller_api_services_v1_authaccount_service_proto_rawDescData
}

var file_controller_api_services_v1_authaccount_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_controller_api_services_v1_authaccount_service_proto_goTypes = []interface{}{
	(*GetAuthAccountRequest)(nil),     // 0: controller.api.services.v1.GetAuthAccountRequest
	(*GetAuthAccountResponse)(nil),    // 1: controller.api.services.v1.GetAuthAccountResponse
	(*ListAuthAccountsRequest)(nil),   // 2: controller.api.services.v1.ListAuthAccountsRequest
	(*ListAuthAccountsResponse)(nil),  // 3: controller.api.services.v1.ListAuthAccountsResponse
	(*CreateAuthAccountRequest)(nil),  // 4: controller.api.services.v1.CreateAuthAccountRequest
	(*CreateAuthAccountResponse)(nil), // 5: controller.api.services.v1.CreateAuthAccountResponse
	(*UpdateAuthAccountRequest)(nil),  // 6: controller.api.services.v1.UpdateAuthAccountRequest
	(*UpdateAuthAccountResponse)(nil), // 7: controller.api.services.v1.UpdateAuthAccountResponse
	(*DeleteAuthAccountRequest)(nil),  // 8: controller.api.services.v1.DeleteAuthAccountRequest
	(*DeleteAuthAccountResponse)(nil), // 9: controller.api.services.v1.DeleteAuthAccountResponse
	(*auth.Account)(nil),              // 10: controller.api.resources.auth.v1.Account
	(*field_mask.FieldMask)(nil),      // 11: google.protobuf.FieldMask
}
var file_controller_api_services_v1_authaccount_service_proto_depIdxs = []int32{
	10, // 0: controller.api.services.v1.GetAuthAccountResponse.item:type_name -> controller.api.resources.auth.v1.Account
	10, // 1: controller.api.services.v1.ListAuthAccountsResponse.items:type_name -> controller.api.resources.auth.v1.Account
	10, // 2: controller.api.services.v1.CreateAuthAccountRequest.item:type_name -> controller.api.resources.auth.v1.Account
	10, // 3: controller.api.services.v1.CreateAuthAccountResponse.item:type_name -> controller.api.resources.auth.v1.Account
	10, // 4: controller.api.services.v1.UpdateAuthAccountRequest.item:type_name -> controller.api.resources.auth.v1.Account
	11, // 5: controller.api.services.v1.UpdateAuthAccountRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 6: controller.api.services.v1.UpdateAuthAccountResponse.item:type_name -> controller.api.resources.auth.v1.Account
	0,  // 7: controller.api.services.v1.AuthAccountService.GetAuthAccount:input_type -> controller.api.services.v1.GetAuthAccountRequest
	2,  // 8: controller.api.services.v1.AuthAccountService.ListAuthAccounts:input_type -> controller.api.services.v1.ListAuthAccountsRequest
	4,  // 9: controller.api.services.v1.AuthAccountService.CreateAuthAccount:input_type -> controller.api.services.v1.CreateAuthAccountRequest
	6,  // 10: controller.api.services.v1.AuthAccountService.UpdateAuthAccount:input_type -> controller.api.services.v1.UpdateAuthAccountRequest
	8,  // 11: controller.api.services.v1.AuthAccountService.DeleteAuthAccount:input_type -> controller.api.services.v1.DeleteAuthAccountRequest
	1,  // 12: controller.api.services.v1.AuthAccountService.GetAuthAccount:output_type -> controller.api.services.v1.GetAuthAccountResponse
	3,  // 13: controller.api.services.v1.AuthAccountService.ListAuthAccounts:output_type -> controller.api.services.v1.ListAuthAccountsResponse
	5,  // 14: controller.api.services.v1.AuthAccountService.CreateAuthAccount:output_type -> controller.api.services.v1.CreateAuthAccountResponse
	7,  // 15: controller.api.services.v1.AuthAccountService.UpdateAuthAccount:output_type -> controller.api.services.v1.UpdateAuthAccountResponse
	9,  // 16: controller.api.services.v1.AuthAccountService.DeleteAuthAccount:output_type -> controller.api.services.v1.DeleteAuthAccountResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_controller_api_services_v1_authaccount_service_proto_init() }
func file_controller_api_services_v1_authaccount_service_proto_init() {
	if File_controller_api_services_v1_authaccount_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_api_services_v1_authaccount_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controller_api_services_v1_authaccount_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_api_services_v1_authaccount_service_proto_goTypes,
		DependencyIndexes: file_controller_api_services_v1_authaccount_service_proto_depIdxs,
		MessageInfos:      file_controller_api_services_v1_authaccount_service_proto_msgTypes,
	}.Build()
	File_controller_api_services_v1_authaccount_service_proto = out.File
	file_controller_api_services_v1_authaccount_service_proto_rawDesc = nil
	file_controller_api_services_v1_authaccount_service_proto_goTypes = nil
	file_controller_api_services_v1_authaccount_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthAccountServiceClient is the client API for AuthAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthAccountServiceClient interface {
	// GetAuthAccount returns a stored AuthAccount if present. The provided request must
	// include the scope for the group being retrieved. If any of those ids are
	// missing, malformed or reference a non existing resource an error is
	// returned.
	GetAuthAccount(ctx context.Context, in *GetAuthAccountRequest, opts ...grpc.CallOption) (*GetAuthAccountResponse, error)
	// ListAuthAccounts returns a list of stored groups which exist inside the org
	// referenced inside the request. The request must include the scope for
	// the groups being retrieved. If the scope is missing, malformed, or
	// references a non-existing scope, an error is returned.
	ListAuthAccounts(ctx context.Context, in *ListAuthAccountsRequest, opts ...grpc.CallOption) (*ListAuthAccountsResponse, error)
	// CreateAuthAccount creates and stores a group in watchtower. The provided
	// request must include the scope ID in which the group will be created.
	// If the scope ID is missing, malformed or references a non existing
	// org, an error is returned. If a name is provided that is in
	// use in another group in the same scope, an error is returned.
	CreateAuthAccount(ctx context.Context, in *CreateAuthAccountRequest, opts ...grpc.CallOption) (*CreateAuthAccountResponse, error)
	// UpdateAuthAccount updates an existing group in watchtower. The provided group
	// must not have any read only fields set. The update mask must be included in
	// the request and contain at least 1 mutable field. To unset a field's value,
	// include the field in the update mask and don't set it in the provided
	// group. An error is returned if either the scope or group ids are missing or
	// reference a non-existing resource. An error is also returned if the
	// request attempts to update the name to one that is already in use in this
	// scope.
	UpdateAuthAccount(ctx context.Context, in *UpdateAuthAccountRequest, opts ...grpc.CallOption) (*UpdateAuthAccountResponse, error)
	// DeleteAuthAccount removes a group from Watchtower. If the provided scope or group
	// IDs are malformed or not provided an error is returned. No error is
	// returned if either IDs reference resources that do not exist as the
	// response itself specifies if the resource existed before the DeleteAuthAccount
	// request was received.
	DeleteAuthAccount(ctx context.Context, in *DeleteAuthAccountRequest, opts ...grpc.CallOption) (*DeleteAuthAccountResponse, error)
}

type authAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthAccountServiceClient(cc grpc.ClientConnInterface) AuthAccountServiceClient {
	return &authAccountServiceClient{cc}
}

func (c *authAccountServiceClient) GetAuthAccount(ctx context.Context, in *GetAuthAccountRequest, opts ...grpc.CallOption) (*GetAuthAccountResponse, error) {
	out := new(GetAuthAccountResponse)
	err := c.cc.Invoke(ctx, "/controller.api.services.v1.AuthAccountService/GetAuthAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAccountServiceClient) ListAuthAccounts(ctx context.Context, in *ListAuthAccountsRequest, opts ...grpc.CallOption) (*ListAuthAccountsResponse, error) {
	out := new(ListAuthAccountsResponse)
	err := c.cc.Invoke(ctx, "/controller.api.services.v1.AuthAccountService/ListAuthAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAccountServiceClient) CreateAuthAccount(ctx context.Context, in *CreateAuthAccountRequest, opts ...grpc.CallOption) (*CreateAuthAccountResponse, error) {
	out := new(CreateAuthAccountResponse)
	err := c.cc.Invoke(ctx, "/controller.api.services.v1.AuthAccountService/CreateAuthAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAccountServiceClient) UpdateAuthAccount(ctx context.Context, in *UpdateAuthAccountRequest, opts ...grpc.CallOption) (*UpdateAuthAccountResponse, error) {
	out := new(UpdateAuthAccountResponse)
	err := c.cc.Invoke(ctx, "/controller.api.services.v1.AuthAccountService/UpdateAuthAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAccountServiceClient) DeleteAuthAccount(ctx context.Context, in *DeleteAuthAccountRequest, opts ...grpc.CallOption) (*DeleteAuthAccountResponse, error) {
	out := new(DeleteAuthAccountResponse)
	err := c.cc.Invoke(ctx, "/controller.api.services.v1.AuthAccountService/DeleteAuthAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthAccountServiceServer is the server API for AuthAccountService service.
type AuthAccountServiceServer interface {
	// GetAuthAccount returns a stored AuthAccount if present. The provided request must
	// include the scope for the group being retrieved. If any of those ids are
	// missing, malformed or reference a non existing resource an error is
	// returned.
	GetAuthAccount(context.Context, *GetAuthAccountRequest) (*GetAuthAccountResponse, error)
	// ListAuthAccounts returns a list of stored groups which exist inside the org
	// referenced inside the request. The request must include the scope for
	// the groups being retrieved. If the scope is missing, malformed, or
	// references a non-existing scope, an error is returned.
	ListAuthAccounts(context.Context, *ListAuthAccountsRequest) (*ListAuthAccountsResponse, error)
	// CreateAuthAccount creates and stores a group in watchtower. The provided
	// request must include the scope ID in which the group will be created.
	// If the scope ID is missing, malformed or references a non existing
	// org, an error is returned. If a name is provided that is in
	// use in another group in the same scope, an error is returned.
	CreateAuthAccount(context.Context, *CreateAuthAccountRequest) (*CreateAuthAccountResponse, error)
	// UpdateAuthAccount updates an existing group in watchtower. The provided group
	// must not have any read only fields set. The update mask must be included in
	// the request and contain at least 1 mutable field. To unset a field's value,
	// include the field in the update mask and don't set it in the provided
	// group. An error is returned if either the scope or group ids are missing or
	// reference a non-existing resource. An error is also returned if the
	// request attempts to update the name to one that is already in use in this
	// scope.
	UpdateAuthAccount(context.Context, *UpdateAuthAccountRequest) (*UpdateAuthAccountResponse, error)
	// DeleteAuthAccount removes a group from Watchtower. If the provided scope or group
	// IDs are malformed or not provided an error is returned. No error is
	// returned if either IDs reference resources that do not exist as the
	// response itself specifies if the resource existed before the DeleteAuthAccount
	// request was received.
	DeleteAuthAccount(context.Context, *DeleteAuthAccountRequest) (*DeleteAuthAccountResponse, error)
}

// UnimplementedAuthAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthAccountServiceServer struct {
}

func (*UnimplementedAuthAccountServiceServer) GetAuthAccount(context.Context, *GetAuthAccountRequest) (*GetAuthAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthAccount not implemented")
}
func (*UnimplementedAuthAccountServiceServer) ListAuthAccounts(context.Context, *ListAuthAccountsRequest) (*ListAuthAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuthAccounts not implemented")
}
func (*UnimplementedAuthAccountServiceServer) CreateAuthAccount(context.Context, *CreateAuthAccountRequest) (*CreateAuthAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthAccount not implemented")
}
func (*UnimplementedAuthAccountServiceServer) UpdateAuthAccount(context.Context, *UpdateAuthAccountRequest) (*UpdateAuthAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthAccount not implemented")
}
func (*UnimplementedAuthAccountServiceServer) DeleteAuthAccount(context.Context, *DeleteAuthAccountRequest) (*DeleteAuthAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthAccount not implemented")
}

func RegisterAuthAccountServiceServer(s *grpc.Server, srv AuthAccountServiceServer) {
	s.RegisterService(&_AuthAccountService_serviceDesc, srv)
}

func _AuthAccountService_GetAuthAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthAccountServiceServer).GetAuthAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.api.services.v1.AuthAccountService/GetAuthAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthAccountServiceServer).GetAuthAccount(ctx, req.(*GetAuthAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthAccountService_ListAuthAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthAccountServiceServer).ListAuthAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.api.services.v1.AuthAccountService/ListAuthAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthAccountServiceServer).ListAuthAccounts(ctx, req.(*ListAuthAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthAccountService_CreateAuthAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthAccountServiceServer).CreateAuthAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.api.services.v1.AuthAccountService/CreateAuthAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthAccountServiceServer).CreateAuthAccount(ctx, req.(*CreateAuthAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthAccountService_UpdateAuthAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthAccountServiceServer).UpdateAuthAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.api.services.v1.AuthAccountService/UpdateAuthAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthAccountServiceServer).UpdateAuthAccount(ctx, req.(*UpdateAuthAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthAccountService_DeleteAuthAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthAccountServiceServer).DeleteAuthAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.api.services.v1.AuthAccountService/DeleteAuthAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthAccountServiceServer).DeleteAuthAccount(ctx, req.(*DeleteAuthAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthAccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.api.services.v1.AuthAccountService",
	HandlerType: (*AuthAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuthAccount",
			Handler:    _AuthAccountService_GetAuthAccount_Handler,
		},
		{
			MethodName: "ListAuthAccounts",
			Handler:    _AuthAccountService_ListAuthAccounts_Handler,
		},
		{
			MethodName: "CreateAuthAccount",
			Handler:    _AuthAccountService_CreateAuthAccount_Handler,
		},
		{
			MethodName: "UpdateAuthAccount",
			Handler:    _AuthAccountService_UpdateAuthAccount_Handler,
		},
		{
			MethodName: "DeleteAuthAccount",
			Handler:    _AuthAccountService_DeleteAuthAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller/api/services/v1/authaccount_service.proto",
}
