// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: controller/api/services/v1/scope_service.proto

package services

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	scopes "github.com/hashicorp/boundary/sdk/pbs/controller/api/resources/scopes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScopeRequest) Reset() {
	*x = GetScopeRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScopeRequest) ProtoMessage() {}

func (x *GetScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScopeRequest.ProtoReflect.Descriptor instead.
func (*GetScopeRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetScopeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *scopes.Scope          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScopeResponse) Reset() {
	*x = GetScopeResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScopeResponse) ProtoMessage() {}

func (x *GetScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScopeResponse.ProtoReflect.Descriptor instead.
func (*GetScopeResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetScopeResponse) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

type ListScopesRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ScopeId   string                 `protobuf:"bytes,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	Recursive bool                   `protobuf:"varint,20,opt,name=recursive,proto3" json:"recursive,omitempty" class:"public" eventstream:"observation"`          // @gotags: `class:"public" eventstream:"observation"`
	// You can specify that the filter should only return items that match.
	// Refer to [filter expressions](https://developer.hashicorp.com/boundary/docs/concepts/filtering) for more information.
	Filter string `protobuf:"bytes,30,opt,name=filter,proto3" json:"filter,omitempty" class:"public"` // @gotags: `class:"public"`
	// An opaque token used to continue an existing iteration or
	// request updated items. If paginating, use this token in the
	// next list request.
	ListToken string `protobuf:"bytes,40,opt,name=list_token,proto3" json:"list_token,omitempty" class:"public"` // @gotags: `class:"public"`
	// The maximum size of a page in this iteration.
	// If you do not set a page size, Boundary uses the configured default page size.
	// If the page_size is greater than the default page size configured,
	// Boundary truncates the page size to this number.
	PageSize      uint32 `protobuf:"varint,50,opt,name=page_size,proto3" json:"page_size,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScopesRequest) Reset() {
	*x = ListScopesRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesRequest) ProtoMessage() {}

func (x *ListScopesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScopesRequest.ProtoReflect.Descriptor instead.
func (*ListScopesRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListScopesRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *ListScopesRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *ListScopesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListScopesRequest) GetListToken() string {
	if x != nil {
		return x.ListToken
	}
	return ""
}

func (x *ListScopesRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListScopesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The items returned in this page.
	Items []*scopes.Scope `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// The type of response, either "delta" or "complete".
	// Delta signifies that this is part of a paginated result
	// or an update to a previously completed pagination.
	// Complete signifies that it is the last page.
	ResponseType string `protobuf:"bytes,2,opt,name=response_type,proto3" json:"response_type,omitempty" class:"public"` // @gotags: `class:"public"`
	// An opaque token used to continue an existing pagination or
	// request updated items. Use this token in the next list request
	// to request the next page.
	ListToken string `protobuf:"bytes,3,opt,name=list_token,proto3" json:"list_token,omitempty" class:"public"` // @gotags: `class:"public"`
	// The name of the field which the items are sorted by.
	SortBy string `protobuf:"bytes,4,opt,name=sort_by,proto3" json:"sort_by,omitempty" class:"public"` // @gotags: `class:"public"`
	// The direction of the sort, either "asc" or "desc".
	SortDir string `protobuf:"bytes,5,opt,name=sort_dir,proto3" json:"sort_dir,omitempty" class:"public"` // @gotags: `class:"public"`
	// A list of item IDs that have been removed since they were returned
	// as part of an pagination. They should be dropped from any client cache.
	// This may contain items that are not known to the cache, if they were
	// created and deleted between listings.
	RemovedIds []string `protobuf:"bytes,6,rep,name=removed_ids,proto3" json:"removed_ids,omitempty" class:"public"` // @gotags: `class:"public"`
	// An estimate at the total items available. This may change during pagination.
	EstItemCount  uint32 `protobuf:"varint,7,opt,name=est_item_count,proto3" json:"est_item_count,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScopesResponse) Reset() {
	*x = ListScopesResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScopesResponse) ProtoMessage() {}

func (x *ListScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScopesResponse.ProtoReflect.Descriptor instead.
func (*ListScopesResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListScopesResponse) GetItems() []*scopes.Scope {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListScopesResponse) GetResponseType() string {
	if x != nil {
		return x.ResponseType
	}
	return ""
}

func (x *ListScopesResponse) GetListToken() string {
	if x != nil {
		return x.ListToken
	}
	return ""
}

func (x *ListScopesResponse) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListScopesResponse) GetSortDir() string {
	if x != nil {
		return x.SortDir
	}
	return ""
}

func (x *ListScopesResponse) GetRemovedIds() []string {
	if x != nil {
		return x.RemovedIds
	}
	return nil
}

func (x *ListScopesResponse) GetEstItemCount() uint32 {
	if x != nil {
		return x.EstItemCount
	}
	return 0
}

type CreateScopeRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	SkipAdminRoleCreation   bool                   `protobuf:"varint,1,opt,name=skip_admin_role_creation,json=skipAdminRoleCreation,proto3" json:"skip_admin_role_creation,omitempty" class:"public"`       // @gotags: `class:"public"`
	SkipDefaultRoleCreation bool                   `protobuf:"varint,2,opt,name=skip_default_role_creation,json=skipDefaultRoleCreation,proto3" json:"skip_default_role_creation,omitempty" class:"public"` // @gotags: `class:"public"`
	Item                    *scopes.Scope          `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CreateScopeRequest) Reset() {
	*x = CreateScopeRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeRequest) ProtoMessage() {}

func (x *CreateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeRequest.ProtoReflect.Descriptor instead.
func (*CreateScopeRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateScopeRequest) GetSkipAdminRoleCreation() bool {
	if x != nil {
		return x.SkipAdminRoleCreation
	}
	return false
}

func (x *CreateScopeRequest) GetSkipDefaultRoleCreation() bool {
	if x != nil {
		return x.SkipDefaultRoleCreation
	}
	return false
}

func (x *CreateScopeRequest) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

type CreateScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	Item          *scopes.Scope          `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScopeResponse) Reset() {
	*x = CreateScopeResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScopeResponse) ProtoMessage() {}

func (x *CreateScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScopeResponse.ProtoReflect.Descriptor instead.
func (*CreateScopeResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateScopeResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateScopeResponse) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

type UpdateScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	Item          *scopes.Scope          `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScopeRequest) Reset() {
	*x = UpdateScopeRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScopeRequest) ProtoMessage() {}

func (x *UpdateScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScopeRequest.ProtoReflect.Descriptor instead.
func (*UpdateScopeRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateScopeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateScopeRequest) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *UpdateScopeRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *scopes.Scope          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScopeResponse) Reset() {
	*x = UpdateScopeResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScopeResponse) ProtoMessage() {}

func (x *UpdateScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScopeResponse.ProtoReflect.Descriptor instead.
func (*UpdateScopeResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateScopeResponse) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

type DeleteScopeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScopeRequest) Reset() {
	*x = DeleteScopeRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScopeRequest) ProtoMessage() {}

func (x *DeleteScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScopeRequest.ProtoReflect.Descriptor instead.
func (*DeleteScopeRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteScopeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteScopeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScopeResponse) Reset() {
	*x = DeleteScopeResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScopeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScopeResponse) ProtoMessage() {}

func (x *DeleteScopeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScopeResponse.ProtoReflect.Descriptor instead.
func (*DeleteScopeResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{9}
}

type ListKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeysRequest) Reset() {
	*x = ListKeysRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysRequest) ProtoMessage() {}

func (x *ListKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysRequest.ProtoReflect.Descriptor instead.
func (*ListKeysRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListKeysRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*scopes.Key          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeysResponse) Reset() {
	*x = ListKeysResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysResponse) ProtoMessage() {}

func (x *ListKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysResponse.ProtoReflect.Descriptor instead.
func (*ListKeysResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListKeysResponse) GetItems() []*scopes.Key {
	if x != nil {
		return x.Items
	}
	return nil
}

type RotateKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       string                 `protobuf:"bytes,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty" class:"public"` // @gotags: `class:"public"`
	Rewrap        bool                   `protobuf:"varint,2,opt,name=rewrap,proto3" json:"rewrap,omitempty" class:"public"`                 // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateKeysRequest) Reset() {
	*x = RotateKeysRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateKeysRequest) ProtoMessage() {}

func (x *RotateKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateKeysRequest.ProtoReflect.Descriptor instead.
func (*RotateKeysRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{12}
}

func (x *RotateKeysRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *RotateKeysRequest) GetRewrap() bool {
	if x != nil {
		return x.Rewrap
	}
	return false
}

type RotateKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateKeysResponse) Reset() {
	*x = RotateKeysResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateKeysResponse) ProtoMessage() {}

func (x *RotateKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateKeysResponse.ProtoReflect.Descriptor instead.
func (*RotateKeysResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{13}
}

type ListKeyVersionDestructionJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       string                 `protobuf:"bytes,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeyVersionDestructionJobsRequest) Reset() {
	*x = ListKeyVersionDestructionJobsRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeyVersionDestructionJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyVersionDestructionJobsRequest) ProtoMessage() {}

func (x *ListKeyVersionDestructionJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyVersionDestructionJobsRequest.ProtoReflect.Descriptor instead.
func (*ListKeyVersionDestructionJobsRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListKeyVersionDestructionJobsRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

type ListKeyVersionDestructionJobsResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Items         []*scopes.KeyVersionDestructionJob `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListKeyVersionDestructionJobsResponse) Reset() {
	*x = ListKeyVersionDestructionJobsResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListKeyVersionDestructionJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeyVersionDestructionJobsResponse) ProtoMessage() {}

func (x *ListKeyVersionDestructionJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeyVersionDestructionJobsResponse.ProtoReflect.Descriptor instead.
func (*ListKeyVersionDestructionJobsResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListKeyVersionDestructionJobsResponse) GetItems() []*scopes.KeyVersionDestructionJob {
	if x != nil {
		return x.Items
	}
	return nil
}

type DestroyKeyVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScopeId       string                 `protobuf:"bytes,1,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty" class:"public"`                  // @gotags: `class:"public"`
	KeyVersionId  string                 `protobuf:"bytes,2,opt,name=key_version_id,json=keyVersionId,proto3" json:"key_version_id,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyKeyVersionRequest) Reset() {
	*x = DestroyKeyVersionRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyKeyVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyKeyVersionRequest) ProtoMessage() {}

func (x *DestroyKeyVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyKeyVersionRequest.ProtoReflect.Descriptor instead.
func (*DestroyKeyVersionRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{16}
}

func (x *DestroyKeyVersionRequest) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *DestroyKeyVersionRequest) GetKeyVersionId() string {
	if x != nil {
		return x.KeyVersionId
	}
	return ""
}

type DestroyKeyVersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Destruction state. One of "pending" or "completed".
	// Use GET /v1/scopes/{scope_id}:list-key-version-destruction-jobs
	// to monitor pending destruction jobs.
	State         string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyKeyVersionResponse) Reset() {
	*x = DestroyKeyVersionResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyKeyVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyKeyVersionResponse) ProtoMessage() {}

func (x *DestroyKeyVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyKeyVersionResponse.ProtoReflect.Descriptor instead.
func (*DestroyKeyVersionResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{17}
}

func (x *DestroyKeyVersionResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type AttachStoragePolicyRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"`                                                    // @gotags: `class:"public" eventstream:"observation"`
	StoragePolicyId string                 `protobuf:"bytes,2,opt,name=storage_policy_id,json=storagePolicyId,proto3" json:"storage_policy_id,omitempty" class:"public"` // @gotags: `class:"public"`
	// Version is used to ensure this resource has not changed.
	// The mutation will fail if the version does not match the latest known good version.
	Version       uint32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachStoragePolicyRequest) Reset() {
	*x = AttachStoragePolicyRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachStoragePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachStoragePolicyRequest) ProtoMessage() {}

func (x *AttachStoragePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachStoragePolicyRequest.ProtoReflect.Descriptor instead.
func (*AttachStoragePolicyRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{18}
}

func (x *AttachStoragePolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AttachStoragePolicyRequest) GetStoragePolicyId() string {
	if x != nil {
		return x.StoragePolicyId
	}
	return ""
}

func (x *AttachStoragePolicyRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type AttachStoragePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *scopes.Scope          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachStoragePolicyResponse) Reset() {
	*x = AttachStoragePolicyResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachStoragePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachStoragePolicyResponse) ProtoMessage() {}

func (x *AttachStoragePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachStoragePolicyResponse.ProtoReflect.Descriptor instead.
func (*AttachStoragePolicyResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{19}
}

func (x *AttachStoragePolicyResponse) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

type DetachStoragePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// Version is used to ensure this resource has not changed.
	// The mutation will fail if the version does not match the latest known good version.
	Version       uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachStoragePolicyRequest) Reset() {
	*x = DetachStoragePolicyRequest{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachStoragePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachStoragePolicyRequest) ProtoMessage() {}

func (x *DetachStoragePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachStoragePolicyRequest.ProtoReflect.Descriptor instead.
func (*DetachStoragePolicyRequest) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{20}
}

func (x *DetachStoragePolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DetachStoragePolicyRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DetachStoragePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *scopes.Scope          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetachStoragePolicyResponse) Reset() {
	*x = DetachStoragePolicyResponse{}
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetachStoragePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachStoragePolicyResponse) ProtoMessage() {}

func (x *DetachStoragePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_services_v1_scope_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachStoragePolicyResponse.ProtoReflect.Descriptor instead.
func (*DetachStoragePolicyResponse) Descriptor() ([]byte, []int) {
	return file_controller_api_services_v1_scope_service_proto_rawDescGZIP(), []int{21}
}

func (x *DetachStoragePolicyResponse) GetItem() *scopes.Scope {
	if x != nil {
		return x.Item
	}
	return nil
}

var File_controller_api_services_v1_scope_service_proto protoreflect.FileDescriptor

const file_controller_api_services_v1_scope_service_proto_rawDesc = "" +
	"\n" +
	".controller/api/services/v1/scope_service.proto\x12\x1acontroller.api.services.v1\x1a.controller/api/resources/scopes/v1/scope.proto\x1a\x1cgoogle/api/annotations.proto\x1a google/protobuf/field_mask.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"!\n" +
	"\x0fGetScopeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Q\n" +
	"\x10GetScopeResponse\x12=\n" +
	"\x04item\x18\x01 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\"\xa2\x01\n" +
	"\x11ListScopesRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\tR\ascopeId\x12\x1c\n" +
	"\trecursive\x18\x14 \x01(\bR\trecursive\x12\x16\n" +
	"\x06filter\x18\x1e \x01(\tR\x06filter\x12\x1e\n" +
	"\n" +
	"list_token\x18( \x01(\tR\n" +
	"list_token\x12\x1c\n" +
	"\tpage_size\x182 \x01(\rR\tpage_size\"\x9b\x02\n" +
	"\x12ListScopesResponse\x12?\n" +
	"\x05items\x18\x01 \x03(\v2).controller.api.resources.scopes.v1.ScopeR\x05items\x12$\n" +
	"\rresponse_type\x18\x02 \x01(\tR\rresponse_type\x12\x1e\n" +
	"\n" +
	"list_token\x18\x03 \x01(\tR\n" +
	"list_token\x12\x18\n" +
	"\asort_by\x18\x04 \x01(\tR\asort_by\x12\x1a\n" +
	"\bsort_dir\x18\x05 \x01(\tR\bsort_dir\x12 \n" +
	"\vremoved_ids\x18\x06 \x03(\tR\vremoved_ids\x12&\n" +
	"\x0eest_item_count\x18\a \x01(\rR\x0eest_item_count\"\xc9\x01\n" +
	"\x12CreateScopeRequest\x127\n" +
	"\x18skip_admin_role_creation\x18\x01 \x01(\bR\x15skipAdminRoleCreation\x12;\n" +
	"\x1askip_default_role_creation\x18\x02 \x01(\bR\x17skipDefaultRoleCreation\x12=\n" +
	"\x04item\x18\x03 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\"f\n" +
	"\x13CreateScopeResponse\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12=\n" +
	"\x04item\x18\x02 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\"\xa1\x01\n" +
	"\x12UpdateScopeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12=\n" +
	"\x04item\x18\x02 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\x12<\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\vupdate_mask\"T\n" +
	"\x13UpdateScopeResponse\x12=\n" +
	"\x04item\x18\x01 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\"$\n" +
	"\x12DeleteScopeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x15\n" +
	"\x13DeleteScopeResponse\"!\n" +
	"\x0fListKeysRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Q\n" +
	"\x10ListKeysResponse\x12=\n" +
	"\x05items\x18\x01 \x03(\v2'.controller.api.resources.scopes.v1.KeyR\x05items\"F\n" +
	"\x11RotateKeysRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\tR\ascopeId\x12\x16\n" +
	"\x06rewrap\x18\x02 \x01(\bR\x06rewrap\"\x14\n" +
	"\x12RotateKeysResponse\"A\n" +
	"$ListKeyVersionDestructionJobsRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\tR\ascopeId\"{\n" +
	"%ListKeyVersionDestructionJobsResponse\x12R\n" +
	"\x05items\x18\x01 \x03(\v2<.controller.api.resources.scopes.v1.KeyVersionDestructionJobR\x05items\"[\n" +
	"\x18DestroyKeyVersionRequest\x12\x19\n" +
	"\bscope_id\x18\x01 \x01(\tR\ascopeId\x12$\n" +
	"\x0ekey_version_id\x18\x02 \x01(\tR\fkeyVersionId\"1\n" +
	"\x19DestroyKeyVersionResponse\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\"r\n" +
	"\x1aAttachStoragePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x11storage_policy_id\x18\x02 \x01(\tR\x0fstoragePolicyId\x12\x18\n" +
	"\aversion\x18\x03 \x01(\rR\aversion\"\\\n" +
	"\x1bAttachStoragePolicyResponse\x12=\n" +
	"\x04item\x18\x01 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item\"F\n" +
	"\x1aDetachStoragePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\"\\\n" +
	"\x1bDetachStoragePolicyResponse\x12=\n" +
	"\x04item\x18\x01 \x01(\v2).controller.api.resources.scopes.v1.ScopeR\x04item2\xae\x16\n" +
	"\fScopeService\x12\x9d\x01\n" +
	"\bGetScope\x12+.controller.api.services.v1.GetScopeRequest\x1a,.controller.api.services.v1.GetScopeResponse\"6\x92A\x16\x12\x14Gets a single Scope.\x82\xd3\xe4\x93\x02\x17b\x04item\x12\x0f/v1/scopes/{id}\x12\xbe\x01\n" +
	"\n" +
	"ListScopes\x12-.controller.api.services.v1.ListScopesRequest\x1a..controller.api.services.v1.ListScopesResponse\"Q\x92A<\x12:Lists all Scopes within the Scope provided in the request.\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/scopes\x12\xaa\x01\n" +
	"\vCreateScope\x12..controller.api.services.v1.CreateScopeRequest\x1a/.controller.api.services.v1.CreateScopeResponse\":\x92A\x19\x12\x17Creates a single Scope.\x82\xd3\xe4\x93\x02\x18:\x04itemb\x04item\"\n" +
	"/v1/scopes\x12\xa8\x01\n" +
	"\vUpdateScope\x12..controller.api.services.v1.UpdateScopeRequest\x1a/.controller.api.services.v1.UpdateScopeResponse\"8\x92A\x12\x12\x10Updates a Scope.\x82\xd3\xe4\x93\x02\x1d:\x04itemb\x04item2\x0f/v1/scopes/{id}\x12\x9c\x01\n" +
	"\vDeleteScope\x12..controller.api.services.v1.DeleteScopeRequest\x1a/.controller.api.services.v1.DeleteScopeResponse\",\x92A\x12\x12\x10Deletes a Scope.\x82\xd3\xe4\x93\x02\x11*\x0f/v1/scopes/{id}\x12\xa6\x01\n" +
	"\bListKeys\x12+.controller.api.services.v1.ListKeysRequest\x1a,.controller.api.services.v1.ListKeysResponse\"?\x92A\x1b\x12\x19List all keys in a Scope.\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/scopes/{id}:list-keys\x12\xae\x01\n" +
	"\n" +
	"RotateKeys\x12-.controller.api.services.v1.RotateKeysRequest\x1a..controller.api.services.v1.RotateKeysResponse\"A\x92A\x1d\x12\x1bRotate all keys in a Scope.\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/scopes:rotate-keys\x12\xa4\x02\n" +
	"\x1dListKeyVersionDestructionJobs\x12@.controller.api.services.v1.ListKeyVersionDestructionJobsRequest\x1aA.controller.api.services.v1.ListKeyVersionDestructionJobsResponse\"~\x92A<\x12:Lists all pending key version destruction jobs in a Scope.\x82\xd3\xe4\x93\x029\x127/v1/scopes/{scope_id}:list-key-version-destruction-jobs\x12\xaa\x03\n" +
	"\x11DestroyKeyVersion\x124.controller.api.services.v1.DestroyKeyVersionRequest\x1a5.controller.api.services.v1.DestroyKeyVersionResponse\"\xa7\x02\x92A\xfa\x01\x12\xf7\x01Destroy the specified key version in a Scope. This may start an asynchronous job that re-encrypts all data encrypted by the specified key version. Use GET /v1/scopes/{scope_id}:list-key-version-destruction-jobs to monitor pending destruction jobs.\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/scopes:destroy-key-version\x12\xf6\x01\n" +
	"\x13AttachStoragePolicy\x126.controller.api.services.v1.AttachStoragePolicyRequest\x1a7.controller.api.services.v1.AttachStoragePolicyResponse\"n\x92A5\x123Attaches the specified Storage Policy to the Scope.\x82\xd3\xe4\x93\x020:\x01*b\x04item\"%/v1/scopes/{id}:attach-storage-policy\x12\xf8\x01\n" +
	"\x13DetachStoragePolicy\x126.controller.api.services.v1.DetachStoragePolicyRequest\x1a7.controller.api.services.v1.DetachStoragePolicyResponse\"p\x92A7\x125Detaches the specified Storage Policy from the Scope.\x82\xd3\xe4\x93\x020:\x01*b\x04item\"%/v1/scopes/{id}:detach-storage-policy\x1a\xa3\x03\x92A\x9f\x03\n" +
	"\rScope service\x12\x8f\x02A scope acts as a permission Boundary modeled using the concept of a container. It creates a hierarchical structure that lets you organize your resources and manage access control within Boundary. The scope service provides endpoints to let you manage scopes in Boundary.\x1a|\n" +
	".Read about scopes in the Boundary domain model\x12Jhttps://developer.hashicorp.com/boundary/docs/concepts/domain-model/scopesBMZKgithub.com/hashicorp/boundary/internal/gen/controller/api/services;servicesb\x06proto3"

var (
	file_controller_api_services_v1_scope_service_proto_rawDescOnce sync.Once
	file_controller_api_services_v1_scope_service_proto_rawDescData []byte
)

func file_controller_api_services_v1_scope_service_proto_rawDescGZIP() []byte {
	file_controller_api_services_v1_scope_service_proto_rawDescOnce.Do(func() {
		file_controller_api_services_v1_scope_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_api_services_v1_scope_service_proto_rawDesc), len(file_controller_api_services_v1_scope_service_proto_rawDesc)))
	})
	return file_controller_api_services_v1_scope_service_proto_rawDescData
}

var file_controller_api_services_v1_scope_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_controller_api_services_v1_scope_service_proto_goTypes = []any{
	(*GetScopeRequest)(nil),                       // 0: controller.api.services.v1.GetScopeRequest
	(*GetScopeResponse)(nil),                      // 1: controller.api.services.v1.GetScopeResponse
	(*ListScopesRequest)(nil),                     // 2: controller.api.services.v1.ListScopesRequest
	(*ListScopesResponse)(nil),                    // 3: controller.api.services.v1.ListScopesResponse
	(*CreateScopeRequest)(nil),                    // 4: controller.api.services.v1.CreateScopeRequest
	(*CreateScopeResponse)(nil),                   // 5: controller.api.services.v1.CreateScopeResponse
	(*UpdateScopeRequest)(nil),                    // 6: controller.api.services.v1.UpdateScopeRequest
	(*UpdateScopeResponse)(nil),                   // 7: controller.api.services.v1.UpdateScopeResponse
	(*DeleteScopeRequest)(nil),                    // 8: controller.api.services.v1.DeleteScopeRequest
	(*DeleteScopeResponse)(nil),                   // 9: controller.api.services.v1.DeleteScopeResponse
	(*ListKeysRequest)(nil),                       // 10: controller.api.services.v1.ListKeysRequest
	(*ListKeysResponse)(nil),                      // 11: controller.api.services.v1.ListKeysResponse
	(*RotateKeysRequest)(nil),                     // 12: controller.api.services.v1.RotateKeysRequest
	(*RotateKeysResponse)(nil),                    // 13: controller.api.services.v1.RotateKeysResponse
	(*ListKeyVersionDestructionJobsRequest)(nil),  // 14: controller.api.services.v1.ListKeyVersionDestructionJobsRequest
	(*ListKeyVersionDestructionJobsResponse)(nil), // 15: controller.api.services.v1.ListKeyVersionDestructionJobsResponse
	(*DestroyKeyVersionRequest)(nil),              // 16: controller.api.services.v1.DestroyKeyVersionRequest
	(*DestroyKeyVersionResponse)(nil),             // 17: controller.api.services.v1.DestroyKeyVersionResponse
	(*AttachStoragePolicyRequest)(nil),            // 18: controller.api.services.v1.AttachStoragePolicyRequest
	(*AttachStoragePolicyResponse)(nil),           // 19: controller.api.services.v1.AttachStoragePolicyResponse
	(*DetachStoragePolicyRequest)(nil),            // 20: controller.api.services.v1.DetachStoragePolicyRequest
	(*DetachStoragePolicyResponse)(nil),           // 21: controller.api.services.v1.DetachStoragePolicyResponse
	(*scopes.Scope)(nil),                          // 22: controller.api.resources.scopes.v1.Scope
	(*fieldmaskpb.FieldMask)(nil),                 // 23: google.protobuf.FieldMask
	(*scopes.Key)(nil),                            // 24: controller.api.resources.scopes.v1.Key
	(*scopes.KeyVersionDestructionJob)(nil),       // 25: controller.api.resources.scopes.v1.KeyVersionDestructionJob
}
var file_controller_api_services_v1_scope_service_proto_depIdxs = []int32{
	22, // 0: controller.api.services.v1.GetScopeResponse.item:type_name -> controller.api.resources.scopes.v1.Scope
	22, // 1: controller.api.services.v1.ListScopesResponse.items:type_name -> controller.api.resources.scopes.v1.Scope
	22, // 2: controller.api.services.v1.CreateScopeRequest.item:type_name -> controller.api.resources.scopes.v1.Scope
	22, // 3: controller.api.services.v1.CreateScopeResponse.item:type_name -> controller.api.resources.scopes.v1.Scope
	22, // 4: controller.api.services.v1.UpdateScopeRequest.item:type_name -> controller.api.resources.scopes.v1.Scope
	23, // 5: controller.api.services.v1.UpdateScopeRequest.update_mask:type_name -> google.protobuf.FieldMask
	22, // 6: controller.api.services.v1.UpdateScopeResponse.item:type_name -> controller.api.resources.scopes.v1.Scope
	24, // 7: controller.api.services.v1.ListKeysResponse.items:type_name -> controller.api.resources.scopes.v1.Key
	25, // 8: controller.api.services.v1.ListKeyVersionDestructionJobsResponse.items:type_name -> controller.api.resources.scopes.v1.KeyVersionDestructionJob
	22, // 9: controller.api.services.v1.AttachStoragePolicyResponse.item:type_name -> controller.api.resources.scopes.v1.Scope
	22, // 10: controller.api.services.v1.DetachStoragePolicyResponse.item:type_name -> controller.api.resources.scopes.v1.Scope
	0,  // 11: controller.api.services.v1.ScopeService.GetScope:input_type -> controller.api.services.v1.GetScopeRequest
	2,  // 12: controller.api.services.v1.ScopeService.ListScopes:input_type -> controller.api.services.v1.ListScopesRequest
	4,  // 13: controller.api.services.v1.ScopeService.CreateScope:input_type -> controller.api.services.v1.CreateScopeRequest
	6,  // 14: controller.api.services.v1.ScopeService.UpdateScope:input_type -> controller.api.services.v1.UpdateScopeRequest
	8,  // 15: controller.api.services.v1.ScopeService.DeleteScope:input_type -> controller.api.services.v1.DeleteScopeRequest
	10, // 16: controller.api.services.v1.ScopeService.ListKeys:input_type -> controller.api.services.v1.ListKeysRequest
	12, // 17: controller.api.services.v1.ScopeService.RotateKeys:input_type -> controller.api.services.v1.RotateKeysRequest
	14, // 18: controller.api.services.v1.ScopeService.ListKeyVersionDestructionJobs:input_type -> controller.api.services.v1.ListKeyVersionDestructionJobsRequest
	16, // 19: controller.api.services.v1.ScopeService.DestroyKeyVersion:input_type -> controller.api.services.v1.DestroyKeyVersionRequest
	18, // 20: controller.api.services.v1.ScopeService.AttachStoragePolicy:input_type -> controller.api.services.v1.AttachStoragePolicyRequest
	20, // 21: controller.api.services.v1.ScopeService.DetachStoragePolicy:input_type -> controller.api.services.v1.DetachStoragePolicyRequest
	1,  // 22: controller.api.services.v1.ScopeService.GetScope:output_type -> controller.api.services.v1.GetScopeResponse
	3,  // 23: controller.api.services.v1.ScopeService.ListScopes:output_type -> controller.api.services.v1.ListScopesResponse
	5,  // 24: controller.api.services.v1.ScopeService.CreateScope:output_type -> controller.api.services.v1.CreateScopeResponse
	7,  // 25: controller.api.services.v1.ScopeService.UpdateScope:output_type -> controller.api.services.v1.UpdateScopeResponse
	9,  // 26: controller.api.services.v1.ScopeService.DeleteScope:output_type -> controller.api.services.v1.DeleteScopeResponse
	11, // 27: controller.api.services.v1.ScopeService.ListKeys:output_type -> controller.api.services.v1.ListKeysResponse
	13, // 28: controller.api.services.v1.ScopeService.RotateKeys:output_type -> controller.api.services.v1.RotateKeysResponse
	15, // 29: controller.api.services.v1.ScopeService.ListKeyVersionDestructionJobs:output_type -> controller.api.services.v1.ListKeyVersionDestructionJobsResponse
	17, // 30: controller.api.services.v1.ScopeService.DestroyKeyVersion:output_type -> controller.api.services.v1.DestroyKeyVersionResponse
	19, // 31: controller.api.services.v1.ScopeService.AttachStoragePolicy:output_type -> controller.api.services.v1.AttachStoragePolicyResponse
	21, // 32: controller.api.services.v1.ScopeService.DetachStoragePolicy:output_type -> controller.api.services.v1.DetachStoragePolicyResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_controller_api_services_v1_scope_service_proto_init() }
func file_controller_api_services_v1_scope_service_proto_init() {
	if File_controller_api_services_v1_scope_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_api_services_v1_scope_service_proto_rawDesc), len(file_controller_api_services_v1_scope_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_api_services_v1_scope_service_proto_goTypes,
		DependencyIndexes: file_controller_api_services_v1_scope_service_proto_depIdxs,
		MessageInfos:      file_controller_api_services_v1_scope_service_proto_msgTypes,
	}.Build()
	File_controller_api_services_v1_scope_service_proto = out.File
	file_controller_api_services_v1_scope_service_proto_goTypes = nil
	file_controller_api_services_v1_scope_service_proto_depIdxs = nil
}
