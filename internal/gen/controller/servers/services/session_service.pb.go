// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: controller/servers/services/v1/session_service.proto

package services

import (
	targets "github.com/hashicorp/boundary/sdk/pbs/controller/api/resources/targets"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LookupSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The session ID from the client
	SessionId string `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// The id of the requesting worker, used for filtering to ensure this worker
	// can handle this session
	WorkerId      string `protobuf:"bytes,20,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupSessionRequest) Reset() {
	*x = LookupSessionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupSessionRequest) ProtoMessage() {}

func (x *LookupSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupSessionRequest.ProtoReflect.Descriptor instead.
func (*LookupSessionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{0}
}

func (x *LookupSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LookupSessionRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

// LookupSessionResponse contains information necessary for a client to
// establish a session.
type LookupSessionResponse struct {
	state           protoimpl.MessageState            `protogen:"open.v1"`
	Authorization   *targets.SessionAuthorizationData `protobuf:"bytes,10,opt,name=authorization,proto3" json:"authorization,omitempty"`
	TofuToken       string                            `protobuf:"bytes,20,opt,name=tofu_token,json=tofuToken,proto3" json:"tofu_token,omitempty" class:"secret"`                             // @gotags: `class:"secret"`
	Version         uint32                            `protobuf:"varint,30,opt,name=version,proto3" json:"version,omitempty" class:"public"`                                                 // @gotags: `class:"public"`
	Endpoint        string                            `protobuf:"bytes,40,opt,name=endpoint,proto3" json:"endpoint,omitempty" class:"public"`                                                // @gotags: `class:"public"`
	Expiration      *timestamppb.Timestamp            `protobuf:"bytes,50,opt,name=expiration,proto3" json:"expiration,omitempty" class:"public" eventstream:"observation"`                                            // @gotags: `class:"public" eventstream:"observation"`
	Status          SESSIONSTATUS                     `protobuf:"varint,60,opt,name=status,proto3,enum=controller.servers.services.v1.SESSIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	ConnectionLimit int32                             `protobuf:"varint,70,opt,name=connection_limit,json=connectionLimit,proto3" json:"connection_limit,omitempty" class:"public"`          // @gotags: `class:"public"`
	ConnectionsLeft int32                             `protobuf:"varint,80,opt,name=connections_left,json=connectionsLeft,proto3" json:"connections_left,omitempty" class:"public"`          // @gotags: `class:"public"`
	HostId          string                            `protobuf:"bytes,90,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty" class:"public" eventstream:"observation"`                                      // @gotags: `class:"public" eventstream:"observation"`
	HostSetId       string                            `protobuf:"bytes,100,opt,name=host_set_id,json=hostSetId,proto3" json:"host_set_id,omitempty" class:"public" eventstream:"observation"`                          // @gotags: `class:"public" eventstream:"observation"`
	TargetId        string                            `protobuf:"bytes,110,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty" class:"public" eventstream:"observation"`                               // @gotags: `class:"public" eventstream:"observation"`
	UserId          string                            `protobuf:"bytes,120,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" class:"public" eventstream:"observation"`                                     // @gotags: `class:"public" eventstream:"observation"`
	// credentials is deprecated on this response message.  Instead use the
	// credentials field inside the ProtocolContext message.
	//
	// Deprecated: Marked as deprecated in controller/servers/services/v1/session_service.proto.
	Credentials []*Credential `protobuf:"bytes,130,rep,name=credentials,proto3" json:"credentials,omitempty" class:"secret"` // @gotags: `class:"secret"`
	// pkcs8_host_keys is deprecated on this response message.
	//
	// Deprecated: Marked as deprecated in controller/servers/services/v1/session_service.proto.
	Pkcs8HostKeys [][]byte `protobuf:"bytes,140,rep,name=pkcs8_host_keys,json=pkcs8HostKeys,proto3" json:"pkcs8_host_keys,omitempty" class:"secret"` // @gotags: `class:"secret"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LookupSessionResponse) Reset() {
	*x = LookupSessionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LookupSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupSessionResponse) ProtoMessage() {}

func (x *LookupSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupSessionResponse.ProtoReflect.Descriptor instead.
func (*LookupSessionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{1}
}

func (x *LookupSessionResponse) GetAuthorization() *targets.SessionAuthorizationData {
	if x != nil {
		return x.Authorization
	}
	return nil
}

func (x *LookupSessionResponse) GetTofuToken() string {
	if x != nil {
		return x.TofuToken
	}
	return ""
}

func (x *LookupSessionResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *LookupSessionResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *LookupSessionResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *LookupSessionResponse) GetStatus() SESSIONSTATUS {
	if x != nil {
		return x.Status
	}
	return SESSIONSTATUS_SESSIONSTATUS_UNSPECIFIED
}

func (x *LookupSessionResponse) GetConnectionLimit() int32 {
	if x != nil {
		return x.ConnectionLimit
	}
	return 0
}

func (x *LookupSessionResponse) GetConnectionsLeft() int32 {
	if x != nil {
		return x.ConnectionsLeft
	}
	return 0
}

func (x *LookupSessionResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *LookupSessionResponse) GetHostSetId() string {
	if x != nil {
		return x.HostSetId
	}
	return ""
}

func (x *LookupSessionResponse) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *LookupSessionResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Deprecated: Marked as deprecated in controller/servers/services/v1/session_service.proto.
func (x *LookupSessionResponse) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

// Deprecated: Marked as deprecated in controller/servers/services/v1/session_service.proto.
func (x *LookupSessionResponse) GetPkcs8HostKeys() [][]byte {
	if x != nil {
		return x.Pkcs8HostKeys
	}
	return nil
}

type ActivateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty" class:"public" eventstream:"observation"`                             // @gotags: `class:"public" eventstream:"observation"`
	TofuToken     string                 `protobuf:"bytes,20,opt,name=tofu_token,json=tofuToken,proto3" json:"tofu_token,omitempty" class:"secret"`                             // @gotags: `class:"secret"`
	Version       uint32                 `protobuf:"varint,30,opt,name=version,proto3" json:"version,omitempty" class:"public"`                                                 // @gotags: `class:"public"`
	Status        SESSIONSTATUS          `protobuf:"varint,50,opt,name=status,proto3,enum=controller.servers.services.v1.SESSIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateSessionRequest) Reset() {
	*x = ActivateSessionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSessionRequest) ProtoMessage() {}

func (x *ActivateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSessionRequest.ProtoReflect.Descriptor instead.
func (*ActivateSessionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{2}
}

func (x *ActivateSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ActivateSessionRequest) GetTofuToken() string {
	if x != nil {
		return x.TofuToken
	}
	return ""
}

func (x *ActivateSessionRequest) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ActivateSessionRequest) GetStatus() SESSIONSTATUS {
	if x != nil {
		return x.Status
	}
	return SESSIONSTATUS_SESSIONSTATUS_UNSPECIFIED
}

type ActivateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        SESSIONSTATUS          `protobuf:"varint,10,opt,name=status,proto3,enum=controller.servers.services.v1.SESSIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivateSessionResponse) Reset() {
	*x = ActivateSessionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSessionResponse) ProtoMessage() {}

func (x *ActivateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSessionResponse.ProtoReflect.Descriptor instead.
func (*ActivateSessionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{3}
}

func (x *ActivateSessionResponse) GetStatus() SESSIONSTATUS {
	if x != nil {
		return x.Status
	}
	return SESSIONSTATUS_SESSIONSTATUS_UNSPECIFIED
}

type CancelSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelSessionRequest) Reset() {
	*x = CancelSessionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSessionRequest) ProtoMessage() {}

func (x *CancelSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSessionRequest.ProtoReflect.Descriptor instead.
func (*CancelSessionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{4}
}

func (x *CancelSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CancelSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        SESSIONSTATUS          `protobuf:"varint,10,opt,name=status,proto3,enum=controller.servers.services.v1.SESSIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelSessionResponse) Reset() {
	*x = CancelSessionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSessionResponse) ProtoMessage() {}

func (x *CancelSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSessionResponse.ProtoReflect.Descriptor instead.
func (*CancelSessionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{5}
}

func (x *CancelSessionResponse) GetStatus() SESSIONSTATUS {
	if x != nil {
		return x.Status
	}
	return SESSIONSTATUS_SESSIONSTATUS_UNSPECIFIED
}

type AuthorizeConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	WorkerId      string                 `protobuf:"bytes,20,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" class:"public" eventstream:"observation"`    // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeConnectionRequest) Reset() {
	*x = AuthorizeConnectionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeConnectionRequest) ProtoMessage() {}

func (x *AuthorizeConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeConnectionRequest.ProtoReflect.Descriptor instead.
func (*AuthorizeConnectionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{6}
}

func (x *AuthorizeConnectionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthorizeConnectionRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type AuthorizeConnectionResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId    string                 `protobuf:"bytes,10,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" class:"public" eventstream:"observation"`                       // @gotags: `class:"public" eventstream:"observation"`
	Status          CONNECTIONSTATUS       `protobuf:"varint,20,opt,name=status,proto3,enum=controller.servers.services.v1.CONNECTIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	ConnectionsLeft int32                  `protobuf:"varint,30,opt,name=connections_left,json=connectionsLeft,proto3" json:"connections_left,omitempty" class:"public"`             // @gotags: `class:"public"`
	// protocol_context contains information specific to the protocol being
	// proxied.  This is not needed to be set for tcp sessions.
	ProtocolContext *anypb.Any `protobuf:"bytes,40,opt,name=protocol_context,json=protocolContext,proto3" json:"protocol_context,omitempty" class:"public"` // @gotags: `class:"public"`
	// route specifies the workers the connection will be sent through
	Route         []string `protobuf:"bytes,50,rep,name=route,proto3" json:"route,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeConnectionResponse) Reset() {
	*x = AuthorizeConnectionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeConnectionResponse) ProtoMessage() {}

func (x *AuthorizeConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeConnectionResponse.ProtoReflect.Descriptor instead.
func (*AuthorizeConnectionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{7}
}

func (x *AuthorizeConnectionResponse) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *AuthorizeConnectionResponse) GetStatus() CONNECTIONSTATUS {
	if x != nil {
		return x.Status
	}
	return CONNECTIONSTATUS_CONNECTIONSTATUS_UNSPECIFIED
}

func (x *AuthorizeConnectionResponse) GetConnectionsLeft() int32 {
	if x != nil {
		return x.ConnectionsLeft
	}
	return 0
}

func (x *AuthorizeConnectionResponse) GetProtocolContext() *anypb.Any {
	if x != nil {
		return x.ProtocolContext
	}
	return nil
}

func (x *AuthorizeConnectionResponse) GetRoute() []string {
	if x != nil {
		return x.Route
	}
	return nil
}

type ConnectConnectionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId       string                 `protobuf:"bytes,10,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" class:"public" eventstream:"observation"`                     // @gotags: `class:"public" eventstream:"observation"`
	ClientTcpAddress   string                 `protobuf:"bytes,20,opt,name=client_tcp_address,json=clientTcpAddress,proto3" json:"client_tcp_address,omitempty" class:"public"`       // @gotags: `class:"public"`
	ClientTcpPort      uint32                 `protobuf:"varint,30,opt,name=client_tcp_port,json=clientTcpPort,proto3" json:"client_tcp_port,omitempty" class:"public"`               // @gotags: `class:"public"`
	EndpointTcpAddress string                 `protobuf:"bytes,40,opt,name=endpoint_tcp_address,json=endpointTcpAddress,proto3" json:"endpoint_tcp_address,omitempty" class:"public"` // @gotags: `class:"public"`
	EndpointTcpPort    uint32                 `protobuf:"varint,50,opt,name=endpoint_tcp_port,json=endpointTcpPort,proto3" json:"endpoint_tcp_port,omitempty" class:"public"`         // @gotags: `class:"public"`
	Type               string                 `protobuf:"bytes,60,opt,name=type,proto3" json:"type,omitempty" class:"public" eventstream:"observation"`                                                         // @gotags: `class:"public" eventstream:"observation"`
	// user_client_ip is the user's client ip for the connection as determined by
	// the inbound http request handler
	UserClientIp  string `protobuf:"bytes,70,opt,name=user_client_ip,json=userClientIp,proto3" json:"user_client_ip,omitempty" class:"public"` // @gotags: `class:"public"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectConnectionRequest) Reset() {
	*x = ConnectConnectionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectConnectionRequest) ProtoMessage() {}

func (x *ConnectConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectConnectionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectConnectionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectConnectionRequest) GetClientTcpAddress() string {
	if x != nil {
		return x.ClientTcpAddress
	}
	return ""
}

func (x *ConnectConnectionRequest) GetClientTcpPort() uint32 {
	if x != nil {
		return x.ClientTcpPort
	}
	return 0
}

func (x *ConnectConnectionRequest) GetEndpointTcpAddress() string {
	if x != nil {
		return x.EndpointTcpAddress
	}
	return ""
}

func (x *ConnectConnectionRequest) GetEndpointTcpPort() uint32 {
	if x != nil {
		return x.EndpointTcpPort
	}
	return 0
}

func (x *ConnectConnectionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConnectConnectionRequest) GetUserClientIp() string {
	if x != nil {
		return x.UserClientIp
	}
	return ""
}

type ConnectConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        CONNECTIONSTATUS       `protobuf:"varint,10,opt,name=status,proto3,enum=controller.servers.services.v1.CONNECTIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectConnectionResponse) Reset() {
	*x = ConnectConnectionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectConnectionResponse) ProtoMessage() {}

func (x *ConnectConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectConnectionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{9}
}

func (x *ConnectConnectionResponse) GetStatus() CONNECTIONSTATUS {
	if x != nil {
		return x.Status
	}
	return CONNECTIONSTATUS_CONNECTIONSTATUS_UNSPECIFIED
}

type CloseConnectionRequestData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,10,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	BytesUp       int64                  `protobuf:"varint,20,opt,name=bytes_up,json=bytesUp,proto3" json:"bytes_up,omitempty" class:"public"`               // @gotags: `class:"public"`
	BytesDown     int64                  `protobuf:"varint,30,opt,name=bytes_down,json=bytesDown,proto3" json:"bytes_down,omitempty" class:"public"`         // @gotags: `class:"public"`
	Reason        string                 `protobuf:"bytes,40,opt,name=reason,proto3" json:"reason,omitempty" class:"public" eventstream:"observation"`                                 // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseConnectionRequestData) Reset() {
	*x = CloseConnectionRequestData{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseConnectionRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionRequestData) ProtoMessage() {}

func (x *CloseConnectionRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionRequestData.ProtoReflect.Descriptor instead.
func (*CloseConnectionRequestData) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{10}
}

func (x *CloseConnectionRequestData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CloseConnectionRequestData) GetBytesUp() int64 {
	if x != nil {
		return x.BytesUp
	}
	return 0
}

func (x *CloseConnectionRequestData) GetBytesDown() int64 {
	if x != nil {
		return x.BytesDown
	}
	return 0
}

func (x *CloseConnectionRequestData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CloseConnectionRequest struct {
	state            protoimpl.MessageState        `protogen:"open.v1"`
	CloseRequestData []*CloseConnectionRequestData `protobuf:"bytes,10,rep,name=close_request_data,json=closeRequestData,proto3" json:"close_request_data,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CloseConnectionRequest) Reset() {
	*x = CloseConnectionRequest{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionRequest) ProtoMessage() {}

func (x *CloseConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionRequest.ProtoReflect.Descriptor instead.
func (*CloseConnectionRequest) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{11}
}

func (x *CloseConnectionRequest) GetCloseRequestData() []*CloseConnectionRequestData {
	if x != nil {
		return x.CloseRequestData
	}
	return nil
}

type CloseConnectionResponseData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,10,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Status        CONNECTIONSTATUS       `protobuf:"varint,20,opt,name=status,proto3,enum=controller.servers.services.v1.CONNECTIONSTATUS" json:"status,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseConnectionResponseData) Reset() {
	*x = CloseConnectionResponseData{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseConnectionResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionResponseData) ProtoMessage() {}

func (x *CloseConnectionResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionResponseData.ProtoReflect.Descriptor instead.
func (*CloseConnectionResponseData) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{12}
}

func (x *CloseConnectionResponseData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CloseConnectionResponseData) GetStatus() CONNECTIONSTATUS {
	if x != nil {
		return x.Status
	}
	return CONNECTIONSTATUS_CONNECTIONSTATUS_UNSPECIFIED
}

type CloseConnectionResponse struct {
	state             protoimpl.MessageState         `protogen:"open.v1"`
	CloseResponseData []*CloseConnectionResponseData `protobuf:"bytes,10,rep,name=close_response_data,json=closeResponseData,proto3" json:"close_response_data,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CloseConnectionResponse) Reset() {
	*x = CloseConnectionResponse{}
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseConnectionResponse) ProtoMessage() {}

func (x *CloseConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_controller_servers_services_v1_session_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseConnectionResponse.ProtoReflect.Descriptor instead.
func (*CloseConnectionResponse) Descriptor() ([]byte, []int) {
	return file_controller_servers_services_v1_session_service_proto_rawDescGZIP(), []int{13}
}

func (x *CloseConnectionResponse) GetCloseResponseData() []*CloseConnectionResponseData {
	if x != nil {
		return x.CloseResponseData
	}
	return nil
}

var File_controller_servers_services_v1_session_service_proto protoreflect.FileDescriptor

const file_controller_servers_services_v1_session_service_proto_rawDesc = "" +
	"\n" +
	"4controller/servers/services/v1/session_service.proto\x12\x1econtroller.servers.services.v1\x1a0controller/api/resources/targets/v1/target.proto\x1a/controller/servers/services/v1/credential.proto\x1a@controller/servers/services/v1/server_coordination_service.proto\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"R\n" +
	"\x14LookupSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\x12\x1b\n" +
	"\tworker_id\x18\x14 \x01(\tR\bworkerId\"\x99\x05\n" +
	"\x15LookupSessionResponse\x12c\n" +
	"\rauthorization\x18\n" +
	" \x01(\v2=.controller.api.resources.targets.v1.SessionAuthorizationDataR\rauthorization\x12\x1d\n" +
	"\n" +
	"tofu_token\x18\x14 \x01(\tR\ttofuToken\x12\x18\n" +
	"\aversion\x18\x1e \x01(\rR\aversion\x12\x1a\n" +
	"\bendpoint\x18( \x01(\tR\bendpoint\x12:\n" +
	"\n" +
	"expiration\x182 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expiration\x12E\n" +
	"\x06status\x18< \x01(\x0e2-.controller.servers.services.v1.SESSIONSTATUSR\x06status\x12)\n" +
	"\x10connection_limit\x18F \x01(\x05R\x0fconnectionLimit\x12)\n" +
	"\x10connections_left\x18P \x01(\x05R\x0fconnectionsLeft\x12\x17\n" +
	"\ahost_id\x18Z \x01(\tR\x06hostId\x12\x1e\n" +
	"\vhost_set_id\x18d \x01(\tR\thostSetId\x12\x1b\n" +
	"\ttarget_id\x18n \x01(\tR\btargetId\x12\x17\n" +
	"\auser_id\x18x \x01(\tR\x06userId\x12Q\n" +
	"\vcredentials\x18\x82\x01 \x03(\v2*.controller.servers.services.v1.CredentialB\x02\x18\x01R\vcredentials\x12+\n" +
	"\x0fpkcs8_host_keys\x18\x8c\x01 \x03(\fB\x02\x18\x01R\rpkcs8HostKeys\"\xc8\x01\n" +
	"\x16ActivateSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"tofu_token\x18\x14 \x01(\tR\ttofuToken\x12\x18\n" +
	"\aversion\x18\x1e \x01(\rR\aversion\x12E\n" +
	"\x06status\x182 \x01(\x0e2-.controller.servers.services.v1.SESSIONSTATUSR\x06statusJ\x04\b(\x10)R\tworker_id\"`\n" +
	"\x17ActivateSessionResponse\x12E\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2-.controller.servers.services.v1.SESSIONSTATUSR\x06status\"5\n" +
	"\x14CancelSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\"^\n" +
	"\x15CancelSessionResponse\x12E\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2-.controller.servers.services.v1.SESSIONSTATUSR\x06status\"X\n" +
	"\x1aAuthorizeConnectionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId\x12\x1b\n" +
	"\tworker_id\x18\x14 \x01(\tR\bworkerId\"\x8e\x02\n" +
	"\x1bAuthorizeConnectionResponse\x12#\n" +
	"\rconnection_id\x18\n" +
	" \x01(\tR\fconnectionId\x12H\n" +
	"\x06status\x18\x14 \x01(\x0e20.controller.servers.services.v1.CONNECTIONSTATUSR\x06status\x12)\n" +
	"\x10connections_left\x18\x1e \x01(\x05R\x0fconnectionsLeft\x12?\n" +
	"\x10protocol_context\x18( \x01(\v2\x14.google.protobuf.AnyR\x0fprotocolContext\x12\x14\n" +
	"\x05route\x182 \x03(\tR\x05route\"\xad\x02\n" +
	"\x18ConnectConnectionRequest\x12#\n" +
	"\rconnection_id\x18\n" +
	" \x01(\tR\fconnectionId\x12,\n" +
	"\x12client_tcp_address\x18\x14 \x01(\tR\x10clientTcpAddress\x12&\n" +
	"\x0fclient_tcp_port\x18\x1e \x01(\rR\rclientTcpPort\x120\n" +
	"\x14endpoint_tcp_address\x18( \x01(\tR\x12endpointTcpAddress\x12*\n" +
	"\x11endpoint_tcp_port\x182 \x01(\rR\x0fendpointTcpPort\x12\x12\n" +
	"\x04type\x18< \x01(\tR\x04type\x12$\n" +
	"\x0euser_client_ip\x18F \x01(\tR\fuserClientIp\"e\n" +
	"\x19ConnectConnectionResponse\x12H\n" +
	"\x06status\x18\n" +
	" \x01(\x0e20.controller.servers.services.v1.CONNECTIONSTATUSR\x06status\"\x93\x01\n" +
	"\x1aCloseConnectionRequestData\x12#\n" +
	"\rconnection_id\x18\n" +
	" \x01(\tR\fconnectionId\x12\x19\n" +
	"\bbytes_up\x18\x14 \x01(\x03R\abytesUp\x12\x1d\n" +
	"\n" +
	"bytes_down\x18\x1e \x01(\x03R\tbytesDown\x12\x16\n" +
	"\x06reason\x18( \x01(\tR\x06reason\"\x82\x01\n" +
	"\x16CloseConnectionRequest\x12h\n" +
	"\x12close_request_data\x18\n" +
	" \x03(\v2:.controller.servers.services.v1.CloseConnectionRequestDataR\x10closeRequestData\"\x8c\x01\n" +
	"\x1bCloseConnectionResponseData\x12#\n" +
	"\rconnection_id\x18\n" +
	" \x01(\tR\fconnectionId\x12H\n" +
	"\x06status\x18\x14 \x01(\x0e20.controller.servers.services.v1.CONNECTIONSTATUSR\x06status\"\x86\x01\n" +
	"\x17CloseConnectionResponse\x12k\n" +
	"\x13close_response_data\x18\n" +
	" \x03(\v2;.controller.servers.services.v1.CloseConnectionResponseDataR\x11closeResponseData2\xbe\x06\n" +
	"\x0eSessionService\x12~\n" +
	"\rLookupSession\x124.controller.servers.services.v1.LookupSessionRequest\x1a5.controller.servers.services.v1.LookupSessionResponse\"\x00\x12\x84\x01\n" +
	"\x0fActivateSession\x126.controller.servers.services.v1.ActivateSessionRequest\x1a7.controller.servers.services.v1.ActivateSessionResponse\"\x00\x12~\n" +
	"\rCancelSession\x124.controller.servers.services.v1.CancelSessionRequest\x1a5.controller.servers.services.v1.CancelSessionResponse\"\x00\x12\x90\x01\n" +
	"\x13AuthorizeConnection\x12:.controller.servers.services.v1.AuthorizeConnectionRequest\x1a;.controller.servers.services.v1.AuthorizeConnectionResponse\"\x00\x12\x8a\x01\n" +
	"\x11ConnectConnection\x128.controller.servers.services.v1.ConnectConnectionRequest\x1a9.controller.servers.services.v1.ConnectConnectionResponse\"\x00\x12\x84\x01\n" +
	"\x0fCloseConnection\x126.controller.servers.services.v1.CloseConnectionRequest\x1a7.controller.servers.services.v1.CloseConnectionResponse\"\x00BQZOgithub.com/hashicorp/boundary/internal/gen/controller/servers/services;servicesb\x06proto3"

var (
	file_controller_servers_services_v1_session_service_proto_rawDescOnce sync.Once
	file_controller_servers_services_v1_session_service_proto_rawDescData []byte
)

func file_controller_servers_services_v1_session_service_proto_rawDescGZIP() []byte {
	file_controller_servers_services_v1_session_service_proto_rawDescOnce.Do(func() {
		file_controller_servers_services_v1_session_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_servers_services_v1_session_service_proto_rawDesc), len(file_controller_servers_services_v1_session_service_proto_rawDesc)))
	})
	return file_controller_servers_services_v1_session_service_proto_rawDescData
}

var file_controller_servers_services_v1_session_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_controller_servers_services_v1_session_service_proto_goTypes = []any{
	(*LookupSessionRequest)(nil),             // 0: controller.servers.services.v1.LookupSessionRequest
	(*LookupSessionResponse)(nil),            // 1: controller.servers.services.v1.LookupSessionResponse
	(*ActivateSessionRequest)(nil),           // 2: controller.servers.services.v1.ActivateSessionRequest
	(*ActivateSessionResponse)(nil),          // 3: controller.servers.services.v1.ActivateSessionResponse
	(*CancelSessionRequest)(nil),             // 4: controller.servers.services.v1.CancelSessionRequest
	(*CancelSessionResponse)(nil),            // 5: controller.servers.services.v1.CancelSessionResponse
	(*AuthorizeConnectionRequest)(nil),       // 6: controller.servers.services.v1.AuthorizeConnectionRequest
	(*AuthorizeConnectionResponse)(nil),      // 7: controller.servers.services.v1.AuthorizeConnectionResponse
	(*ConnectConnectionRequest)(nil),         // 8: controller.servers.services.v1.ConnectConnectionRequest
	(*ConnectConnectionResponse)(nil),        // 9: controller.servers.services.v1.ConnectConnectionResponse
	(*CloseConnectionRequestData)(nil),       // 10: controller.servers.services.v1.CloseConnectionRequestData
	(*CloseConnectionRequest)(nil),           // 11: controller.servers.services.v1.CloseConnectionRequest
	(*CloseConnectionResponseData)(nil),      // 12: controller.servers.services.v1.CloseConnectionResponseData
	(*CloseConnectionResponse)(nil),          // 13: controller.servers.services.v1.CloseConnectionResponse
	(*targets.SessionAuthorizationData)(nil), // 14: controller.api.resources.targets.v1.SessionAuthorizationData
	(*timestamppb.Timestamp)(nil),            // 15: google.protobuf.Timestamp
	(SESSIONSTATUS)(0),                       // 16: controller.servers.services.v1.SESSIONSTATUS
	(*Credential)(nil),                       // 17: controller.servers.services.v1.Credential
	(CONNECTIONSTATUS)(0),                    // 18: controller.servers.services.v1.CONNECTIONSTATUS
	(*anypb.Any)(nil),                        // 19: google.protobuf.Any
}
var file_controller_servers_services_v1_session_service_proto_depIdxs = []int32{
	14, // 0: controller.servers.services.v1.LookupSessionResponse.authorization:type_name -> controller.api.resources.targets.v1.SessionAuthorizationData
	15, // 1: controller.servers.services.v1.LookupSessionResponse.expiration:type_name -> google.protobuf.Timestamp
	16, // 2: controller.servers.services.v1.LookupSessionResponse.status:type_name -> controller.servers.services.v1.SESSIONSTATUS
	17, // 3: controller.servers.services.v1.LookupSessionResponse.credentials:type_name -> controller.servers.services.v1.Credential
	16, // 4: controller.servers.services.v1.ActivateSessionRequest.status:type_name -> controller.servers.services.v1.SESSIONSTATUS
	16, // 5: controller.servers.services.v1.ActivateSessionResponse.status:type_name -> controller.servers.services.v1.SESSIONSTATUS
	16, // 6: controller.servers.services.v1.CancelSessionResponse.status:type_name -> controller.servers.services.v1.SESSIONSTATUS
	18, // 7: controller.servers.services.v1.AuthorizeConnectionResponse.status:type_name -> controller.servers.services.v1.CONNECTIONSTATUS
	19, // 8: controller.servers.services.v1.AuthorizeConnectionResponse.protocol_context:type_name -> google.protobuf.Any
	18, // 9: controller.servers.services.v1.ConnectConnectionResponse.status:type_name -> controller.servers.services.v1.CONNECTIONSTATUS
	10, // 10: controller.servers.services.v1.CloseConnectionRequest.close_request_data:type_name -> controller.servers.services.v1.CloseConnectionRequestData
	18, // 11: controller.servers.services.v1.CloseConnectionResponseData.status:type_name -> controller.servers.services.v1.CONNECTIONSTATUS
	12, // 12: controller.servers.services.v1.CloseConnectionResponse.close_response_data:type_name -> controller.servers.services.v1.CloseConnectionResponseData
	0,  // 13: controller.servers.services.v1.SessionService.LookupSession:input_type -> controller.servers.services.v1.LookupSessionRequest
	2,  // 14: controller.servers.services.v1.SessionService.ActivateSession:input_type -> controller.servers.services.v1.ActivateSessionRequest
	4,  // 15: controller.servers.services.v1.SessionService.CancelSession:input_type -> controller.servers.services.v1.CancelSessionRequest
	6,  // 16: controller.servers.services.v1.SessionService.AuthorizeConnection:input_type -> controller.servers.services.v1.AuthorizeConnectionRequest
	8,  // 17: controller.servers.services.v1.SessionService.ConnectConnection:input_type -> controller.servers.services.v1.ConnectConnectionRequest
	11, // 18: controller.servers.services.v1.SessionService.CloseConnection:input_type -> controller.servers.services.v1.CloseConnectionRequest
	1,  // 19: controller.servers.services.v1.SessionService.LookupSession:output_type -> controller.servers.services.v1.LookupSessionResponse
	3,  // 20: controller.servers.services.v1.SessionService.ActivateSession:output_type -> controller.servers.services.v1.ActivateSessionResponse
	5,  // 21: controller.servers.services.v1.SessionService.CancelSession:output_type -> controller.servers.services.v1.CancelSessionResponse
	7,  // 22: controller.servers.services.v1.SessionService.AuthorizeConnection:output_type -> controller.servers.services.v1.AuthorizeConnectionResponse
	9,  // 23: controller.servers.services.v1.SessionService.ConnectConnection:output_type -> controller.servers.services.v1.ConnectConnectionResponse
	13, // 24: controller.servers.services.v1.SessionService.CloseConnection:output_type -> controller.servers.services.v1.CloseConnectionResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_controller_servers_services_v1_session_service_proto_init() }
func file_controller_servers_services_v1_session_service_proto_init() {
	if File_controller_servers_services_v1_session_service_proto != nil {
		return
	}
	file_controller_servers_services_v1_credential_proto_init()
	file_controller_servers_services_v1_server_coordination_service_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_servers_services_v1_session_service_proto_rawDesc), len(file_controller_servers_services_v1_session_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_servers_services_v1_session_service_proto_goTypes,
		DependencyIndexes: file_controller_servers_services_v1_session_service_proto_depIdxs,
		MessageInfos:      file_controller_servers_services_v1_session_service_proto_msgTypes,
	}.Build()
	File_controller_servers_services_v1_session_service_proto = out.File
	file_controller_servers_services_v1_session_service_proto_goTypes = nil
	file_controller_servers_services_v1_session_service_proto_depIdxs = nil
}
