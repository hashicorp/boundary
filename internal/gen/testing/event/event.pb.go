// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: testing/event/v1/event.proto

package event

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestAuthenticateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the Auth Method in the system that should be used for authentication.
	// @inject_tag: `class:"public"`
	AuthMethodId string `protobuf:"bytes,1,opt,name=auth_method_id,proto3" json:"auth_method_id,omitempty" class:"public"`
	// This can be "cookie" or "token". If not provided, "token" will be used. "cookie" activates a split-cookie method where the token is split partially between http-only and regular cookies in order
	// to keep it safe from rogue JS in the browser. Deprecated, use "type" instead.
	// @inject_tag: `class:"public"`
	//
	// Deprecated: Marked as deprecated in testing/event/v1/event.proto.
	TokenType string `protobuf:"bytes,2,opt,name=token_type,proto3" json:"token_type,omitempty" class:"public"`
	// This can be "cookie" or "token". If not provided, "token" will be used. "cookie" activates a split-cookie method where the token is split partially between http-only and regular cookies in order
	// to keep it safe from rogue JS in the browser.
	// @inject_tag: `class:"public"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" class:"public"`
	// Attributes are passed to the Auth Method; the valid keys and values depend on the type of Auth Method as well as the command.
	Attributes *structpb.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// The command to perform.
	// @inject_tag: `class:"public"`
	Command       string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty" class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAuthenticateRequest) Reset() {
	*x = TestAuthenticateRequest{}
	mi := &file_testing_event_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAuthenticateRequest) ProtoMessage() {}

func (x *TestAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testing_event_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*TestAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_testing_event_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *TestAuthenticateRequest) GetAuthMethodId() string {
	if x != nil {
		return x.AuthMethodId
	}
	return ""
}

// Deprecated: Marked as deprecated in testing/event/v1/event.proto.
func (x *TestAuthenticateRequest) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *TestAuthenticateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TestAuthenticateRequest) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TestAuthenticateRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type TestAuthenticateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Valid keys and values depend on the type of Auth Method as well as the command.
	Attributes *structpb.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// The command that was performed.
	// @inject_tag: `class:"public"`
	Command       string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty" class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAuthenticateResponse) Reset() {
	*x = TestAuthenticateResponse{}
	mi := &file_testing_event_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAuthenticateResponse) ProtoMessage() {}

func (x *TestAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testing_event_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*TestAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_testing_event_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *TestAuthenticateResponse) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TestAuthenticateResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

var File_testing_event_v1_event_proto protoreflect.FileDescriptor

const file_testing_event_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x1ctesting/event/v1/event.proto\x12\x10testing.event.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xcc\x01\n" +
	"\x17TestAuthenticateRequest\x12&\n" +
	"\x0eauth_method_id\x18\x01 \x01(\tR\x0eauth_method_id\x12\"\n" +
	"\n" +
	"token_type\x18\x02 \x01(\tB\x02\x18\x01R\n" +
	"token_type\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x127\n" +
	"\n" +
	"attributes\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\"\x8b\x01\n" +
	"\x18TestAuthenticateResponse\x127\n" +
	"\n" +
	"attributes\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommandJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03R\x04itemR\n" +
	"token_type2\x89\x02\n" +
	"\x15TestAuthMethodService\x12\xef\x01\n" +
	"\x10TestAuthenticate\x12).testing.event.v1.TestAuthenticateRequest\x1a*.testing.event.v1.TestAuthenticateResponse\"\x83\x01\x92AG\x12EAuthenticate a user to an scope and retrieve an authentication token.\x82\xd3\xe4\x93\x023:\x01*\"./v1/auth-methods/{auth_method_id}:authenticateB@Z>github.com/hashicorp/boundary/internal/gen/testing/event;eventb\x06proto3"

var (
	file_testing_event_v1_event_proto_rawDescOnce sync.Once
	file_testing_event_v1_event_proto_rawDescData []byte
)

func file_testing_event_v1_event_proto_rawDescGZIP() []byte {
	file_testing_event_v1_event_proto_rawDescOnce.Do(func() {
		file_testing_event_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_testing_event_v1_event_proto_rawDesc), len(file_testing_event_v1_event_proto_rawDesc)))
	})
	return file_testing_event_v1_event_proto_rawDescData
}

var file_testing_event_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_testing_event_v1_event_proto_goTypes = []any{
	(*TestAuthenticateRequest)(nil),  // 0: testing.event.v1.TestAuthenticateRequest
	(*TestAuthenticateResponse)(nil), // 1: testing.event.v1.TestAuthenticateResponse
	(*structpb.Struct)(nil),          // 2: google.protobuf.Struct
}
var file_testing_event_v1_event_proto_depIdxs = []int32{
	2, // 0: testing.event.v1.TestAuthenticateRequest.attributes:type_name -> google.protobuf.Struct
	2, // 1: testing.event.v1.TestAuthenticateResponse.attributes:type_name -> google.protobuf.Struct
	0, // 2: testing.event.v1.TestAuthMethodService.TestAuthenticate:input_type -> testing.event.v1.TestAuthenticateRequest
	1, // 3: testing.event.v1.TestAuthMethodService.TestAuthenticate:output_type -> testing.event.v1.TestAuthenticateResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_testing_event_v1_event_proto_init() }
func file_testing_event_v1_event_proto_init() {
	if File_testing_event_v1_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_testing_event_v1_event_proto_rawDesc), len(file_testing_event_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testing_event_v1_event_proto_goTypes,
		DependencyIndexes: file_testing_event_v1_event_proto_depIdxs,
		MessageInfos:      file_testing_event_v1_event_proto_msgTypes,
	}.Build()
	File_testing_event_v1_event_proto = out.File
	file_testing_event_v1_event_proto_goTypes = nil
	file_testing_event_v1_event_proto_depIdxs = nil
}
