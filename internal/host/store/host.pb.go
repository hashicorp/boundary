// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: controller/storage/host/store/v1/host.proto

// Package store provides protobufs for storing types in the host package.

package store

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Catalog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_is is a surrogate key suitable for use in a public API.
	// @inject_tag: `gorm:"primary_key"`
	PublicId string `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty" gorm:"primary_key"`
	// The project_id of the owning scope and must be set.
	// @inject_tag: `gorm:"not_null"`
	ProjectId     string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" gorm:"not_null"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Catalog) Reset() {
	*x = Catalog{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Catalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalog) ProtoMessage() {}

func (x *Catalog) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalog.ProtoReflect.Descriptor instead.
func (*Catalog) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{0}
}

func (x *Catalog) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Catalog) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type Host struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_is is a surrogate key suitable for use in a public API.
	// @inject_tag: `gorm:"primary_key"`
	PublicId string `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty" gorm:"primary_key"`
	// The catalog_id of the owning catalog and must be set.
	// @inject_tag: `gorm:"not_null"`
	CatalogId     string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty" gorm:"not_null"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{1}
}

func (x *Host) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Host) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

type Set struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_is is a surrogate key suitable for use in a public API.
	// @inject_tag: `gorm:"primary_key"`
	PublicId string `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty" gorm:"primary_key"`
	// The catalog_id of the owning catalog and must be set.
	// @inject_tag: `gorm:"not_null"`
	CatalogId     string `protobuf:"bytes,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty" gorm:"not_null"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Set) Reset() {
	*x = Set{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

func (x *Set) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{2}
}

func (x *Set) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Set) GetCatalogId() string {
	if x != nil {
		return x.CatalogId
	}
	return ""
}

type PreferredEndpoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the host set this belongs to.
	// @inject_tag: `gorm:"primary_key"`
	HostSetId string `protobuf:"bytes,1,opt,name=host_set_id,json=hostSetId,proto3" json:"host_set_id,omitempty" gorm:"primary_key"`
	// The priority order, zero-indexed
	// @inject_tag: `gorm:"primary_key"`
	Priority uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty" gorm:"primary_key"`
	// The string text of the preference condition
	// @inject_tag: `gorm:"not_null"`
	Condition     string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty" gorm:"not_null"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreferredEndpoint) Reset() {
	*x = PreferredEndpoint{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreferredEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferredEndpoint) ProtoMessage() {}

func (x *PreferredEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferredEndpoint.ProtoReflect.Descriptor instead.
func (*PreferredEndpoint) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{3}
}

func (x *PreferredEndpoint) GetHostSetId() string {
	if x != nil {
		return x.HostSetId
	}
	return ""
}

func (x *PreferredEndpoint) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *PreferredEndpoint) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type IpAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: `gorm:"primary_key"`
	HostId string `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty" gorm:"primary_key"`
	// @inject_tag: `gorm:"primary_key"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty" gorm:"primary_key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpAddress) Reset() {
	*x = IpAddress{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAddress) ProtoMessage() {}

func (x *IpAddress) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAddress.ProtoReflect.Descriptor instead.
func (*IpAddress) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{4}
}

func (x *IpAddress) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *IpAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DnsName struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: `gorm:"primary_key"`
	HostId string `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty" gorm:"primary_key"`
	// @inject_tag: `gorm:"primary_key"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" gorm:"primary_key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsName) Reset() {
	*x = DnsName{}
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsName) ProtoMessage() {}

func (x *DnsName) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_host_store_v1_host_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsName.ProtoReflect.Descriptor instead.
func (*DnsName) Descriptor() ([]byte, []int) {
	return file_controller_storage_host_store_v1_host_proto_rawDescGZIP(), []int{5}
}

func (x *DnsName) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *DnsName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_controller_storage_host_store_v1_host_proto protoreflect.FileDescriptor

const file_controller_storage_host_store_v1_host_proto_rawDesc = "" +
	"\n" +
	"+controller/storage/host/store/v1/host.proto\x12 controller.storage.host.store.v1\"E\n" +
	"\aCatalog\x12\x1b\n" +
	"\tpublic_id\x18\x01 \x01(\tR\bpublicId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\"B\n" +
	"\x04Host\x12\x1b\n" +
	"\tpublic_id\x18\x01 \x01(\tR\bpublicId\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tR\tcatalogId\"A\n" +
	"\x03Set\x12\x1b\n" +
	"\tpublic_id\x18\x01 \x01(\tR\bpublicId\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\tR\tcatalogId\"m\n" +
	"\x11PreferredEndpoint\x12\x1e\n" +
	"\vhost_set_id\x18\x01 \x01(\tR\thostSetId\x12\x1a\n" +
	"\bpriority\x18\x02 \x01(\rR\bpriority\x12\x1c\n" +
	"\tcondition\x18\x03 \x01(\tR\tcondition\">\n" +
	"\tIpAddress\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"6\n" +
	"\aDnsName\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04nameB9Z7github.com/hashicorp/boundary/internal/host/store;storeb\x06proto3"

var (
	file_controller_storage_host_store_v1_host_proto_rawDescOnce sync.Once
	file_controller_storage_host_store_v1_host_proto_rawDescData []byte
)

func file_controller_storage_host_store_v1_host_proto_rawDescGZIP() []byte {
	file_controller_storage_host_store_v1_host_proto_rawDescOnce.Do(func() {
		file_controller_storage_host_store_v1_host_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_storage_host_store_v1_host_proto_rawDesc), len(file_controller_storage_host_store_v1_host_proto_rawDesc)))
	})
	return file_controller_storage_host_store_v1_host_proto_rawDescData
}

var file_controller_storage_host_store_v1_host_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_controller_storage_host_store_v1_host_proto_goTypes = []any{
	(*Catalog)(nil),           // 0: controller.storage.host.store.v1.Catalog
	(*Host)(nil),              // 1: controller.storage.host.store.v1.Host
	(*Set)(nil),               // 2: controller.storage.host.store.v1.Set
	(*PreferredEndpoint)(nil), // 3: controller.storage.host.store.v1.PreferredEndpoint
	(*IpAddress)(nil),         // 4: controller.storage.host.store.v1.IpAddress
	(*DnsName)(nil),           // 5: controller.storage.host.store.v1.DnsName
}
var file_controller_storage_host_store_v1_host_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_controller_storage_host_store_v1_host_proto_init() }
func file_controller_storage_host_store_v1_host_proto_init() {
	if File_controller_storage_host_store_v1_host_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_storage_host_store_v1_host_proto_rawDesc), len(file_controller_storage_host_store_v1_host_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_storage_host_store_v1_host_proto_goTypes,
		DependencyIndexes: file_controller_storage_host_store_v1_host_proto_depIdxs,
		MessageInfos:      file_controller_storage_host_store_v1_host_proto_msgTypes,
	}.Build()
	File_controller_storage_host_store_v1_host_proto = out.File
	file_controller_storage_host_store_v1_host_proto_goTypes = nil
	file_controller_storage_host_store_v1_host_proto_depIdxs = nil
}
