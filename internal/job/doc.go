// Package job provides a Job and a JobRun struct suitable for persisting to
// the repository.
//
// The uniqueness of a job is determined by the name and code input parameters, this
// uniqueness is enforced by the database.  The private_id is generated by the
// repository using the code and name as a seed, the id is prefixed with "job_".
//
// Only a single JobRun can be in a running state for a specific job.
//
// Repository
//
// A repository provides methods for creating, updating, retrieving, and
// deleting jobs and job runs. A new repository should be
// created for each transaction. For example:
//
//  var wrapper wrapping.Wrapper
//  ... init wrapper...
//
//  // db implements both the reader and writer interfaces.
//  db, _ := db.Open(db.Postgres, url)
//
//  var repo *job.Repository
//
//  repo, _ = job.NewRepository(db, db, wrapper)
//  job, _ := repo.LookupJob(ctx, jobId)
//
//  Job.NextScheduledRun = &timestamp.Timestamp{Timestamp: timestamppb.New(time.Now())}
//
//  repo, _ = Job.NewRepository(db, db, wrapper)
//  job, _ = repo.UpdateJob(ctx, job, []string{"NextScheduledRun"})
package job
