// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: controller/storage/servers/store/v1/worker.proto

package store

import (
	timestamp "github.com/hashicorp/boundary/internal/db/timestamp"
	_ "github.com/hashicorp/boundary/sdk/pbs/controller/protooptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Worker contains all fields related to a Worker resource
type Worker struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_id is a surrogate key suitable for use in a public API
	// @inject_tag: `gorm:"primary_key"`
	PublicId string `protobuf:"bytes,10,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty" gorm:"primary_key"`
	// Name of the resource (optional)
	// @inject_tag: `gorm:"default:null"`
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty" gorm:"default:null"`
	// Description of the resource (optional)
	// @inject_tag: `gorm:"default:null"`
	Description string `protobuf:"bytes,30,opt,name=description,proto3" json:"description,omitempty" gorm:"default:null"`
	// Address for the worker. This is optional.
	// @inject_tag: `gorm:"default:null"`
	Address string `protobuf:"bytes,40,opt,name=address,proto3" json:"address,omitempty" gorm:"default:null"`
	// The create_time is set by the database.
	// @inject_tag: `gorm:"default:current_timestamp"`
	CreateTime *timestamp.Timestamp `protobuf:"bytes,50,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" gorm:"default:current_timestamp"`
	// The update_time is set by the database.
	// @inject_tag: `gorm:"default:current_timestamp"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,60,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty" gorm:"default:current_timestamp"`
	// The scope_id of the owning scope and must be set.
	// @inject_tag: `gorm:"not_null"`
	ScopeId string `protobuf:"bytes,70,opt,name=scope_id,json=scopeId,proto3" json:"scope_id,omitempty" gorm:"not_null"`
	// version allows optimistic locking of the resource.
	// @inject_tag: `gorm:"default:null"`
	Version uint32 `protobuf:"varint,80,opt,name=version,proto3" json:"version,omitempty" gorm:"default:null"`
	// The last_status_time is the last time a worker daemon sent a status update.
	// @inject_tag: `gorm:"default:null"`
	LastStatusTime *timestamp.Timestamp `protobuf:"bytes,110,opt,name=last_status_time,json=lastStatusTime,proto3" json:"last_status_time,omitempty" gorm:"default:null"`
	// The type of the worker, denoted by how it authenticates: pki or kms.
	// @inject_tag: `gorm:"not_null"`
	Type string `protobuf:"bytes,130,opt,name=type,proto3" json:"type,omitempty" gorm:"not_null"`
	// The version of Boundary the worker binary is running
	// @inject_tag: `gorm:"default:null"`
	ReleaseVersion string `protobuf:"bytes,140,opt,name=release_version,json=releaseVersion,proto3" json:"release_version,omitempty" gorm:"default:null"`
	// The state of the worker, to indicate if the worker is active or in shutdown.
	// @inject_tag: `gorm:"not_null"`
	OperationalState string `protobuf:"bytes,150,opt,name=operational_state,json=operationalState,proto3" json:"operational_state,omitempty" gorm:"not_null"`
	// The local_storage_state indicates the state of the local disk space of the worker.
	// Possible values are:
	// - available: The worker local storage state is at an acceptable state
	// - low storage: The worker is below the minimum threshold for local storage
	// - critically low storage: The worker local storage state is below the critical minimum threshold for local storage
	// - out of storage: The worker is out of local disk space
	// - not configured: The worker does not have a local storage path configured
	// - unknown: The default local storage state of a worker. Used when the local storage state of a worker is not yet known
	// @inject_tag: `gorm:"not_null"`
	LocalStorageState string `protobuf:"bytes,160,opt,name=local_storage_state,json=localStorageState,proto3" json:"local_storage_state,omitempty" gorm:"not_null"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Worker) Reset() {
	*x = Worker{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{0}
}

func (x *Worker) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Worker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Worker) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Worker) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Worker) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Worker) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Worker) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *Worker) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Worker) GetLastStatusTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastStatusTime
	}
	return nil
}

func (x *Worker) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Worker) GetReleaseVersion() string {
	if x != nil {
		return x.ReleaseVersion
	}
	return ""
}

func (x *Worker) GetOperationalState() string {
	if x != nil {
		return x.OperationalState
	}
	return ""
}

func (x *Worker) GetLocalStorageState() string {
	if x != nil {
		return x.LocalStorageState
	}
	return ""
}

// WorkerTag is a tag for a worker.  The primary key is comprised of the
// worker_id, key, value, and source.
// WorkerTag is deprecated- use ApiTag and ConfigTag instead.
//
// Deprecated: Marked as deprecated in controller/storage/servers/store/v1/worker.proto.
type WorkerTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// worker_id is the public key that key of the worker this tag is for.
	// @inject_tag: `gorm:"primary_key"`
	WorkerId string `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" gorm:"primary_key"`
	// key is the key of the tag. This must be set.
	// @inject_tag: `gorm:"primary_key"`
	Key string `protobuf:"bytes,20,opt,name=key,proto3" json:"key,omitempty" gorm:"primary_key"`
	// value is the value
	// @inject_tag: `gorm:"primary_key"`
	Value string `protobuf:"bytes,30,opt,name=value,proto3" json:"value,omitempty" gorm:"primary_key"`
	// source is the source of the tag. Either 'configuration' or 'api'.
	// @inject_tag: `gorm:"primary_key"`
	Source        string `protobuf:"bytes,40,opt,name=source,proto3" json:"source,omitempty" gorm:"primary_key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerTag) Reset() {
	*x = WorkerTag{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerTag) ProtoMessage() {}

func (x *WorkerTag) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerTag.ProtoReflect.Descriptor instead.
func (*WorkerTag) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{1}
}

func (x *WorkerTag) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerTag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkerTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WorkerTag) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ApiTag is an API tag for a worker. The primary key is comprised of the
// worker_id, key, and value
type ApiTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// worker_id is the public key that key of the worker this tag is for.
	// @inject_tag: `gorm:"primary_key"`
	WorkerId string `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" gorm:"primary_key"`
	// key is the key of the tag. This must be set.
	// @inject_tag: `gorm:"primary_key"`
	Key string `protobuf:"bytes,20,opt,name=key,proto3" json:"key,omitempty" gorm:"primary_key"`
	// value is the value
	// @inject_tag: `gorm:"primary_key"`
	Value         string `protobuf:"bytes,30,opt,name=value,proto3" json:"value,omitempty" gorm:"primary_key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiTag) Reset() {
	*x = ApiTag{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiTag) ProtoMessage() {}

func (x *ApiTag) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiTag.ProtoReflect.Descriptor instead.
func (*ApiTag) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{2}
}

func (x *ApiTag) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *ApiTag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ApiTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ConfigTag is a configuration tag for a worker. The primary key is comprised of the
// worker_id, key, and value
type ConfigTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// worker_id is the public key that key of the worker this tag is for.
	// @inject_tag: `gorm:"primary_key"`
	WorkerId string `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" gorm:"primary_key"`
	// key is the key of the tag. This must be set.
	// @inject_tag: `gorm:"primary_key"`
	Key string `protobuf:"bytes,20,opt,name=key,proto3" json:"key,omitempty" gorm:"primary_key"`
	// value is the value
	// @inject_tag: `gorm:"primary_key"`
	Value         string `protobuf:"bytes,30,opt,name=value,proto3" json:"value,omitempty" gorm:"primary_key"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigTag) Reset() {
	*x = ConfigTag{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigTag) ProtoMessage() {}

func (x *ConfigTag) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigTag.ProtoReflect.Descriptor instead.
func (*ConfigTag) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigTag) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *ConfigTag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// WorkerStorageBucketCredentialState is a state for a storage bucket credential for a worker.
// The primary key is comprised of the worker_id, storage_bucket_credential_id, permission_type.
type WorkerStorageBucketCredentialState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// worker_id is the public key of the worker.
	// @inject_tag: `gorm:"primary_key"`
	WorkerId string `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" gorm:"primary_key"`
	// storage_bucket_credential_id is the public key of the storage bucket credential.
	// @inject_tag: `gorm:"primary_key"`
	StorageBucketCredentialId string `protobuf:"bytes,20,opt,name=storage_bucket_credential_id,json=storageBucketCredentialId,proto3" json:"storage_bucket_credential_id,omitempty" gorm:"primary_key"`
	// permission_type is a enum that defines the permission type.
	// @inject_tag: `gorm:"primary_key"`
	PermissionType string `protobuf:"bytes,30,opt,name=permission_type,json=permissionType,proto3" json:"permission_type,omitempty" gorm:"primary_key"`
	// state is a enum that defines the permission state.
	// @inject_tag: `gorm:"not_null"`
	State string `protobuf:"bytes,40,opt,name=state,proto3" json:"state,omitempty" gorm:"not_null"`
	// error_details is the error message returned from the external object store service.
	ErrorDetails string `protobuf:"bytes,50,opt,name=error_details,json=errorDetails,proto3" json:"error_details,omitempty"`
	// checked_at is the utc timestamp of when the permission was tested.
	// @inject_tag: `gorm:"not_null"`
	CheckedAt     *timestamp.Timestamp `protobuf:"bytes,60,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at,omitempty" gorm:"not_null"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerStorageBucketCredentialState) Reset() {
	*x = WorkerStorageBucketCredentialState{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerStorageBucketCredentialState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerStorageBucketCredentialState) ProtoMessage() {}

func (x *WorkerStorageBucketCredentialState) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerStorageBucketCredentialState.ProtoReflect.Descriptor instead.
func (*WorkerStorageBucketCredentialState) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{4}
}

func (x *WorkerStorageBucketCredentialState) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerStorageBucketCredentialState) GetStorageBucketCredentialId() string {
	if x != nil {
		return x.StorageBucketCredentialId
	}
	return ""
}

func (x *WorkerStorageBucketCredentialState) GetPermissionType() string {
	if x != nil {
		return x.PermissionType
	}
	return ""
}

func (x *WorkerStorageBucketCredentialState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WorkerStorageBucketCredentialState) GetErrorDetails() string {
	if x != nil {
		return x.ErrorDetails
	}
	return ""
}

func (x *WorkerStorageBucketCredentialState) GetCheckedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CheckedAt
	}
	return nil
}

// WorkerSessionInfoRequest contains information about a worker and its SessionInfo requests.
type WorkerSessionInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// worker_id is the public id of the worker.
	// @inject_tag: `gorm:"primary_key"`
	WorkerId string `protobuf:"bytes,10,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" gorm:"primary_key"`
	// The last_request_time is the last time a worker has reported its session information.
	// @inject_tag: `gorm:"default:null"`
	LastRequestTime *timestamp.Timestamp `protobuf:"bytes,20,opt,name=last_request_time,json=lastRequestTime,proto3" json:"last_request_time,omitempty" gorm:"default:null"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkerSessionInfoRequest) Reset() {
	*x = WorkerSessionInfoRequest{}
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerSessionInfoRequest) ProtoMessage() {}

func (x *WorkerSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_servers_store_v1_worker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*WorkerSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP(), []int{5}
}

func (x *WorkerSessionInfoRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerSessionInfoRequest) GetLastRequestTime() *timestamp.Timestamp {
	if x != nil {
		return x.LastRequestTime
	}
	return nil
}

var File_controller_storage_servers_store_v1_worker_proto protoreflect.FileDescriptor

const file_controller_storage_servers_store_v1_worker_proto_rawDesc = "" +
	"\n" +
	"0controller/storage/servers/store/v1/worker.proto\x12#controller.storage.servers.store.v1\x1a*controller/custom_options/v1/options.proto\x1a/controller/storage/timestamp/v1/timestamp.proto\"\xea\x04\n" +
	"\x06Worker\x12\x1b\n" +
	"\tpublic_id\x18\n" +
	" \x01(\tR\bpublicId\x12$\n" +
	"\x04name\x18\x14 \x01(\tB\x10\xc2\xdd)\f\n" +
	"\x04name\x12\x04nameR\x04name\x12@\n" +
	"\vdescription\x18\x1e \x01(\tB\x1e\xc2\xdd)\x1a\n" +
	"\vdescription\x12\vdescriptionR\vdescription\x12\x18\n" +
	"\aaddress\x18( \x01(\tR\aaddress\x12K\n" +
	"\vcreate_time\x182 \x01(\v2*.controller.storage.timestamp.v1.TimestampR\n" +
	"createTime\x12K\n" +
	"\vupdate_time\x18< \x01(\v2*.controller.storage.timestamp.v1.TimestampR\n" +
	"updateTime\x12\x19\n" +
	"\bscope_id\x18F \x01(\tR\ascopeId\x12\x18\n" +
	"\aversion\x18P \x01(\rR\aversion\x12T\n" +
	"\x10last_status_time\x18n \x01(\v2*.controller.storage.timestamp.v1.TimestampR\x0elastStatusTime\x12\x13\n" +
	"\x04type\x18\x82\x01 \x01(\tR\x04type\x12(\n" +
	"\x0frelease_version\x18\x8c\x01 \x01(\tR\x0ereleaseVersion\x12,\n" +
	"\x11operational_state\x18\x96\x01 \x01(\tR\x10operationalState\x12/\n" +
	"\x13local_storage_state\x18\xa0\x01 \x01(\tR\x11localStorageState\"l\n" +
	"\tWorkerTag\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12\x10\n" +
	"\x03key\x18\x14 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x1e \x01(\tR\x05value\x12\x16\n" +
	"\x06source\x18( \x01(\tR\x06source:\x02\x18\x01\"M\n" +
	"\x06ApiTag\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12\x10\n" +
	"\x03key\x18\x14 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x1e \x01(\tR\x05value\"P\n" +
	"\tConfigTag\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12\x10\n" +
	"\x03key\x18\x14 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x1e \x01(\tR\x05value\"\xb1\x02\n" +
	"\"WorkerStorageBucketCredentialState\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12?\n" +
	"\x1cstorage_bucket_credential_id\x18\x14 \x01(\tR\x19storageBucketCredentialId\x12'\n" +
	"\x0fpermission_type\x18\x1e \x01(\tR\x0epermissionType\x12\x14\n" +
	"\x05state\x18( \x01(\tR\x05state\x12#\n" +
	"\rerror_details\x182 \x01(\tR\ferrorDetails\x12I\n" +
	"\n" +
	"checked_at\x18< \x01(\v2*.controller.storage.timestamp.v1.TimestampR\tcheckedAt\"\x8f\x01\n" +
	"\x18WorkerSessionInfoRequest\x12\x1b\n" +
	"\tworker_id\x18\n" +
	" \x01(\tR\bworkerId\x12V\n" +
	"\x11last_request_time\x18\x14 \x01(\v2*.controller.storage.timestamp.v1.TimestampR\x0flastRequestTimeB;Z9github.com/hashicorp/boundary/internal/server/store;storeb\x06proto3"

var (
	file_controller_storage_servers_store_v1_worker_proto_rawDescOnce sync.Once
	file_controller_storage_servers_store_v1_worker_proto_rawDescData []byte
)

func file_controller_storage_servers_store_v1_worker_proto_rawDescGZIP() []byte {
	file_controller_storage_servers_store_v1_worker_proto_rawDescOnce.Do(func() {
		file_controller_storage_servers_store_v1_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_storage_servers_store_v1_worker_proto_rawDesc), len(file_controller_storage_servers_store_v1_worker_proto_rawDesc)))
	})
	return file_controller_storage_servers_store_v1_worker_proto_rawDescData
}

var file_controller_storage_servers_store_v1_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_controller_storage_servers_store_v1_worker_proto_goTypes = []any{
	(*Worker)(nil),    // 0: controller.storage.servers.store.v1.Worker
	(*WorkerTag)(nil), // 1: controller.storage.servers.store.v1.WorkerTag
	(*ApiTag)(nil),    // 2: controller.storage.servers.store.v1.ApiTag
	(*ConfigTag)(nil), // 3: controller.storage.servers.store.v1.ConfigTag
	(*WorkerStorageBucketCredentialState)(nil), // 4: controller.storage.servers.store.v1.WorkerStorageBucketCredentialState
	(*WorkerSessionInfoRequest)(nil),           // 5: controller.storage.servers.store.v1.WorkerSessionInfoRequest
	(*timestamp.Timestamp)(nil),                // 6: controller.storage.timestamp.v1.Timestamp
}
var file_controller_storage_servers_store_v1_worker_proto_depIdxs = []int32{
	6, // 0: controller.storage.servers.store.v1.Worker.create_time:type_name -> controller.storage.timestamp.v1.Timestamp
	6, // 1: controller.storage.servers.store.v1.Worker.update_time:type_name -> controller.storage.timestamp.v1.Timestamp
	6, // 2: controller.storage.servers.store.v1.Worker.last_status_time:type_name -> controller.storage.timestamp.v1.Timestamp
	6, // 3: controller.storage.servers.store.v1.WorkerStorageBucketCredentialState.checked_at:type_name -> controller.storage.timestamp.v1.Timestamp
	6, // 4: controller.storage.servers.store.v1.WorkerSessionInfoRequest.last_request_time:type_name -> controller.storage.timestamp.v1.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_controller_storage_servers_store_v1_worker_proto_init() }
func file_controller_storage_servers_store_v1_worker_proto_init() {
	if File_controller_storage_servers_store_v1_worker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_storage_servers_store_v1_worker_proto_rawDesc), len(file_controller_storage_servers_store_v1_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_storage_servers_store_v1_worker_proto_goTypes,
		DependencyIndexes: file_controller_storage_servers_store_v1_worker_proto_depIdxs,
		MessageInfos:      file_controller_storage_servers_store_v1_worker_proto_msgTypes,
	}.Build()
	File_controller_storage_servers_store_v1_worker_proto = out.File
	file_controller_storage_servers_store_v1_worker_proto_goTypes = nil
	file_controller_storage_servers_store_v1_worker_proto_depIdxs = nil
}
