// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: controller/storage/target/targettest/store/v1/target.proto

package store

import (
	timestamp "github.com/hashicorp/boundary/internal/db/timestamp"
	_ "github.com/hashicorp/boundary/sdk/pbs/controller/protooptions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Target struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// public_id is used to access the targettest.Target via an API
	// @inject_tag: gorm:"primary_key"
	PublicId string `protobuf:"bytes,10,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty" gorm:"primary_key"`
	// project id for the targettest.Target
	// @inject_tag: `gorm:"default:null"`
	ProjectId string `protobuf:"bytes,20,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" gorm:"default:null"`
	// name is the optional friendly name used to
	// access the targettest.Target via an API
	// @inject_tag: `gorm:"default:null"`
	Name string `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty" gorm:"default:null"`
	// description of the targettest.Target
	// @inject_tag: `gorm:"default:null"`
	Description string `protobuf:"bytes,40,opt,name=description,proto3" json:"description,omitempty" gorm:"default:null"`
	// create_time from the RDBMS
	// @inject_tag: `gorm:"default:current_timestamp"`
	CreateTime *timestamp.Timestamp `protobuf:"bytes,50,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" gorm:"default:current_timestamp"`
	// update_time from the RDBMS
	// @inject_tag: `gorm:"default:current_timestamp"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,60,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty" gorm:"default:current_timestamp"`
	// version allows optimistic locking of the targettest.Target when modifying the
	// targettest.Target
	// @inject_tag: `gorm:"default:null"`
	Version uint32 `protobuf:"varint,70,opt,name=version,proto3" json:"version,omitempty" gorm:"default:null"`
	// default port of the targettest.Target
	// @inject_tag: `gorm:"default:null"`
	DefaultPort uint32 `protobuf:"varint,80,opt,name=default_port,json=defaultPort,proto3" json:"default_port,omitempty" gorm:"default:null"`
	// default client port of the tcp.Target
	// @inject_tag: `gorm:"default:null"`
	DefaultClientPort uint32 `protobuf:"varint,85,opt,name=default_client_port,json=defaultClientPort,proto3" json:"default_client_port,omitempty" gorm:"default:null"`
	// Maximum total lifetime of a created session, in seconds
	// @inject_tag: `gorm:"default:null"`
	SessionMaxSeconds uint32 `protobuf:"varint,100,opt,name=session_max_seconds,json=sessionMaxSeconds,proto3" json:"session_max_seconds,omitempty" gorm:"default:null"`
	// Maximum number of connections in a session
	// @inject_tag: `gorm:"default:null"`
	SessionConnectionLimit int32 `protobuf:"varint,110,opt,name=session_connection_limit,json=sessionConnectionLimit,proto3" json:"session_connection_limit,omitempty" gorm:"default:null"`
	// A boolean expression that allows filtering the workers that can handle a session
	// @inject_tag: `gorm:"default:null"`
	WorkerFilter string `protobuf:"bytes,120,opt,name=worker_filter,json=workerFilter,proto3" json:"worker_filter,omitempty" gorm:"default:null"`
	// A boolean expression that allows filtering the egress workers that can handle a session
	// @inject_tag: `gorm:"default:null"`
	EgressWorkerFilter string `protobuf:"bytes,130,opt,name=egress_worker_filter,json=egressWorkerFilter,proto3" json:"egress_worker_filter,omitempty" gorm:"default:null"`
	// A boolean expression that allows filtering the ingress workers that can handle a session
	// @inject_tag: `gorm:"default:null"`
	IngressWorkerFilter string `protobuf:"bytes,140,opt,name=ingress_worker_filter,json=ingressWorkerFilter,proto3" json:"ingress_worker_filter,omitempty" gorm:"default:null"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_controller_storage_target_targettest_store_v1_target_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_controller_storage_target_targettest_store_v1_target_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_controller_storage_target_targettest_store_v1_target_proto_rawDescGZIP(), []int{0}
}

func (x *Target) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Target) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Target) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Target) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Target) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Target) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Target) GetDefaultPort() uint32 {
	if x != nil {
		return x.DefaultPort
	}
	return 0
}

func (x *Target) GetDefaultClientPort() uint32 {
	if x != nil {
		return x.DefaultClientPort
	}
	return 0
}

func (x *Target) GetSessionMaxSeconds() uint32 {
	if x != nil {
		return x.SessionMaxSeconds
	}
	return 0
}

func (x *Target) GetSessionConnectionLimit() int32 {
	if x != nil {
		return x.SessionConnectionLimit
	}
	return 0
}

func (x *Target) GetWorkerFilter() string {
	if x != nil {
		return x.WorkerFilter
	}
	return ""
}

func (x *Target) GetEgressWorkerFilter() string {
	if x != nil {
		return x.EgressWorkerFilter
	}
	return ""
}

func (x *Target) GetIngressWorkerFilter() string {
	if x != nil {
		return x.IngressWorkerFilter
	}
	return ""
}

var File_controller_storage_target_targettest_store_v1_target_proto protoreflect.FileDescriptor

const file_controller_storage_target_targettest_store_v1_target_proto_rawDesc = "" +
	"\n" +
	":controller/storage/target/targettest/store/v1/target.proto\x12-controller.storage.target.targettest.store.v1\x1a*controller/custom_options/v1/options.proto\x1a/controller/storage/timestamp/v1/timestamp.proto\"\xfa\a\n" +
	"\x06Target\x12\x1b\n" +
	"\tpublic_id\x18\n" +
	" \x01(\tR\bpublicId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x14 \x01(\tR\tprojectId\x12$\n" +
	"\x04name\x18\x1e \x01(\tB\x10\xc2\xdd)\f\n" +
	"\x04name\x12\x04nameR\x04name\x12@\n" +
	"\vdescription\x18( \x01(\tB\x1e\xc2\xdd)\x1a\n" +
	"\vdescription\x12\vdescriptionR\vdescription\x12K\n" +
	"\vcreate_time\x182 \x01(\v2*.controller.storage.timestamp.v1.TimestampR\n" +
	"createTime\x12K\n" +
	"\vupdate_time\x18< \x01(\v2*.controller.storage.timestamp.v1.TimestampR\n" +
	"updateTime\x12\x18\n" +
	"\aversion\x18F \x01(\rR\aversion\x12M\n" +
	"\fdefault_port\x18P \x01(\rB*\xc2\xdd)&\n" +
	"\vDefaultPort\x12\x17attributes.default_portR\vdefaultPort\x12g\n" +
	"\x13default_client_port\x18U \x01(\rB7\xc2\xdd)3\n" +
	"\x11DefaultClientPort\x12\x1eattributes.default_client_portR\x11defaultClientPort\x12\\\n" +
	"\x13session_max_seconds\x18d \x01(\rB,\xc2\xdd)(\n" +
	"\x11SessionMaxSeconds\x12\x13session_max_secondsR\x11sessionMaxSeconds\x12p\n" +
	"\x18session_connection_limit\x18n \x01(\x05B6\xc2\xdd)2\n" +
	"\x16SessionConnectionLimit\x12\x18session_connection_limitR\x16sessionConnectionLimit\x12F\n" +
	"\rworker_filter\x18x \x01(\tB!\xc2\xdd)\x1d\n" +
	"\fWorkerFilter\x12\rworker_filterR\fworkerFilter\x12a\n" +
	"\x14egress_worker_filter\x18\x82\x01 \x01(\tB.\xc2\xdd)*\n" +
	"\x12EgressWorkerFilter\x12\x14egress_worker_filterR\x12egressWorkerFilter\x12e\n" +
	"\x15ingress_worker_filter\x18\x8c\x01 \x01(\tB0\xc2\xdd),\n" +
	"\x13IngressWorkerFilter\x12\x15ingress_worker_filterR\x13ingressWorkerFilterBFZDgithub.com/hashicorp/boundary/internal/target/targettest/store;storeb\x06proto3"

var (
	file_controller_storage_target_targettest_store_v1_target_proto_rawDescOnce sync.Once
	file_controller_storage_target_targettest_store_v1_target_proto_rawDescData []byte
)

func file_controller_storage_target_targettest_store_v1_target_proto_rawDescGZIP() []byte {
	file_controller_storage_target_targettest_store_v1_target_proto_rawDescOnce.Do(func() {
		file_controller_storage_target_targettest_store_v1_target_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_storage_target_targettest_store_v1_target_proto_rawDesc), len(file_controller_storage_target_targettest_store_v1_target_proto_rawDesc)))
	})
	return file_controller_storage_target_targettest_store_v1_target_proto_rawDescData
}

var file_controller_storage_target_targettest_store_v1_target_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_controller_storage_target_targettest_store_v1_target_proto_goTypes = []any{
	(*Target)(nil),              // 0: controller.storage.target.targettest.store.v1.Target
	(*timestamp.Timestamp)(nil), // 1: controller.storage.timestamp.v1.Timestamp
}
var file_controller_storage_target_targettest_store_v1_target_proto_depIdxs = []int32{
	1, // 0: controller.storage.target.targettest.store.v1.Target.create_time:type_name -> controller.storage.timestamp.v1.Timestamp
	1, // 1: controller.storage.target.targettest.store.v1.Target.update_time:type_name -> controller.storage.timestamp.v1.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_controller_storage_target_targettest_store_v1_target_proto_init() }
func file_controller_storage_target_targettest_store_v1_target_proto_init() {
	if File_controller_storage_target_targettest_store_v1_target_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_storage_target_targettest_store_v1_target_proto_rawDesc), len(file_controller_storage_target_targettest_store_v1_target_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_storage_target_targettest_store_v1_target_proto_goTypes,
		DependencyIndexes: file_controller_storage_target_targettest_store_v1_target_proto_depIdxs,
		MessageInfos:      file_controller_storage_target_targettest_store_v1_target_proto_msgTypes,
	}.Build()
	File_controller_storage_target_targettest_store_v1_target_proto = out.File
	file_controller_storage_target_targettest_store_v1_target_proto_goTypes = nil
	file_controller_storage_target_targettest_store_v1_target_proto_depIdxs = nil
}
