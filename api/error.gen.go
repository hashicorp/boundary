// Code generated by "make api"; DO NOT EDIT.
package api

type Error struct {
	Status  int32         `json:"status,omitempty"`
	Code    string        `json:"code,omitempty"`
	Message string        `json:"message,omitempty"`
	Details *ErrorDetails `json:"details,omitempty"`
}

type Option func(*options)

type options struct {
	defaultMap  map[string]bool
	withScopeId string
	withStatus  int32
	withCode    string
	withMessage string
	withDetails *ErrorDetails
}

func getDefaultOptions() options {
	return options{}
}

func getOpts(opt ...Option) options {
	opts := getDefaultOptions()
	for _, o := range opt {
		o(&opts)
	}
	return opts
}

func WithScopeId(id string) Option {
	return func(o *options) {
		delete(o.defaultMap, "scope_id")
		o.withScopeId = id
	}
}

func WithStatus(inStatus int32) Option {
	return func(o *options) {
		delete(o.defaultMap, "status")
		o.withStatus = inStatus
	}
}

func WithCode(inCode string) Option {
	return func(o *options) {
		delete(o.defaultMap, "code")
		o.withCode = inCode
	}
}

func WithMessage(inMessage string) Option {
	return func(o *options) {
		delete(o.defaultMap, "message")
		o.withMessage = inMessage
	}
}

func WithDetails(inDetails *ErrorDetails) Option {
	return func(o *options) {
		delete(o.defaultMap, "details")
		o.withDetails = inDetails
	}
}
