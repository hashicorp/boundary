// Code generated by "make api"; DO NOT EDIT.
package users

import (
	"context"
	"fmt"

	"github.com/hashicorp/watchtower/api"
)

func (s User) ListUsers(ctx context.Context) ([]*User, *api.Error, error) {
	if s.Client == nil {
		return nil, nil, fmt.Errorf("nil client in ListUser request")
	}

	var opts []api.Option
	if s.Scope.Id != "" {
		// If it's explicitly set here, override anything that might be in the
		// client
		opts = append(opts, api.WithScopeId(s.Scope.Id))
	}

	req, err := s.Client.NewRequest(ctx, "GET", "users", nil, opts...)
	if err != nil {
		return nil, nil, fmt.Errorf("error creating ListUsers request: %w", err)
	}

	resp, err := s.Client.Do(req)
	if err != nil {
		return nil, nil, fmt.Errorf("error performing client request during ListUsers call: %w", err)
	}

	type listResponse struct {
		Items []*User
	}
	target := &listResponse{}

	apiErr, err := resp.Decode(target)
	if err != nil {
		return nil, nil, fmt.Errorf("error decoding ListUsers response: %w", err)
	}

	for _, t := range target.Items {

		t.Client = s.Client

	}

	return target.Items, apiErr, nil
}
