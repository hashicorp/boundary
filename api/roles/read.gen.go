// Code generated by "make api"; DO NOT EDIT.
package roles

import (
	"context"
	"fmt"

	"github.com/hashicorp/watchtower/api"
)

func (s Role) ReadRole(ctx context.Context, id string) (*Role, *api.Error, error) {
	if id == "" {
		return nil, nil, fmt.Errorf("empty ID value passed into ReadRole request")
	}

	if s.Client == nil {
		return nil, nil, fmt.Errorf("nil client in ReadRole request")
	}

	var opts []api.Option
	if s.Scope.Id != "" {
		// If it's explicitly set here, override anything that might be in the
		// client
		opts = append(opts, api.WithScopeId(s.Scope.Id))
	}

	req, err := s.Client.NewRequest(ctx, "GET", fmt.Sprintf("%s/%s", "roles", id), nil, opts...)
	if err != nil {
		return nil, nil, fmt.Errorf("error creating ReadRole request: %w", err)
	}

	resp, err := s.Client.Do(req)
	if err != nil {
		return nil, nil, fmt.Errorf("error performing client request during ReadRole call: %w", err)
	}

	target := new(Role)
	apiErr, err := resp.Decode(target)
	if err != nil {
		return nil, nil, fmt.Errorf("error decoding ReadRole repsonse: %w", err)
	}

	target.Client = s.Client

	return target, apiErr, nil
}
