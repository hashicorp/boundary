// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: controller/api/resources/aliases/v1/alias.proto

package aliases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	scopes "github.com/hashicorp/boundary/sdk/pbs/controller/api/resources/scopes"
	_ "github.com/hashicorp/boundary/sdk/pbs/controller/protooptions"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Alias contains all fields related to an alias resource
type Alias struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the alias.
	Id string `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// The ID of the scope of which this alias is a part.
	ScopeId string `protobuf:"bytes,20,opt,name=scope_id,proto3" json:"scope_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// Scope information for this alias.
	Scope *scopes.ScopeInfo `protobuf:"bytes,30,opt,name=scope,proto3" json:"scope,omitempty"`
	// Optional user-set name for identification purposes.
	Name *wrapperspb.StringValue `protobuf:"bytes,40,opt,name=name,proto3" json:"name,omitempty" class:"public"` // @gotags: `class:"public"`
	// Optional user-set descripton for identification purposes.
	Description *wrapperspb.StringValue `protobuf:"bytes,50,opt,name=description,proto3" json:"description,omitempty" class:"public"` // @gotags: `class:"public"`
	// The time this resource was created.
	CreatedTime *timestamppb.Timestamp `protobuf:"bytes,60,opt,name=created_time,proto3" json:"created_time,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// The time this resource was last updated.
	UpdatedTime *timestamppb.Timestamp `protobuf:"bytes,70,opt,name=updated_time,proto3" json:"updated_time,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// Version is used in mutation requests, after the initial creation, to ensure this resource has not changed.
	// The mutation fails if the version does not match the latest known good version.
	// Version is not required when you create an alias.
	Version uint32 `protobuf:"varint,80,opt,name=version,proto3" json:"version,omitempty" class:"public"` // @gotags: `class:"public"`
	// Value of the alias. This is the value referenced by the user that
	// is resolved to the destination id.
	Value string `protobuf:"bytes,90,opt,name=value,proto3" json:"value,omitempty" class:"public"` // @gotags: `class:"public"`
	// destination_id is the id of the resource that this alias points to.
	DestinationId *wrapperspb.StringValue `protobuf:"bytes,100,opt,name=destination_id,proto3" json:"destination_id,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// type is the type of the alias.
	Type string `protobuf:"bytes,110,opt,name=type,proto3" json:"type,omitempty" class:"public" eventstream:"observation"` // @gotags: `class:"public" eventstream:"observation"`
	// Types that are valid to be assigned to Attrs:
	//
	//	*Alias_Attributes
	//	*Alias_TargetAliasAttributes
	Attrs isAlias_Attrs `protobuf_oneof:"attrs"`
	// The available actions on this resource for this user.
	AuthorizedActions []string `protobuf:"bytes,300,rep,name=authorized_actions,proto3" json:"authorized_actions,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Alias) Reset() {
	*x = Alias{}
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alias) ProtoMessage() {}

func (x *Alias) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alias.ProtoReflect.Descriptor instead.
func (*Alias) Descriptor() ([]byte, []int) {
	return file_controller_api_resources_aliases_v1_alias_proto_rawDescGZIP(), []int{0}
}

func (x *Alias) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alias) GetScopeId() string {
	if x != nil {
		return x.ScopeId
	}
	return ""
}

func (x *Alias) GetScope() *scopes.ScopeInfo {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Alias) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Alias) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Alias) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *Alias) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

func (x *Alias) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Alias) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Alias) GetDestinationId() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationId
	}
	return nil
}

func (x *Alias) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Alias) GetAttrs() isAlias_Attrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *Alias) GetAttributes() *structpb.Struct {
	if x != nil {
		if x, ok := x.Attrs.(*Alias_Attributes); ok {
			return x.Attributes
		}
	}
	return nil
}

func (x *Alias) GetTargetAliasAttributes() *TargetAliasAttributes {
	if x != nil {
		if x, ok := x.Attrs.(*Alias_TargetAliasAttributes); ok {
			return x.TargetAliasAttributes
		}
	}
	return nil
}

func (x *Alias) GetAuthorizedActions() []string {
	if x != nil {
		return x.AuthorizedActions
	}
	return nil
}

type isAlias_Attrs interface {
	isAlias_Attrs()
}

type Alias_Attributes struct {
	// The attributes that are applicable for the specific alias type.
	Attributes *structpb.Struct `protobuf:"bytes,120,opt,name=attributes,proto3,oneof"`
}

type Alias_TargetAliasAttributes struct {
	TargetAliasAttributes *TargetAliasAttributes `protobuf:"bytes,121,opt,name=target_alias_attributes,json=targetAliasAttributes,proto3,oneof"`
}

func (*Alias_Attributes) isAlias_Attrs() {}

func (*Alias_TargetAliasAttributes) isAlias_Attrs() {}

// Attributes associated only with aliases with type "target".
type TargetAliasAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The arguments to provide to authorize_session of the target.
	AuthorizeSessionArguments *AuthorizeSessionArguments `protobuf:"bytes,1,opt,name=authorize_session_arguments,proto3" json:"authorize_session_arguments,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TargetAliasAttributes) Reset() {
	*x = TargetAliasAttributes{}
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetAliasAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetAliasAttributes) ProtoMessage() {}

func (x *TargetAliasAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetAliasAttributes.ProtoReflect.Descriptor instead.
func (*TargetAliasAttributes) Descriptor() ([]byte, []int) {
	return file_controller_api_resources_aliases_v1_alias_proto_rawDescGZIP(), []int{1}
}

func (x *TargetAliasAttributes) GetAuthorizeSessionArguments() *AuthorizeSessionArguments {
	if x != nil {
		return x.AuthorizeSessionArguments
	}
	return nil
}

type AuthorizeSessionArguments struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// host_id is the id of the host that the session will be authorized for.
	// When specified authorizing a session using this alias will have the same
	// effect of authorizing a session to the aliase's destination_id and passing
	// in this value through the -host-id flag. If the host-id flag is also
	// specified when calling authorize-session an error will be returned unless
	// the provided host-id matches this value.
	HostId        string `protobuf:"bytes,100,opt,name=host_id,proto3" json:"host_id,omitempty" class:"public"` // @gotags: `class:"public"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeSessionArguments) Reset() {
	*x = AuthorizeSessionArguments{}
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeSessionArguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeSessionArguments) ProtoMessage() {}

func (x *AuthorizeSessionArguments) ProtoReflect() protoreflect.Message {
	mi := &file_controller_api_resources_aliases_v1_alias_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeSessionArguments.ProtoReflect.Descriptor instead.
func (*AuthorizeSessionArguments) Descriptor() ([]byte, []int) {
	return file_controller_api_resources_aliases_v1_alias_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorizeSessionArguments) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

var File_controller_api_resources_aliases_v1_alias_proto protoreflect.FileDescriptor

const file_controller_api_resources_aliases_v1_alias_proto_rawDesc = "" +
	"\n" +
	"/controller/api/resources/aliases/v1/alias.proto\x12#controller.api.resources.aliases.v1\x1a.controller/api/resources/scopes/v1/scope.proto\x1a*controller/custom_options/v1/options.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xf3\t\n" +
	"\x05Alias\x12\x14\n" +
	"\x02id\x18\n" +
	" \x01(\tB\x04\xe2A\x01\x03R\x02id\x12\x1a\n" +
	"\bscope_id\x18\x14 \x01(\tR\bscope_id\x12I\n" +
	"\x05scope\x18\x1e \x01(\v2-.controller.api.resources.scopes.v1.ScopeInfoB\x04\xe2A\x01\x03R\x05scope\x12F\n" +
	"\x04name\x18( \x01(\v2\x1c.google.protobuf.StringValueB\x14\xa0\xda)\x01\xc2\xdd)\f\n" +
	"\x04name\x12\x04NameR\x04name\x12b\n" +
	"\vdescription\x182 \x01(\v2\x1c.google.protobuf.StringValueB\"\xa0\xda)\x01\xc2\xdd)\x1a\n" +
	"\vdescription\x12\vDescriptionR\vdescription\x12D\n" +
	"\fcreated_time\x18< \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\fcreated_time\x12D\n" +
	"\fupdated_time\x18F \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\fupdated_time\x12\x18\n" +
	"\aversion\x18P \x01(\rR\aversion\x12,\n" +
	"\x05value\x18Z \x01(\tB\x16\xa0\xda)\x01\xc2\xdd)\x0e\n" +
	"\x05value\x12\x05ValueR\x05value\x12m\n" +
	"\x0edestination_id\x18d \x01(\v2\x1c.google.protobuf.StringValueB'\xa0\xda)\x01\xc2\xdd)\x1f\n" +
	"\x0edestination_id\x12\rDestinationIdR\x0edestination_id\x12\x12\n" +
	"\x04type\x18n \x01(\tR\x04type\x12\x92\x03\n" +
	"\n" +
	"attributes\x18x \x01(\v2\x17.google.protobuf.StructB\xd6\x02\x92A\xc3\x022\x87\x02The attributes that are applicable for the specific alias type. The schema of this field depends on the type of resource that you create the alias for.\n" +
	"For target aliases, the parameters are:\n" +
	"```json\n" +
	"{\n" +
	"  \"authorize_session_arguments\": {\"host_id\":\"host_id\"}\n" +
	"}\n" +
	"```\n" +
	"J7{\"authorize_session_arguments\": {\"host_id\": \"host_id\"}}\xa0\xda)\x01\x9a\xe3)\adefaultH\x00R\n" +
	"attributes\x12\x94\x01\n" +
	"\x17target_alias_attributes\x18y \x01(\v2:.controller.api.resources.aliases.v1.TargetAliasAttributesB\x1e\xa0\xda)\x01\x9a\xe3)\x06target\xfa\xd2\xe4\x93\x02\n" +
	"\x12\bINTERNALH\x00R\x15targetAliasAttributes\x125\n" +
	"\x12authorized_actions\x18\xac\x02 \x03(\tB\x04\xe2A\x01\x03R\x12authorized_actionsB\a\n" +
	"\x05attrs\"\x9a\x01\n" +
	"\x15TargetAliasAttributes\x12\x80\x01\n" +
	"\x1bauthorize_session_arguments\x18\x01 \x01(\v2>.controller.api.resources.aliases.v1.AuthorizeSessionArgumentsR\x1bauthorize_session_arguments\"w\n" +
	"\x19AuthorizeSessionArguments\x12Z\n" +
	"\ahost_id\x18d \x01(\tB@\xa0\xda)\x01\xc2\xdd)8\n" +
	".attributes.authorize_session_arguments.host_id\x12\x06HostIdR\ahost_idBPZNgithub.com/hashicorp/boundary/sdk/pbs/controller/api/resources/aliases;aliasesb\x06proto3"

var (
	file_controller_api_resources_aliases_v1_alias_proto_rawDescOnce sync.Once
	file_controller_api_resources_aliases_v1_alias_proto_rawDescData []byte
)

func file_controller_api_resources_aliases_v1_alias_proto_rawDescGZIP() []byte {
	file_controller_api_resources_aliases_v1_alias_proto_rawDescOnce.Do(func() {
		file_controller_api_resources_aliases_v1_alias_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_api_resources_aliases_v1_alias_proto_rawDesc), len(file_controller_api_resources_aliases_v1_alias_proto_rawDesc)))
	})
	return file_controller_api_resources_aliases_v1_alias_proto_rawDescData
}

var file_controller_api_resources_aliases_v1_alias_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_controller_api_resources_aliases_v1_alias_proto_goTypes = []any{
	(*Alias)(nil),                     // 0: controller.api.resources.aliases.v1.Alias
	(*TargetAliasAttributes)(nil),     // 1: controller.api.resources.aliases.v1.TargetAliasAttributes
	(*AuthorizeSessionArguments)(nil), // 2: controller.api.resources.aliases.v1.AuthorizeSessionArguments
	(*scopes.ScopeInfo)(nil),          // 3: controller.api.resources.scopes.v1.ScopeInfo
	(*wrapperspb.StringValue)(nil),    // 4: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),     // 5: google.protobuf.Timestamp
	(*structpb.Struct)(nil),           // 6: google.protobuf.Struct
}
var file_controller_api_resources_aliases_v1_alias_proto_depIdxs = []int32{
	3, // 0: controller.api.resources.aliases.v1.Alias.scope:type_name -> controller.api.resources.scopes.v1.ScopeInfo
	4, // 1: controller.api.resources.aliases.v1.Alias.name:type_name -> google.protobuf.StringValue
	4, // 2: controller.api.resources.aliases.v1.Alias.description:type_name -> google.protobuf.StringValue
	5, // 3: controller.api.resources.aliases.v1.Alias.created_time:type_name -> google.protobuf.Timestamp
	5, // 4: controller.api.resources.aliases.v1.Alias.updated_time:type_name -> google.protobuf.Timestamp
	4, // 5: controller.api.resources.aliases.v1.Alias.destination_id:type_name -> google.protobuf.StringValue
	6, // 6: controller.api.resources.aliases.v1.Alias.attributes:type_name -> google.protobuf.Struct
	1, // 7: controller.api.resources.aliases.v1.Alias.target_alias_attributes:type_name -> controller.api.resources.aliases.v1.TargetAliasAttributes
	2, // 8: controller.api.resources.aliases.v1.TargetAliasAttributes.authorize_session_arguments:type_name -> controller.api.resources.aliases.v1.AuthorizeSessionArguments
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_controller_api_resources_aliases_v1_alias_proto_init() }
func file_controller_api_resources_aliases_v1_alias_proto_init() {
	if File_controller_api_resources_aliases_v1_alias_proto != nil {
		return
	}
	file_controller_api_resources_aliases_v1_alias_proto_msgTypes[0].OneofWrappers = []any{
		(*Alias_Attributes)(nil),
		(*Alias_TargetAliasAttributes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_api_resources_aliases_v1_alias_proto_rawDesc), len(file_controller_api_resources_aliases_v1_alias_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_api_resources_aliases_v1_alias_proto_goTypes,
		DependencyIndexes: file_controller_api_resources_aliases_v1_alias_proto_depIdxs,
		MessageInfos:      file_controller_api_resources_aliases_v1_alias_proto_msgTypes,
	}.Build()
	File_controller_api_resources_aliases_v1_alias_proto = out.File
	file_controller_api_resources_aliases_v1_alias_proto_goTypes = nil
	file_controller_api_resources_aliases_v1_alias_proto_depIdxs = nil
}
